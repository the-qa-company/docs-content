{
    "basePath": "/",
    "definitions": {
        "Aggregate": {
            "properties": {
                "answerContext": {
                    "$ref": "#/definitions/QaContext"
                },
                "excluded": {
                    "type": "boolean"
                },
                "occurance": {
                    "format": "int32",
                    "type": "integer"
                },
                "uri": {
                    "type": "string"
                }
            },
            "title": "Aggregate",
            "type": "object"
        },
        "Answer": {
            "properties": {
                "kbAnswer": {
                    "$ref": "#/definitions/QaResult"
                },
                "textAnswer": {
                    "$ref": "#/definitions/PredictResult"
                }
            },
            "title": "Answer",
            "type": "object"
        },
        "AnswerModel": {
            "properties": {
                "answer": {
                    "type": "string"
                },
                "context": {
                    "type": "string"
                },
                "document_id": {
                    "type": "string"
                },
                "end_logits": {
                    "items": {
                        "type": "number"
                    },
                    "type": "array"
                },
                "end_probability": {
                    "type": "number"
                },
                "meta": {
                    "$ref": "#/definitions/DocumentMeta"
                },
                "offsets_in_context": {
                    "items": {
                        "$ref": "#/definitions/OffsetsContext"
                    },
                    "type": "array"
                },
                "ranking": {
                    "format": "int32",
                    "type": "integer"
                },
                "score": {
                    "type": "number"
                },
                "start_logits": {
                    "items": {
                        "type": "number"
                    },
                    "type": "array"
                },
                "start_probability": {
                    "type": "number"
                },
                "tokens": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "title": "AnswerModel",
            "type": "object"
        },
        "ApiResponse": {
            "properties": {
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            },
            "title": "ApiResponse",
            "type": "object"
        },
        "AutocompletionConfig": {
            "properties": {
                "dataSuggestion": {
                    "type": "boolean"
                },
                "dataSuggestionType": {
                    "type": "string"
                },
                "graphSuggestion": {
                    "type": "boolean"
                },
                "questionSuggestion": {
                    "type": "boolean"
                }
            },
            "title": "AutocompletionConfig",
            "type": "object"
        },
        "Candidate": {
            "properties": {
                "body": {
                    "type": "string"
                },
                "bodyModification": {
                    "type": "string"
                },
                "confidence": {
                    "format": "double",
                    "type": "number"
                },
                "f_measure": {
                    "format": "double",
                    "type": "number"
                },
                "feature": {
                    "additionalProperties": {
                        "format": "double",
                        "type": "number"
                    },
                    "type": "object"
                },
                "groupBy": {
                    "type": "string"
                },
                "head": {
                    "type": "string"
                },
                "hiddenProperties": {
                    "items": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "type": "array"
                },
                "kb": {
                    "type": "string"
                },
                "limit": {
                    "type": "string"
                },
                "modifiers": {
                    "items": {
                        "$ref": "#/definitions/ModifierPattern"
                    },
                    "type": "array"
                },
                "numberTriplePattern": {
                    "items": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "type": "array"
                },
                "orderBy": {
                    "type": "string"
                },
                "query": {
                    "type": "string"
                },
                "resources": {
                    "items": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "type": "array"
                },
                "score": {
                    "format": "double",
                    "type": "number"
                },
                "scoreDetail": {
                    "type": "string"
                },
                "triplePattern": {
                    "items": {
                        "$ref": "#/definitions/Triple"
                    },
                    "type": "array"
                },
                "user": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                },
                "var": {
                    "items": {
                        "$ref": "#/definitions/Node"
                    },
                    "type": "array"
                }
            },
            "title": "Candidate",
            "type": "object"
        },
        "Cell": {
            "properties": {
                "content": {
                    "type": "string"
                },
                "link": {
                    "type": "string"
                }
            },
            "title": "Cell",
            "type": "object"
        },
        "ChangePassword": {
            "properties": {
                "password": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                }
            },
            "title": "ChangePassword",
            "type": "object"
        },
        "ChangePasswordAdmin": {
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            },
            "title": "ChangePasswordAdmin",
            "type": "object"
        },
        "ChatRequest": {
            "properties": {
                "chat": {
                    "type": "boolean"
                },
                "id": {
                    "format": "int32",
                    "type": "integer"
                },
                "knowledgeGraph": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "language": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "question": {
                    "type": "string"
                },
                "questionContext": {
                    "items": {
                        "items": {
                            "$ref": "#/definitions/QuestionContext"
                        },
                        "type": "array"
                    },
                    "type": "array"
                },
                "timeout": {
                    "format": "int32",
                    "type": "integer"
                },
                "user": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "title": "ChatRequest",
            "type": "object"
        },
        "ChatRequestTrain": {
            "properties": {
                "knowledgeGraph": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "language": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "question": {
                    "type": "string"
                },
                "questionContext": {
                    "items": {
                        "items": {
                            "$ref": "#/definitions/QuestionContext"
                        },
                        "type": "array"
                    },
                    "type": "array"
                },
                "sparql": {
                    "type": "string"
                },
                "user": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "title": "ChatRequestTrain",
            "type": "object"
        },
        "Chunk": {
            "properties": {
                "disambiguation": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "text": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "uri": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                }
            },
            "title": "Chunk",
            "type": "object"
        },
        "CollectionGetModel": {
            "properties": {
                "createTime": {
                    "type": "string"
                },
                "docStride": {
                    "format": "int32",
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "indexName": {
                    "type": "string"
                },
                "isUpdating": {
                    "type": "boolean"
                },
                "language": {
                    "type": "string"
                },
                "maxSeqLen": {
                    "format": "int32",
                    "type": "integer"
                },
                "noAnsBoost": {
                    "format": "int32",
                    "type": "integer"
                },
                "returnNoAns": {
                    "type": "boolean"
                },
                "splitBy": {
                    "type": "string"
                },
                "splitLength": {
                    "format": "int32",
                    "type": "integer"
                },
                "topKRanker": {
                    "format": "int32",
                    "type": "integer"
                },
                "topKReader": {
                    "format": "int32",
                    "type": "integer"
                },
                "topKRetriever": {
                    "format": "int32",
                    "type": "integer"
                },
                "useFallback": {
                    "type": "boolean"
                },
                "useRanker": {
                    "type": "boolean"
                },
                "useReader": {
                    "type": "boolean"
                },
                "username": {
                    "type": "string"
                },
                "weightText": {
                    "type": "number"
                },
                "weightTitle": {
                    "type": "number"
                }
            },
            "required": [
                "indexName",
                "username"
            ],
            "title": "CollectionGetModel",
            "type": "object"
        },
        "CollectionPostModel": {
            "properties": {
                "docStride": {
                    "format": "int32",
                    "type": "integer"
                },
                "indexName": {
                    "type": "string"
                },
                "language": {
                    "type": "string"
                },
                "maxSeqLen": {
                    "format": "int32",
                    "type": "integer"
                },
                "noAnsBoost": {
                    "format": "int32",
                    "type": "integer"
                },
                "returnNoAns": {
                    "type": "boolean"
                },
                "splitBy": {
                    "type": "string"
                },
                "splitLength": {
                    "format": "int32",
                    "type": "integer"
                },
                "topKReader": {
                    "format": "int32",
                    "type": "integer"
                },
                "topKRetriever": {
                    "format": "int32",
                    "type": "integer"
                },
                "useFallback": {
                    "type": "boolean"
                },
                "useReader": {
                    "type": "boolean"
                },
                "username": {
                    "type": "string"
                },
                "weightText": {
                    "type": "number"
                },
                "weightTitle": {
                    "type": "number"
                }
            },
            "required": [
                "indexName",
                "username"
            ],
            "title": "CollectionPostModel",
            "type": "object"
        },
        "CollectionPutModel": {
            "properties": {
                "docStride": {
                    "format": "int32",
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "maxSeqLen": {
                    "format": "int32",
                    "type": "integer"
                },
                "noAnsBoost": {
                    "format": "int32",
                    "type": "integer"
                },
                "returnNoAns": {
                    "type": "boolean"
                },
                "splitBy": {
                    "type": "string"
                },
                "splitLength": {
                    "format": "int32",
                    "type": "integer"
                },
                "topKReader": {
                    "format": "int32",
                    "type": "integer"
                },
                "topKRetriever": {
                    "format": "int32",
                    "type": "integer"
                },
                "useFallback": {
                    "type": "boolean"
                },
                "useReader": {
                    "type": "boolean"
                },
                "weightText": {
                    "type": "number"
                },
                "weightTitle": {
                    "type": "number"
                }
            },
            "required": [
                "id"
            ],
            "title": "CollectionPutModel",
            "type": "object"
        },
        "ConfusionMatrix": {
            "properties": {
                "accuracy": {
                    "format": "double",
                    "type": "number"
                },
                "ff": {
                    "format": "double",
                    "type": "number"
                },
                "ft": {
                    "format": "double",
                    "type": "number"
                },
                "precision": {
                    "format": "double",
                    "type": "number"
                },
                "recall": {
                    "format": "double",
                    "type": "number"
                },
                "tf": {
                    "format": "double",
                    "type": "number"
                },
                "tt": {
                    "format": "double",
                    "type": "number"
                }
            },
            "title": "ConfusionMatrix",
            "type": "object"
        },
        "Connection": {
            "properties": {
                "distances": {
                    "additionalProperties": {
                        "items": {
                            "format": "int64",
                            "type": "integer"
                        },
                        "type": "array"
                    },
                    "type": "object"
                }
            },
            "title": "Connection",
            "type": "object"
        },
        "Coordinates": {
            "properties": {
                "latitude": {
                    "format": "float",
                    "type": "number"
                },
                "longitude": {
                    "format": "float",
                    "type": "number"
                }
            },
            "title": "Coordinates",
            "type": "object"
        },
        "Dataset": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "type": {
                    "enum": [
                        "GRAPH",
                        "TEXT"
                    ],
                    "type": "string"
                },
                "user": {
                    "type": "string"
                }
            },
            "title": "Dataset",
            "type": "object"
        },
        "DatasetConfigRequest": {
            "properties": {
                "autocompletionConfig": {
                    "$ref": "#/definitions/AutocompletionConfig"
                },
                "dataset": {
                    "type": "string"
                },
                "featureTypes": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "indexConfig": {
                    "$ref": "#/definitions/IndexConfig"
                },
                "instanceMappings": {
                    "additionalProperties": {
                        "items": {
                            "$ref": "#/definitions/UriMapping"
                        },
                        "type": "array"
                    },
                    "type": "object"
                },
                "lang": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "languages": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "numberTriples": {
                    "format": "int32",
                    "type": "integer"
                },
                "properties": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "propertiesModifiersExpansion": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "propertiesPropertiesExpansion": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "propertyMappings": {
                    "additionalProperties": {
                        "items": {
                            "$ref": "#/definitions/UriMapping"
                        },
                        "type": "array"
                    },
                    "type": "object"
                },
                "rankerConfig": {
                    "$ref": "#/definitions/RankerConfig"
                },
                "recursiveIteration": {
                    "format": "int32",
                    "type": "integer"
                },
                "stopWords": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "type": "object"
                },
                "subclass": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "type": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "typeProperties": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "uiMappings": {
                    "$ref": "#/definitions/UIMappings"
                },
                "visualizationOrder": {
                    "items": {
                        "enum": [
                            "SIMPLE",
                            "LIST",
                            "FACET",
                            "IMAGES",
                            "TABLE",
                            "MAP",
                            "TIME_SERIES",
                            "TIME",
                            "TIMEOUT"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "title": "DatasetConfigRequest",
            "type": "object"
        },
        "DatasetDetail": {
            "properties": {
                "dataset": {
                    "type": "string"
                },
                "freeTextDetails": {
                    "$ref": "#/definitions/CollectionGetModel"
                },
                "id": {
                    "format": "int64",
                    "type": "integer"
                },
                "indexType": {
                    "type": "string"
                },
                "kgDetails": {
                    "$ref": "#/definitions/DatasetDetailKg"
                },
                "username": {
                    "type": "string"
                }
            },
            "title": "DatasetDetail",
            "type": "object"
        },
        "DatasetDetailKg": {
            "properties": {
                "access": {
                    "type": "boolean"
                },
                "config": {
                    "$ref": "#/definitions/DatasetConfigRequest"
                },
                "dataset": {
                    "type": "string"
                },
                "id": {
                    "format": "int64",
                    "type": "integer"
                },
                "indexType": {
                    "type": "string"
                },
                "indexed": {
                    "type": "boolean"
                },
                "sharedUsers": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "size": {
                    "format": "int64",
                    "type": "integer"
                },
                "uploaded": {
                    "type": "boolean"
                },
                "user": {
                    "$ref": "#/definitions/User"
                }
            },
            "title": "DatasetDetailKg",
            "type": "object"
        },
        "DatasetPairs": {
            "properties": {
                "dataset": {
                    "type": "string"
                },
                "knowledgebase": {
                    "type": "string"
                },
                "language": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "pairs": {
                    "items": {
                        "$ref": "#/definitions/Pair"
                    },
                    "type": "array"
                },
                "user": {
                    "type": "string"
                }
            },
            "title": "DatasetPairs",
            "type": "object"
        },
        "DocumentMeta": {
            "properties": {
                "_split_id": {
                    "format": "int32",
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "session_id": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            },
            "title": "DocumentMeta",
            "type": "object"
        },
        "DocumentModel": {
            "properties": {
                "content": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "meta": {
                    "$ref": "#/definitions/DocumentMeta"
                },
                "score": {
                    "type": "number"
                }
            },
            "title": "DocumentModel",
            "type": "object"
        },
        "Fact": {
            "properties": {
                "object": {
                    "$ref": "#/definitions/LabeledNode"
                },
                "predicate": {
                    "$ref": "#/definitions/LabeledNode"
                }
            },
            "title": "Fact",
            "type": "object"
        },
        "FeedbackEvaluation": {
            "properties": {
                "confusionMatrix": {
                    "$ref": "#/definitions/ConfusionMatrix"
                },
                "numberQuestions": {
                    "format": "int32",
                    "type": "integer"
                },
                "precisionAtOne": {
                    "format": "double",
                    "type": "number"
                },
                "questions": {
                    "items": {
                        "$ref": "#/definitions/Question"
                    },
                    "type": "array"
                }
            },
            "title": "FeedbackEvaluation",
            "type": "object"
        },
        "FeedbackGetModel": {
            "properties": {
                "answerCorrect": {
                    "type": "boolean"
                },
                "answerStart": {
                    "format": "int32",
                    "type": "integer"
                },
                "answerText": {
                    "type": "string"
                },
                "confidence": {
                    "type": "number"
                },
                "context": {
                    "type": "string"
                },
                "currentModelRight": {
                    "type": "boolean"
                },
                "documentCorrect": {
                    "type": "boolean"
                },
                "feedbackType": {
                    "type": "string"
                },
                "id": {
                    "format": "int32",
                    "type": "integer"
                },
                "indexId": {
                    "format": "int32",
                    "type": "integer"
                },
                "question": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            },
            "title": "FeedbackGetModel",
            "type": "object"
        },
        "FeedbackMessageResponse": {
            "properties": {
                "message": {
                    "type": "string"
                }
            },
            "title": "FeedbackMessageResponse",
            "type": "object"
        },
        "FeedbackPostModel": {
            "properties": {
                "answerCorrect": {
                    "type": "boolean"
                },
                "answerStart": {
                    "format": "int32",
                    "type": "integer"
                },
                "answerText": {
                    "type": "string"
                },
                "confidence": {
                    "type": "number"
                },
                "context": {
                    "type": "string"
                },
                "documentCorrect": {
                    "type": "boolean"
                },
                "feedbackType": {
                    "enum": [
                        "qa",
                        "annotation"
                    ],
                    "example": "qa",
                    "type": "string"
                },
                "indexId": {
                    "format": "int32",
                    "type": "integer"
                },
                "question": {
                    "type": "string"
                }
            },
            "required": [
                "answerCorrect",
                "answerStart",
                "answerText",
                "confidence",
                "context",
                "documentCorrect",
                "feedbackType",
                "indexId",
                "question"
            ],
            "title": "FeedbackPostModel",
            "type": "object"
        },
        "FeedbackPutModel": {
            "properties": {
                "answerCorrect": {
                    "type": "boolean"
                },
                "answerStart": {
                    "format": "int32",
                    "type": "integer"
                },
                "answerText": {
                    "type": "string"
                },
                "confidence": {
                    "type": "number"
                },
                "context": {
                    "type": "string"
                },
                "currentModelRight": {
                    "type": "boolean"
                },
                "id": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "required": [
                "confidence",
                "currentModelRight",
                "id"
            ],
            "title": "FeedbackPutModel",
            "type": "object"
        },
        "FeedbackRequest": {
            "properties": {
                "context": {
                    "items": {
                        "items": {
                            "$ref": "#/definitions/QuestionContext"
                        },
                        "type": "array"
                    },
                    "type": "array"
                },
                "correct": {
                    "type": "boolean"
                },
                "knowledgebase": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "language": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "question": {
                    "type": "string"
                },
                "questionId": {
                    "format": "int32",
                    "type": "integer"
                },
                "sparql": {
                    "type": "string"
                },
                "sparqlKB": {
                    "type": "string"
                },
                "user": {
                    "type": "string"
                },
                "validated": {
                    "type": "boolean"
                }
            },
            "title": "FeedbackRequest",
            "type": "object"
        },
        "GeneralResponse": {
            "properties": {
                "message": {
                    "type": "string"
                }
            },
            "title": "GeneralResponse",
            "type": "object"
        },
        "HasLuceneIndexResult": {
            "properties": {
                "hasLuceneIndex": {
                    "type": "boolean"
                }
            },
            "title": "HasLuceneIndexResult",
            "type": "object"
        },
        "IndexConfig": {
            "properties": {
                "dataset": {
                    "type": "string"
                },
                "lang": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "properties": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "subclass": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "type": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "title": "IndexConfig",
            "type": "object"
        },
        "IndexModel": {
            "properties": {
                "documents": {
                    "items": {
                        "$ref": "#/definitions/DocumentModel"
                    },
                    "type": "array"
                },
                "indexName": {
                    "type": "string"
                }
            },
            "title": "IndexModel",
            "type": "object"
        },
        "IsMergingResult": {
            "properties": {
                "merging": {
                    "type": "boolean"
                }
            },
            "title": "IsMergingResult",
            "type": "object"
        },
        "JobGetModel": {
            "properties": {
                "id": {
                    "type": "string"
                },
                "job_info": {
                    "type": "string"
                },
                "job_status": {
                    "type": "string"
                },
                "submission_datetime": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            },
            "title": "JobGetModel",
            "type": "object"
        },
        "JobSubmissionResponse": {
            "properties": {
                "job_id": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            },
            "title": "JobSubmissionResponse",
            "type": "object"
        },
        "JwtAuthenticationResponse": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "tokenType": {
                    "type": "string"
                }
            },
            "title": "JwtAuthenticationResponse",
            "type": "object"
        },
        "LabeledNode": {
            "properties": {
                "label": {
                    "type": "string"
                },
                "uri": {
                    "type": "string"
                }
            },
            "title": "LabeledNode",
            "type": "object"
        },
        "Link": {
            "properties": {
                "answerContext": {
                    "$ref": "#/definitions/QaContext"
                },
                "conceptCloud": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "confidence": {
                    "format": "double",
                    "type": "number"
                },
                "excluded": {
                    "type": "boolean"
                },
                "excludedConcepts": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "match": {
                    "type": "boolean"
                },
                "uri": {
                    "type": "string"
                }
            },
            "title": "Link",
            "type": "object"
        },
        "LinkEnchanced": {
            "properties": {
                "dataset": {
                    "type": "string"
                },
                "limit": {
                    "format": "int32",
                    "type": "integer"
                },
                "texts": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "title": "LinkEnchanced",
            "type": "object"
        },
        "LinkPayload": {
            "properties": {
                "knowledgebase": {
                    "type": "string"
                },
                "language": {
                    "type": "string"
                },
                "limit": {
                    "format": "int32",
                    "type": "integer"
                },
                "texts": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "user": {
                    "type": "string"
                }
            },
            "title": "LinkPayload",
            "type": "object"
        },
        "LinkRange": {
            "properties": {
                "knowledgebase": {
                    "type": "string"
                },
                "language": {
                    "type": "string"
                },
                "limit": {
                    "format": "int32",
                    "type": "integer"
                },
                "range": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "texts": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "user": {
                    "type": "string"
                }
            },
            "title": "LinkRange",
            "type": "object"
        },
        "LinkingResult": {
            "properties": {
                "aggregateList": {
                    "items": {
                        "$ref": "#/definitions/Aggregate"
                    },
                    "type": "array"
                },
                "linksList": {
                    "items": {
                        "$ref": "#/definitions/Links"
                    },
                    "type": "array"
                }
            },
            "title": "LinkingResult",
            "type": "object"
        },
        "Links": {
            "properties": {
                "links": {
                    "items": {
                        "$ref": "#/definitions/Link"
                    },
                    "type": "array"
                },
                "text": {
                    "type": "string"
                }
            },
            "title": "Links",
            "type": "object"
        },
        "LoginRequest": {
            "properties": {
                "password": {
                    "type": "string"
                },
                "usernameOrEmail": {
                    "type": "string"
                }
            },
            "title": "LoginRequest",
            "type": "object"
        },
        "LuceneIndexRequestResult": {
            "properties": {
                "completed": {
                    "type": "boolean"
                }
            },
            "title": "LuceneIndexRequestResult",
            "type": "object"
        },
        "MergeRequestResult": {
            "properties": {
                "completed": {
                    "type": "boolean"
                }
            },
            "title": "MergeRequestResult",
            "type": "object"
        },
        "ModifierPattern": {
            "properties": {
                "clause": {
                    "type": "string"
                },
                "end": {
                    "format": "int32",
                    "type": "integer"
                },
                "id": {
                    "format": "int32",
                    "type": "integer"
                },
                "operator": {
                    "type": "string"
                },
                "regex": {
                    "type": "string"
                },
                "start": {
                    "format": "int32",
                    "type": "integer"
                },
                "var": {
                    "type": "string"
                }
            },
            "title": "ModifierPattern",
            "type": "object"
        },
        "MyAnnotation": {
            "properties": {
                "candidates": {
                    "items": {
                        "$ref": "#/definitions/Candidate"
                    },
                    "type": "array"
                },
                "connection": {
                    "$ref": "#/definitions/Connection"
                },
                "context": {
                    "items": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "type": "array"
                },
                "end": {
                    "items": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "type": "array"
                },
                "endSpanInCaracters": {
                    "items": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "type": "array"
                },
                "jsonAnswer": {
                    "type": "string"
                },
                "knowledgeBaseUris": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "knowledgebases": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "languages": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "lexicalization": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "modifiers": {
                    "items": {
                        "items": {
                            "$ref": "#/definitions/ModifierPattern"
                        },
                        "type": "array"
                    },
                    "type": "array"
                },
                "numExpr": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "question": {
                    "type": "string"
                },
                "relevances": {
                    "items": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "type": "array"
                },
                "respond": {
                    "type": "boolean"
                },
                "start": {
                    "items": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "type": "array"
                },
                "startSpanInCharacters": {
                    "items": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "type": "array"
                },
                "stopWords": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "text": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "timemlOutput": {
                    "type": "string"
                },
                "tokens": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "uris": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "urisTypes": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "users": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "usersUris": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "title": "MyAnnotation",
            "type": "object"
        },
        "Node": {
            "properties": {
                "id": {
                    "format": "int32",
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "uri": {
                    "format": "int32",
                    "type": "integer"
                },
                "variable": {
                    "type": "boolean"
                }
            },
            "title": "Node",
            "type": "object"
        },
        "OffsetsContext": {
            "properties": {
                "end": {
                    "format": "int32",
                    "type": "integer"
                },
                "start": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "title": "OffsetsContext",
            "type": "object"
        },
        "Pair": {
            "properties": {
                "text": {
                    "type": "string"
                },
                "uris": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "title": "Pair",
            "type": "object"
        },
        "Password": {
            "properties": {
                "password": {
                    "type": "string"
                }
            },
            "title": "Password",
            "type": "object"
        },
        "PredictResult": {
            "properties": {
                "answers": {
                    "items": {
                        "$ref": "#/definitions/AnswerModel"
                    },
                    "type": "array"
                },
                "query": {
                    "type": "string"
                },
                "use_fallback": {
                    "type": "boolean"
                },
                "use_reader": {
                    "type": "boolean"
                }
            },
            "title": "PredictResult",
            "type": "object"
        },
        "QaContext": {
            "properties": {
                "audio": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "description": {
                    "type": "string"
                },
                "disambiguation": {
                    "type": "string"
                },
                "geo": {
                    "items": {
                        "$ref": "#/definitions/Coordinates"
                    },
                    "type": "array"
                },
                "geoJson": {
                    "type": "string"
                },
                "images": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "kb": {
                    "type": "string"
                },
                "label": {
                    "type": "string"
                },
                "links": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "literal": {
                    "type": "string"
                },
                "optional": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "type": "object"
                },
                "pageRank": {
                    "format": "float",
                    "type": "number"
                },
                "time": {
                    "type": "string"
                },
                "timeSeries": {
                    "type": "string"
                },
                "uri": {
                    "type": "string"
                },
                "user": {
                    "type": "string"
                },
                "video": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "title": "QaContext",
            "type": "object"
        },
        "QaContexts": {
            "properties": {
                "displayTypes": {
                    "items": {
                        "enum": [
                            "SIMPLE",
                            "LIST",
                            "FACET",
                            "IMAGES",
                            "TABLE",
                            "MAP",
                            "TIME_SERIES",
                            "TIME",
                            "TIMEOUT"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                },
                "qaContext": {
                    "items": {
                        "$ref": "#/definitions/QaContext"
                    },
                    "type": "array"
                },
                "qaTable": {
                    "$ref": "#/definitions/QaTable"
                },
                "timeout": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "title": "QaContexts",
            "type": "object"
        },
        "QaResult": {
            "properties": {
                "answer": {
                    "type": "boolean"
                },
                "interpretation": {
                    "type": "string"
                },
                "jsonResult": {
                    "type": "string"
                },
                "knowledgebases": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "languages": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "qaContexts": {
                    "$ref": "#/definitions/QaContexts"
                },
                "queries": {
                    "items": {
                        "$ref": "#/definitions/QaSparql"
                    },
                    "type": "array"
                },
                "question": {
                    "type": "string"
                }
            },
            "title": "QaResult",
            "type": "object"
        },
        "QaSparql": {
            "properties": {
                "confidence": {
                    "format": "double",
                    "type": "number"
                },
                "kb": {
                    "type": "string"
                },
                "query": {
                    "type": "string"
                },
                "user": {
                    "type": "string"
                }
            },
            "title": "QaSparql",
            "type": "object"
        },
        "QaTable": {
            "properties": {
                "numberRows": {
                    "format": "int32",
                    "type": "integer"
                },
                "table": {
                    "items": {
                        "items": {
                            "items": {
                                "$ref": "#/definitions/Cell"
                            },
                            "type": "array"
                        },
                        "type": "array"
                    },
                    "type": "array"
                }
            },
            "title": "QaTable",
            "type": "object"
        },
        "Question": {
            "properties": {
                "datasets": {
                    "items": {
                        "$ref": "#/definitions/Dataset"
                    },
                    "type": "array"
                },
                "language": {
                    "type": "string"
                },
                "question": {
                    "type": "string"
                },
                "timeout": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "title": "Question",
            "type": "object"
        },
        "QuestionContext": {
            "properties": {
                "knowledgeGraph": {
                    "type": "string"
                },
                "uri": {
                    "type": "string"
                },
                "user": {
                    "type": "string"
                }
            },
            "title": "QuestionContext",
            "type": "object"
        },
        "QuestionLog": {
            "properties": {
                "answers": {
                    "type": "string"
                },
                "confidence": {
                    "format": "double",
                    "type": "number"
                },
                "context": {
                    "type": "string"
                },
                "correct": {
                    "type": "boolean"
                },
                "currentModelRight": {
                    "type": "boolean"
                },
                "id": {
                    "format": "int32",
                    "type": "integer"
                },
                "kb": {
                    "type": "string"
                },
                "label": {
                    "format": "double",
                    "type": "number"
                },
                "language": {
                    "type": "string"
                },
                "question": {
                    "type": "string"
                },
                "sparql": {
                    "type": "string"
                },
                "sparqlKB": {
                    "type": "string"
                },
                "userId": {
                    "format": "int64",
                    "type": "integer"
                },
                "userName": {
                    "type": "string"
                },
                "validated": {
                    "type": "boolean"
                }
            },
            "title": "QuestionLog",
            "type": "object"
        },
        "RankerConfig": {
            "properties": {
                "learningRate": {
                    "format": "float",
                    "type": "number"
                },
                "minLeafSupport": {
                    "format": "int32",
                    "type": "integer"
                },
                "nTreeLeaves": {
                    "format": "int32",
                    "type": "integer"
                },
                "nTrees": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "title": "RankerConfig",
            "type": "object"
        },
        "ReadDocumentsResponse": {
            "properties": {
                "elasticsearch": {
                    "items": {
                        "$ref": "#/definitions/IndexModel"
                    },
                    "type": "array"
                }
            },
            "title": "ReadDocumentsResponse",
            "type": "object"
        },
        "RemoveAllQuestions": {
            "properties": {
                "knowledgeGraphs": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "title": "RemoveAllQuestions",
            "type": "object"
        },
        "RemoveRequest": {
            "properties": {
                "questionIds": {
                    "items": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "type": "array"
                }
            },
            "title": "RemoveRequest",
            "type": "object"
        },
        "ResetPassword": {
            "properties": {
                "email": {
                    "type": "string"
                }
            },
            "title": "ResetPassword",
            "type": "object"
        },
        "Role": {
            "properties": {
                "id": {
                    "format": "int64",
                    "type": "integer"
                },
                "name": {
                    "enum": [
                        "ROLE_USER",
                        "ROLE_ADMIN"
                    ],
                    "type": "string"
                }
            },
            "title": "Role",
            "type": "object"
        },
        "SPARQLToUser": {
            "properties": {
                "interpretation": {
                    "type": "string"
                },
                "kb": {
                    "type": "string"
                },
                "lang": {
                    "type": "string"
                },
                "sparql": {
                    "type": "string"
                }
            },
            "title": "SPARQLToUser",
            "type": "object"
        },
        "SignUpRequest": {
            "properties": {
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            },
            "title": "SignUpRequest",
            "type": "object"
        },
        "StreamingResponseBody": {
            "title": "StreamingResponseBody",
            "type": "object"
        },
        "Suggestion": {
            "properties": {
                "kb": {
                    "type": "string"
                },
                "language": {
                    "type": "string"
                },
                "question": {
                    "type": "string"
                },
                "user": {
                    "type": "string"
                }
            },
            "title": "Suggestion",
            "type": "object"
        },
        "SummaServer": {
            "properties": {
                "facts": {
                    "items": {
                        "$ref": "#/definitions/Fact"
                    },
                    "type": "array"
                },
                "subject": {
                    "$ref": "#/definitions/LabeledNode"
                }
            },
            "title": "SummaServer",
            "type": "object"
        },
        "Time": {
            "properties": {
                "begin": {
                    "format": "int32",
                    "type": "integer"
                },
                "end": {
                    "format": "int32",
                    "type": "integer"
                },
                "time": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            },
            "title": "Time",
            "type": "object"
        },
        "TrainMessageResponse": {
            "properties": {
                "message": {
                    "type": "string"
                }
            },
            "title": "TrainMessageResponse",
            "type": "object"
        },
        "Triple": {
            "properties": {
                "kb": {
                    "type": "string"
                },
                "object": {
                    "$ref": "#/definitions/Node"
                },
                "objectIsVariable": {
                    "type": "boolean"
                },
                "predicate": {
                    "$ref": "#/definitions/Node"
                },
                "predicateIsVariable": {
                    "type": "boolean"
                },
                "resources": {
                    "items": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "type": "array"
                },
                "subject": {
                    "$ref": "#/definitions/Node"
                },
                "subjectIsVariable": {
                    "type": "boolean"
                }
            },
            "title": "Triple",
            "type": "object"
        },
        "UIMappings": {
            "properties": {
                "coordinate": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "dataset": {
                    "type": "string"
                },
                "dbpedia": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "description": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "disambiguation": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "doi": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "facebook": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "geometry": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "github": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "homepage": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "ignore": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "image": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "instagram": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "label": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "latitude": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "linkedin": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "longitude": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "mainLabel": {
                    "type": "string"
                },
                "optional": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "orcid": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "osmRelation": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "time": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "timeSeries": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "twitter": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "wikidata": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "wikipedia": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "youtube": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "title": "UIMappings",
            "type": "object"
        },
        "UriMapping": {
            "properties": {
                "lexicalization": {
                    "type": "string"
                },
                "uri": {
                    "type": "string"
                }
            },
            "title": "UriMapping",
            "type": "object"
        },
        "User": {
            "properties": {
                "created": {
                    "format": "date-time",
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "id": {
                    "format": "int64",
                    "type": "integer"
                },
                "lastLogin": {
                    "format": "date-time",
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "quotaKBnumber": {
                    "format": "int32",
                    "type": "integer"
                },
                "quotaKBsize": {
                    "format": "int64",
                    "type": "integer"
                },
                "roles": {
                    "items": {
                        "$ref": "#/definitions/Role"
                    },
                    "type": "array"
                },
                "updated": {
                    "format": "date-time",
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            },
            "title": "User",
            "type": "object"
        },
        "UserDataset": {
            "properties": {
                "access": {
                    "type": "boolean"
                },
                "dataset": {
                    "type": "string"
                },
                "id": {
                    "format": "int64",
                    "type": "integer"
                },
                "indexType": {
                    "type": "string"
                },
                "indexed": {
                    "type": "boolean"
                },
                "sharedUsers": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "size": {
                    "format": "int64",
                    "type": "integer"
                },
                "uploaded": {
                    "type": "boolean"
                },
                "user": {
                    "$ref": "#/definitions/User"
                }
            },
            "title": "UserDataset",
            "type": "object"
        },
        "UserIdentityAvailability": {
            "properties": {
                "available": {
                    "type": "boolean"
                }
            },
            "title": "UserIdentityAvailability",
            "type": "object"
        },
        "UserProfile": {
            "properties": {
                "id": {
                    "format": "int64",
                    "type": "integer"
                },
                "joinedAt": {
                    "format": "date-time",
                    "type": "string"
                },
                "lastLogin": {
                    "format": "date-time",
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "quotaKBSize": {
                    "format": "int64",
                    "type": "integer"
                },
                "quotaKBnumber": {
                    "format": "int32",
                    "type": "integer"
                },
                "role": {
                    "items": {
                        "$ref": "#/definitions/Role"
                    },
                    "type": "array"
                },
                "username": {
                    "type": "string"
                }
            },
            "title": "UserProfile",
            "type": "object"
        }
    },
    "host": "qanswer-core1.univ-st-etienne.fr",
    "info": {
        "contact": {
            "email": "info@qanswer.eu",
            "name": "QAnswer",
            "url": "www.the-qa-company.com"
        },
        "description": "APIs provided by QAnswer",
        "title": "QAnswer: Api Documentation",
        "version": "1.0"
    },
    "paths": {
        "/": {
            "get": {
                "deprecated": false,
                "operationId": "serveUsingGET",
                "parameters": [
                    {
                        "description": "authorization",
                        "in": "body",
                        "name": "authorization",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "do_inspect",
                        "in": "query",
                        "name": "do_inspect",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "url",
                        "in": "query",
                        "name": "url",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "username",
                        "in": "body",
                        "name": "username",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "format": "byte",
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "summary": "serve",
                "tags": [
                    "static-controller"
                ],
                "x-codeSamples": [
                    {
                        "lang": "Node + Request",
                        "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://qanswer-core1.univ-st-etienne.fr/',\n  qs: {do_inspect: 'SOME_STRING_VALUE', url: 'SOME_STRING_VALUE'},\n  headers: {'content-type': '*/*', Authorization: 'REPLACE_KEY_VALUE'},\n  body: 'string',\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
                    },
                    {
                        "lang": "Shell + Curl",
                        "source": "curl --request GET \\\n  --url 'http://qanswer-core1.univ-st-etienne.fr/?do_inspect=SOME_STRING_VALUE&url=SOME_STRING_VALUE' \\\n  --header 'Authorization: REPLACE_KEY_VALUE' \\\n  --header 'content-type: */*' \\\n  --data '\"string\"'"
                    },
                    {
                        "lang": "Shell + Httpie",
                        "source": "echo '\"string\"' |  \\\n  http GET 'http://qanswer-core1.univ-st-etienne.fr/?do_inspect=SOME_STRING_VALUE&url=SOME_STRING_VALUE' \\\n  Authorization:REPLACE_KEY_VALUE \\\n  content-type:'*/*'"
                    },
                    {
                        "lang": "Python + Python3",
                        "source": "import http.client\n\nconn = http.client.HTTPConnection(\"qanswer-core1.univ-st-etienne.fr\")\n\npayload = \"\\\"string\\\"\"\n\nheaders = {\n    'content-type': \"*/*\",\n    'Authorization': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"GET\", \"/?do_inspect=SOME_STRING_VALUE&url=SOME_STRING_VALUE\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
                    },
                    {
                        "lang": "Php + Curl",
                        "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"http://qanswer-core1.univ-st-etienne.fr/?do_inspect=SOME_STRING_VALUE&url=SOME_STRING_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_POSTFIELDS => \"\\\"string\\\"\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: REPLACE_KEY_VALUE\",\n    \"content-type: */*\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
                    },
                    {
                        "lang": "php",
                        "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('http://qanswer-core1.univ-st-etienne.fr/');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setQueryData([\n  'do_inspect' => 'SOME_STRING_VALUE',\n  'url' => 'SOME_STRING_VALUE'\n]);\n\n$request->setHeaders([\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$request->setBody('\"string\"');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
                    },
                    {
                        "lang": "Php + Http2",
                        "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$body = new http\\Message\\Body;\n$body->append('\"string\"');\n\n$request->setRequestUrl('http://qanswer-core1.univ-st-etienne.fr/');\n$request->setRequestMethod('GET');\n$request->setBody($body);\n\n$request->setQuery(new http\\QueryString([\n  'do_inspect' => 'SOME_STRING_VALUE',\n  'url' => 'SOME_STRING_VALUE'\n]));\n\n$request->setHeaders([\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
                    }
                ]
            }
        },
        "/api/answer/context": {
            "get": {
                "deprecated": false,
                "operationId": "answerContextUsingGET",
                "parameters": [
                    {
                        "default": "wikidata",
                        "description": "kb",
                        "in": "query",
                        "name": "kb",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "default": "en",
                        "description": "lang",
                        "in": "query",
                        "name": "lang",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "sparqlQuery",
                        "in": "query",
                        "name": "sparqlQuery",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": 7,
                        "description": "timeout",
                        "format": "int32",
                        "in": "query",
                        "name": "timeout",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "description": "user",
                        "in": "query",
                        "name": "user",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/QaContexts"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "summary": "Given a SPARQL query returns all information about the answer entities like label, description, images ... ",
                "tags": [
                    "answer-controller"
                ],
                "x-codeSamples": [
                    {
                        "lang": "Node + Request",
                        "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://qanswer-core1.univ-st-etienne.fr/api/answer/context',\n  qs: {\n    kb: 'wikidata',\n    lang: 'en',\n    sparqlQuery: 'SOME_STRING_VALUE',\n    timeout: '7',\n    user: 'SOME_STRING_VALUE'\n  },\n  headers: {'content-type': 'application/json', Authorization: 'REPLACE_KEY_VALUE'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
                    },
                    {
                        "lang": "Shell + Curl",
                        "source": "curl --request GET \\\n  --url 'http://qanswer-core1.univ-st-etienne.fr/api/answer/context?kb=wikidata&lang=en&sparqlQuery=SOME_STRING_VALUE&timeout=7&user=SOME_STRING_VALUE' \\\n  --header 'Authorization: REPLACE_KEY_VALUE' \\\n  --header 'content-type: application/json'"
                    },
                    {
                        "lang": "Shell + Httpie",
                        "source": "http GET 'http://qanswer-core1.univ-st-etienne.fr/api/answer/context?kb=wikidata&lang=en&sparqlQuery=SOME_STRING_VALUE&timeout=7&user=SOME_STRING_VALUE' \\\n  Authorization:REPLACE_KEY_VALUE \\\n  content-type:application/json"
                    },
                    {
                        "lang": "Python + Python3",
                        "source": "import http.client\n\nconn = http.client.HTTPConnection(\"qanswer-core1.univ-st-etienne.fr\")\n\nheaders = {\n    'content-type': \"application/json\",\n    'Authorization': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"GET\", \"/api/answer/context?kb=wikidata&lang=en&sparqlQuery=SOME_STRING_VALUE&timeout=7&user=SOME_STRING_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
                    },
                    {
                        "lang": "Php + Curl",
                        "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"http://qanswer-core1.univ-st-etienne.fr/api/answer/context?kb=wikidata&lang=en&sparqlQuery=SOME_STRING_VALUE&timeout=7&user=SOME_STRING_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: REPLACE_KEY_VALUE\",\n    \"content-type: application/json\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
                    },
                    {
                        "lang": "php",
                        "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('http://qanswer-core1.univ-st-etienne.fr/api/answer/context');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setQueryData([\n  'kb' => 'wikidata',\n  'lang' => 'en',\n  'sparqlQuery' => 'SOME_STRING_VALUE',\n  'timeout' => '7',\n  'user' => 'SOME_STRING_VALUE'\n]);\n\n$request->setHeaders([\n  'content-type' => 'application/json',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
                    },
                    {
                        "lang": "Php + Http2",
                        "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('http://qanswer-core1.univ-st-etienne.fr/api/answer/context');\n$request->setRequestMethod('GET');\n$request->setQuery(new http\\QueryString([\n  'kb' => 'wikidata',\n  'lang' => 'en',\n  'sparqlQuery' => 'SOME_STRING_VALUE',\n  'timeout' => '7',\n  'user' => 'SOME_STRING_VALUE'\n]));\n\n$request->setHeaders([\n  'content-type' => 'application/json',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
                    }
                ]
            }
        },
        "/api/answer/table": {
            "get": {
                "deprecated": false,
                "operationId": "tableContextUsingGET",
                "parameters": [
                    {
                        "default": "wikidata",
                        "description": "kb",
                        "in": "query",
                        "name": "kb",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "default": "en",
                        "description": "lang",
                        "in": "query",
                        "name": "lang",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "default": 25,
                        "description": "limit",
                        "format": "int32",
                        "in": "query",
                        "name": "limit",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "default": 0,
                        "description": "offset",
                        "format": "int32",
                        "in": "query",
                        "name": "offset",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "description": "sparqlQuery",
                        "in": "query",
                        "name": "sparqlQuery",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": 5,
                        "description": "timeout",
                        "format": "int32",
                        "in": "query",
                        "name": "timeout",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "description": "user",
                        "in": "query",
                        "name": "user",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/QaTable"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "summary": "Given a SPARQL query returns the information about the answer entities in the form of a table.",
                "tags": [
                    "answer-controller"
                ],
                "x-codeSamples": [
                    {
                        "lang": "Node + Request",
                        "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://qanswer-core1.univ-st-etienne.fr/api/answer/table',\n  qs: {\n    kb: 'wikidata',\n    lang: 'en',\n    limit: '25',\n    offset: '0',\n    sparqlQuery: 'SOME_STRING_VALUE',\n    timeout: '5',\n    user: 'SOME_STRING_VALUE'\n  },\n  headers: {'content-type': 'application/json', Authorization: 'REPLACE_KEY_VALUE'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
                    },
                    {
                        "lang": "Shell + Curl",
                        "source": "curl --request GET \\\n  --url 'http://qanswer-core1.univ-st-etienne.fr/api/answer/table?kb=wikidata&lang=en&limit=25&offset=0&sparqlQuery=SOME_STRING_VALUE&timeout=5&user=SOME_STRING_VALUE' \\\n  --header 'Authorization: REPLACE_KEY_VALUE' \\\n  --header 'content-type: application/json'"
                    },
                    {
                        "lang": "Shell + Httpie",
                        "source": "http GET 'http://qanswer-core1.univ-st-etienne.fr/api/answer/table?kb=wikidata&lang=en&limit=25&offset=0&sparqlQuery=SOME_STRING_VALUE&timeout=5&user=SOME_STRING_VALUE' \\\n  Authorization:REPLACE_KEY_VALUE \\\n  content-type:application/json"
                    },
                    {
                        "lang": "Python + Python3",
                        "source": "import http.client\n\nconn = http.client.HTTPConnection(\"qanswer-core1.univ-st-etienne.fr\")\n\nheaders = {\n    'content-type': \"application/json\",\n    'Authorization': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"GET\", \"/api/answer/table?kb=wikidata&lang=en&limit=25&offset=0&sparqlQuery=SOME_STRING_VALUE&timeout=5&user=SOME_STRING_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
                    },
                    {
                        "lang": "Php + Curl",
                        "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"http://qanswer-core1.univ-st-etienne.fr/api/answer/table?kb=wikidata&lang=en&limit=25&offset=0&sparqlQuery=SOME_STRING_VALUE&timeout=5&user=SOME_STRING_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: REPLACE_KEY_VALUE\",\n    \"content-type: application/json\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
                    },
                    {
                        "lang": "php",
                        "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('http://qanswer-core1.univ-st-etienne.fr/api/answer/table');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setQueryData([\n  'kb' => 'wikidata',\n  'lang' => 'en',\n  'limit' => '25',\n  'offset' => '0',\n  'sparqlQuery' => 'SOME_STRING_VALUE',\n  'timeout' => '5',\n  'user' => 'SOME_STRING_VALUE'\n]);\n\n$request->setHeaders([\n  'content-type' => 'application/json',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
                    },
                    {
                        "lang": "Php + Http2",
                        "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('http://qanswer-core1.univ-st-etienne.fr/api/answer/table');\n$request->setRequestMethod('GET');\n$request->setQuery(new http\\QueryString([\n  'kb' => 'wikidata',\n  'lang' => 'en',\n  'limit' => '25',\n  'offset' => '0',\n  'sparqlQuery' => 'SOME_STRING_VALUE',\n  'timeout' => '5',\n  'user' => 'SOME_STRING_VALUE'\n]));\n\n$request->setHeaders([\n  'content-type' => 'application/json',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
                    }
                ]
            }
        },
        "/api/autocomplete": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "deprecated": false,
                "operationId": "autocompleteUsingPOST",
                "parameters": [
                    {
                        "collectionFormat": "multi",
                        "description": "kb",
                        "in": "query",
                        "items": {
                            "type": "string"
                        },
                        "name": "kb",
                        "required": true,
                        "type": "array"
                    },
                    {
                        "collectionFormat": "multi",
                        "description": "lang",
                        "in": "query",
                        "items": {
                            "type": "string"
                        },
                        "name": "lang",
                        "required": true,
                        "type": "array"
                    },
                    {
                        "description": "prefix",
                        "in": "body",
                        "name": "prefix",
                        "required": true,
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/Chunk"
                            },
                            "type": "array"
                        }
                    },
                    {
                        "description": "size",
                        "format": "int32",
                        "in": "query",
                        "name": "size",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "collectionFormat": "multi",
                        "description": "user",
                        "in": "query",
                        "items": {
                            "type": "string"
                        },
                        "name": "user",
                        "required": true,
                        "type": "array"
                    }
                ],
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "items": {
                                    "$ref": "#/definitions/Chunk"
                                },
                                "type": "array"
                            },
                            "type": "array"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "summary": "Given a prefix ",
                "tags": [
                    "auto-complete-controller"
                ],
                "x-codeSamples": [
                    {
                        "lang": "Node + Request",
                        "source": "const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'http://qanswer-core1.univ-st-etienne.fr/api/autocomplete',\n  qs: {\n    kb: 'SOME_ARRAY_VALUE',\n    lang: 'SOME_ARRAY_VALUE',\n    size: 'SOME_INTEGER_VALUE',\n    user: 'SOME_ARRAY_VALUE'\n  },\n  headers: {\n    accept: 'application/json',\n    'content-type': '*/*',\n    Authorization: 'REPLACE_KEY_VALUE'\n  },\n  body: [\n    {\n      disambiguation: 'string',\n      image: 'string',\n      text: 'string',\n      type: 'string',\n      uri: 'string',\n      uuid: 'string'\n    }\n  ],\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
                    },
                    {
                        "lang": "Shell + Curl",
                        "source": "curl --request POST \\\n  --url 'http://qanswer-core1.univ-st-etienne.fr/api/autocomplete?kb=SOME_ARRAY_VALUE&lang=SOME_ARRAY_VALUE&size=SOME_INTEGER_VALUE&user=SOME_ARRAY_VALUE' \\\n  --header 'Authorization: REPLACE_KEY_VALUE' \\\n  --header 'accept: application/json' \\\n  --header 'content-type: */*' \\\n  --data '[{\"disambiguation\":\"string\",\"image\":\"string\",\"text\":\"string\",\"type\":\"string\",\"uri\":\"string\",\"uuid\":\"string\"}]'"
                    },
                    {
                        "lang": "Shell + Httpie",
                        "source": "echo '[{\"disambiguation\":\"string\",\"image\":\"string\",\"text\":\"string\",\"type\":\"string\",\"uri\":\"string\",\"uuid\":\"string\"}]' |  \\\n  http POST 'http://qanswer-core1.univ-st-etienne.fr/api/autocomplete?kb=SOME_ARRAY_VALUE&lang=SOME_ARRAY_VALUE&size=SOME_INTEGER_VALUE&user=SOME_ARRAY_VALUE' \\\n  Authorization:REPLACE_KEY_VALUE \\\n  accept:application/json \\\n  content-type:'*/*'"
                    },
                    {
                        "lang": "Python + Python3",
                        "source": "import http.client\n\nconn = http.client.HTTPConnection(\"qanswer-core1.univ-st-etienne.fr\")\n\npayload = \"[{\\\"disambiguation\\\":\\\"string\\\",\\\"image\\\":\\\"string\\\",\\\"text\\\":\\\"string\\\",\\\"type\\\":\\\"string\\\",\\\"uri\\\":\\\"string\\\",\\\"uuid\\\":\\\"string\\\"}]\"\n\nheaders = {\n    'accept': \"application/json\",\n    'content-type': \"*/*\",\n    'Authorization': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"POST\", \"/api/autocomplete?kb=SOME_ARRAY_VALUE&lang=SOME_ARRAY_VALUE&size=SOME_INTEGER_VALUE&user=SOME_ARRAY_VALUE\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
                    },
                    {
                        "lang": "Php + Curl",
                        "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"http://qanswer-core1.univ-st-etienne.fr/api/autocomplete?kb=SOME_ARRAY_VALUE&lang=SOME_ARRAY_VALUE&size=SOME_INTEGER_VALUE&user=SOME_ARRAY_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_POSTFIELDS => \"[{\\\"disambiguation\\\":\\\"string\\\",\\\"image\\\":\\\"string\\\",\\\"text\\\":\\\"string\\\",\\\"type\\\":\\\"string\\\",\\\"uri\\\":\\\"string\\\",\\\"uuid\\\":\\\"string\\\"}]\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: REPLACE_KEY_VALUE\",\n    \"accept: application/json\",\n    \"content-type: */*\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
                    },
                    {
                        "lang": "php",
                        "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('http://qanswer-core1.univ-st-etienne.fr/api/autocomplete');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setQueryData([\n  'kb' => 'SOME_ARRAY_VALUE',\n  'lang' => 'SOME_ARRAY_VALUE',\n  'size' => 'SOME_INTEGER_VALUE',\n  'user' => 'SOME_ARRAY_VALUE'\n]);\n\n$request->setHeaders([\n  'accept' => 'application/json',\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$request->setBody('[{\"disambiguation\":\"string\",\"image\":\"string\",\"text\":\"string\",\"type\":\"string\",\"uri\":\"string\",\"uuid\":\"string\"}]');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
                    },
                    {
                        "lang": "Php + Http2",
                        "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$body = new http\\Message\\Body;\n$body->append('[{\"disambiguation\":\"string\",\"image\":\"string\",\"text\":\"string\",\"type\":\"string\",\"uri\":\"string\",\"uuid\":\"string\"}]');\n\n$request->setRequestUrl('http://qanswer-core1.univ-st-etienne.fr/api/autocomplete');\n$request->setRequestMethod('POST');\n$request->setBody($body);\n\n$request->setQuery(new http\\QueryString([\n  'kb' => 'SOME_ARRAY_VALUE',\n  'lang' => 'SOME_ARRAY_VALUE',\n  'size' => 'SOME_INTEGER_VALUE',\n  'user' => 'SOME_ARRAY_VALUE'\n]));\n\n$request->setHeaders([\n  'accept' => 'application/json',\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
                    }
                ]
            }
        },
        "/api/autocomplete/index/data": {
            "get": {
                "deprecated": false,
                "operationId": "indexAutocompleteDataUsingGET",
                "parameters": [
                    {
                        "collectionFormat": "multi",
                        "description": "kb",
                        "in": "query",
                        "items": {
                            "type": "string"
                        },
                        "name": "kb",
                        "required": true,
                        "type": "array"
                    },
                    {
                        "collectionFormat": "multi",
                        "description": "user",
                        "in": "query",
                        "items": {
                            "type": "string"
                        },
                        "name": "user",
                        "required": true,
                        "type": "array"
                    }
                ],
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "summary": "Creates the autocompletion index given the data",
                "tags": [
                    "auto-complete-controller"
                ],
                "x-codeSamples": [
                    {
                        "lang": "Node + Request",
                        "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://qanswer-core1.univ-st-etienne.fr/api/autocomplete/index/data',\n  qs: {kb: 'SOME_ARRAY_VALUE', user: 'SOME_ARRAY_VALUE'},\n  headers: {'content-type': '*/*', Authorization: 'REPLACE_KEY_VALUE'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
                    },
                    {
                        "lang": "Shell + Curl",
                        "source": "curl --request GET \\\n  --url 'http://qanswer-core1.univ-st-etienne.fr/api/autocomplete/index/data?kb=SOME_ARRAY_VALUE&user=SOME_ARRAY_VALUE' \\\n  --header 'Authorization: REPLACE_KEY_VALUE' \\\n  --header 'content-type: */*'"
                    },
                    {
                        "lang": "Shell + Httpie",
                        "source": "http GET 'http://qanswer-core1.univ-st-etienne.fr/api/autocomplete/index/data?kb=SOME_ARRAY_VALUE&user=SOME_ARRAY_VALUE' \\\n  Authorization:REPLACE_KEY_VALUE \\\n  content-type:'*/*'"
                    },
                    {
                        "lang": "Python + Python3",
                        "source": "import http.client\n\nconn = http.client.HTTPConnection(\"qanswer-core1.univ-st-etienne.fr\")\n\nheaders = {\n    'content-type': \"*/*\",\n    'Authorization': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"GET\", \"/api/autocomplete/index/data?kb=SOME_ARRAY_VALUE&user=SOME_ARRAY_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
                    },
                    {
                        "lang": "Php + Curl",
                        "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"http://qanswer-core1.univ-st-etienne.fr/api/autocomplete/index/data?kb=SOME_ARRAY_VALUE&user=SOME_ARRAY_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: REPLACE_KEY_VALUE\",\n    \"content-type: */*\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
                    },
                    {
                        "lang": "php",
                        "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('http://qanswer-core1.univ-st-etienne.fr/api/autocomplete/index/data');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setQueryData([\n  'kb' => 'SOME_ARRAY_VALUE',\n  'user' => 'SOME_ARRAY_VALUE'\n]);\n\n$request->setHeaders([\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
                    },
                    {
                        "lang": "Php + Http2",
                        "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('http://qanswer-core1.univ-st-etienne.fr/api/autocomplete/index/data');\n$request->setRequestMethod('GET');\n$request->setQuery(new http\\QueryString([\n  'kb' => 'SOME_ARRAY_VALUE',\n  'user' => 'SOME_ARRAY_VALUE'\n]));\n\n$request->setHeaders([\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
                    }
                ]
            }
        },
        "/api/autocomplete/index/questions": {
            "get": {
                "deprecated": false,
                "operationId": "indexAutocompleteQuestionsUsingGET",
                "parameters": [
                    {
                        "collectionFormat": "multi",
                        "description": "kb",
                        "in": "query",
                        "items": {
                            "type": "string"
                        },
                        "name": "kb",
                        "required": true,
                        "type": "array"
                    },
                    {
                        "collectionFormat": "multi",
                        "description": "user",
                        "in": "query",
                        "items": {
                            "type": "string"
                        },
                        "name": "user",
                        "required": true,
                        "type": "array"
                    }
                ],
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "summary": "Creates the autocompletion index given the questions",
                "tags": [
                    "auto-complete-controller"
                ],
                "x-codeSamples": [
                    {
                        "lang": "Node + Request",
                        "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://qanswer-core1.univ-st-etienne.fr/api/autocomplete/index/questions',\n  qs: {kb: 'SOME_ARRAY_VALUE', user: 'SOME_ARRAY_VALUE'},\n  headers: {'content-type': '*/*', Authorization: 'REPLACE_KEY_VALUE'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
                    },
                    {
                        "lang": "Shell + Curl",
                        "source": "curl --request GET \\\n  --url 'http://qanswer-core1.univ-st-etienne.fr/api/autocomplete/index/questions?kb=SOME_ARRAY_VALUE&user=SOME_ARRAY_VALUE' \\\n  --header 'Authorization: REPLACE_KEY_VALUE' \\\n  --header 'content-type: */*'"
                    },
                    {
                        "lang": "Shell + Httpie",
                        "source": "http GET 'http://qanswer-core1.univ-st-etienne.fr/api/autocomplete/index/questions?kb=SOME_ARRAY_VALUE&user=SOME_ARRAY_VALUE' \\\n  Authorization:REPLACE_KEY_VALUE \\\n  content-type:'*/*'"
                    },
                    {
                        "lang": "Python + Python3",
                        "source": "import http.client\n\nconn = http.client.HTTPConnection(\"qanswer-core1.univ-st-etienne.fr\")\n\nheaders = {\n    'content-type': \"*/*\",\n    'Authorization': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"GET\", \"/api/autocomplete/index/questions?kb=SOME_ARRAY_VALUE&user=SOME_ARRAY_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
                    },
                    {
                        "lang": "Php + Curl",
                        "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"http://qanswer-core1.univ-st-etienne.fr/api/autocomplete/index/questions?kb=SOME_ARRAY_VALUE&user=SOME_ARRAY_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: REPLACE_KEY_VALUE\",\n    \"content-type: */*\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
                    },
                    {
                        "lang": "php",
                        "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('http://qanswer-core1.univ-st-etienne.fr/api/autocomplete/index/questions');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setQueryData([\n  'kb' => 'SOME_ARRAY_VALUE',\n  'user' => 'SOME_ARRAY_VALUE'\n]);\n\n$request->setHeaders([\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
                    },
                    {
                        "lang": "Php + Http2",
                        "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('http://qanswer-core1.univ-st-etienne.fr/api/autocomplete/index/questions');\n$request->setRequestMethod('GET');\n$request->setQuery(new http\\QueryString([\n  'kb' => 'SOME_ARRAY_VALUE',\n  'user' => 'SOME_ARRAY_VALUE'\n]));\n\n$request->setHeaders([\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
                    }
                ]
            }
        },
        "/api/browser/{user}/{dataset}/facet": {
            "get": {
                "deprecated": false,
                "operationId": "rdfUsingGET",
                "parameters": [
                    {
                        "collectionFormat": "multi",
                        "default": "application/rdf+json",
                        "description": "accept",
                        "in": "header",
                        "items": {
                            "type": "string"
                        },
                        "name": "accept",
                        "required": true,
                        "type": "array"
                    },
                    {
                        "description": "dataset",
                        "in": "path",
                        "name": "dataset",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": "en",
                        "description": "language",
                        "in": "query",
                        "name": "language",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "url",
                        "in": "query",
                        "name": "url",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "user",
                        "in": "path",
                        "name": "user",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "summary": "Gets back the RDF content to render",
                "tags": [
                    "rdf-facet-browser-controller"
                ],
                "x-codeSamples": [
                    {
                        "lang": "Node + Request",
                        "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://qanswer-core1.univ-st-etienne.fr/api/browser/%7Buser%7D/%7Bdataset%7D/facet',\n  qs: {language: 'en', url: 'SOME_STRING_VALUE'},\n  headers: {\n    'content-type': '*/*',\n    accept: 'SOME_ARRAY_VALUE',\n    Authorization: 'REPLACE_KEY_VALUE'\n  }\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
                    },
                    {
                        "lang": "Shell + Curl",
                        "source": "curl --request GET \\\n  --url 'http://qanswer-core1.univ-st-etienne.fr/api/browser/%7Buser%7D/%7Bdataset%7D/facet?language=en&url=SOME_STRING_VALUE' \\\n  --header 'Authorization: REPLACE_KEY_VALUE' \\\n  --header 'accept: SOME_ARRAY_VALUE' \\\n  --header 'content-type: */*'"
                    },
                    {
                        "lang": "Shell + Httpie",
                        "source": "http GET 'http://qanswer-core1.univ-st-etienne.fr/api/browser/%7Buser%7D/%7Bdataset%7D/facet?language=en&url=SOME_STRING_VALUE' \\\n  Authorization:REPLACE_KEY_VALUE \\\n  accept:SOME_ARRAY_VALUE \\\n  content-type:'*/*'"
                    },
                    {
                        "lang": "Python + Python3",
                        "source": "import http.client\n\nconn = http.client.HTTPConnection(\"qanswer-core1.univ-st-etienne.fr\")\n\nheaders = {\n    'content-type': \"*/*\",\n    'accept': \"SOME_ARRAY_VALUE\",\n    'Authorization': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"GET\", \"/api/browser/%7Buser%7D/%7Bdataset%7D/facet?language=en&url=SOME_STRING_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
                    },
                    {
                        "lang": "Php + Curl",
                        "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"http://qanswer-core1.univ-st-etienne.fr/api/browser/%7Buser%7D/%7Bdataset%7D/facet?language=en&url=SOME_STRING_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: REPLACE_KEY_VALUE\",\n    \"accept: SOME_ARRAY_VALUE\",\n    \"content-type: */*\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
                    },
                    {
                        "lang": "php",
                        "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('http://qanswer-core1.univ-st-etienne.fr/api/browser/%7Buser%7D/%7Bdataset%7D/facet');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setQueryData([\n  'language' => 'en',\n  'url' => 'SOME_STRING_VALUE'\n]);\n\n$request->setHeaders([\n  'content-type' => '*/*',\n  'accept' => 'SOME_ARRAY_VALUE',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
                    },
                    {
                        "lang": "Php + Http2",
                        "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('http://qanswer-core1.univ-st-etienne.fr/api/browser/%7Buser%7D/%7Bdataset%7D/facet');\n$request->setRequestMethod('GET');\n$request->setQuery(new http\\QueryString([\n  'language' => 'en',\n  'url' => 'SOME_STRING_VALUE'\n]));\n\n$request->setHeaders([\n  'content-type' => '*/*',\n  'accept' => 'SOME_ARRAY_VALUE',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
                    }
                ]
            }
        },
        "/api/chat/annotation": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "deprecated": false,
                "operationId": "annotationUsingPOST",
                "parameters": [
                    {
                        "description": "chatRequestTrain",
                        "in": "body",
                        "name": "chatRequestTrain",
                        "required": true,
                        "schema": {
                            "properties": {
                                "knowledgeGraph": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "language": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "question": {
                                    "type": "string"
                                },
                                "questionContext": {
                                    "items": {
                                        "items": {
                                            "$ref": "#/definitions/QuestionContext"
                                        },
                                        "type": "array"
                                    },
                                    "type": "array"
                                },
                                "sparql": {
                                    "type": "string"
                                },
                                "user": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            },
                            "title": "ChatRequestTrain",
                            "type": "object"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/MyAnnotation"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "summary": "annotation",
                "tags": [
                    "chat-controller"
                ],
                "x-codeSamples": [
                    {
                        "lang": "Node + Request",
                        "source": "const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'http://qanswer-core1.univ-st-etienne.fr/api/chat/annotation',\n  headers: {\n    accept: 'application/json',\n    'content-type': 'application/json',\n    Authorization: 'REPLACE_KEY_VALUE'\n  },\n  body: {\n    knowledgeGraph: ['string'],\n    language: ['string'],\n    question: 'string',\n    questionContext: [[{knowledgeGraph: 'string', uri: 'string', user: 'string'}]],\n    sparql: 'string',\n    user: ['string']\n  },\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
                    },
                    {
                        "lang": "Shell + Curl",
                        "source": "curl --request POST \\\n  --url http://qanswer-core1.univ-st-etienne.fr/api/chat/annotation \\\n  --header 'Authorization: REPLACE_KEY_VALUE' \\\n  --header 'accept: application/json' \\\n  --header 'content-type: application/json' \\\n  --data '{\"knowledgeGraph\":[\"string\"],\"language\":[\"string\"],\"question\":\"string\",\"questionContext\":[[{\"knowledgeGraph\":\"string\",\"uri\":\"string\",\"user\":\"string\"}]],\"sparql\":\"string\",\"user\":[\"string\"]}'"
                    },
                    {
                        "lang": "Shell + Httpie",
                        "source": "echo '{\"knowledgeGraph\":[\"string\"],\"language\":[\"string\"],\"question\":\"string\",\"questionContext\":[[{\"knowledgeGraph\":\"string\",\"uri\":\"string\",\"user\":\"string\"}]],\"sparql\":\"string\",\"user\":[\"string\"]}' |  \\\n  http POST http://qanswer-core1.univ-st-etienne.fr/api/chat/annotation \\\n  Authorization:REPLACE_KEY_VALUE \\\n  accept:application/json \\\n  content-type:application/json"
                    },
                    {
                        "lang": "Python + Python3",
                        "source": "import http.client\n\nconn = http.client.HTTPConnection(\"qanswer-core1.univ-st-etienne.fr\")\n\npayload = \"{\\\"knowledgeGraph\\\":[\\\"string\\\"],\\\"language\\\":[\\\"string\\\"],\\\"question\\\":\\\"string\\\",\\\"questionContext\\\":[[{\\\"knowledgeGraph\\\":\\\"string\\\",\\\"uri\\\":\\\"string\\\",\\\"user\\\":\\\"string\\\"}]],\\\"sparql\\\":\\\"string\\\",\\\"user\\\":[\\\"string\\\"]}\"\n\nheaders = {\n    'accept': \"application/json\",\n    'content-type': \"application/json\",\n    'Authorization': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"POST\", \"/api/chat/annotation\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
                    },
                    {
                        "lang": "Php + Curl",
                        "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"http://qanswer-core1.univ-st-etienne.fr/api/chat/annotation\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_POSTFIELDS => \"{\\\"knowledgeGraph\\\":[\\\"string\\\"],\\\"language\\\":[\\\"string\\\"],\\\"question\\\":\\\"string\\\",\\\"questionContext\\\":[[{\\\"knowledgeGraph\\\":\\\"string\\\",\\\"uri\\\":\\\"string\\\",\\\"user\\\":\\\"string\\\"}]],\\\"sparql\\\":\\\"string\\\",\\\"user\\\":[\\\"string\\\"]}\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: REPLACE_KEY_VALUE\",\n    \"accept: application/json\",\n    \"content-type: application/json\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
                    },
                    {
                        "lang": "php",
                        "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('http://qanswer-core1.univ-st-etienne.fr/api/chat/annotation');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setHeaders([\n  'accept' => 'application/json',\n  'content-type' => 'application/json',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$request->setBody('{\"knowledgeGraph\":[\"string\"],\"language\":[\"string\"],\"question\":\"string\",\"questionContext\":[[{\"knowledgeGraph\":\"string\",\"uri\":\"string\",\"user\":\"string\"}]],\"sparql\":\"string\",\"user\":[\"string\"]}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
                    },
                    {
                        "lang": "Php + Http2",
                        "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$body = new http\\Message\\Body;\n$body->append('{\"knowledgeGraph\":[\"string\"],\"language\":[\"string\"],\"question\":\"string\",\"questionContext\":[[{\"knowledgeGraph\":\"string\",\"uri\":\"string\",\"user\":\"string\"}]],\"sparql\":\"string\",\"user\":[\"string\"]}');\n\n$request->setRequestUrl('http://qanswer-core1.univ-st-etienne.fr/api/chat/annotation');\n$request->setRequestMethod('POST');\n$request->setBody($body);\n\n$request->setHeaders([\n  'accept' => 'application/json',\n  'content-type' => 'application/json',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
                    }
                ]
            }
        },
        "/api/chat/full": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "deprecated": false,
                "operationId": "chatFullUsingPOST",
                "parameters": [
                    {
                        "description": "chatRequest",
                        "in": "body",
                        "name": "chatRequest",
                        "required": true,
                        "schema": {
                            "properties": {
                                "chat": {
                                    "type": "boolean"
                                },
                                "id": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "knowledgeGraph": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "language": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "question": {
                                    "type": "string"
                                },
                                "questionContext": {
                                    "items": {
                                        "items": {
                                            "$ref": "#/definitions/QuestionContext"
                                        },
                                        "type": "array"
                                    },
                                    "type": "array"
                                },
                                "timeout": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "user": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            },
                            "title": "ChatRequest",
                            "type": "object"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/QaResult"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "summary": "chatFull",
                "tags": [
                    "chat-controller"
                ],
                "x-codeSamples": [
                    {
                        "lang": "Node + Request",
                        "source": "const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'http://qanswer-core1.univ-st-etienne.fr/api/chat/full',\n  headers: {\n    accept: 'application/json',\n    'content-type': 'application/json',\n    Authorization: 'REPLACE_KEY_VALUE'\n  },\n  body: {\n    chat: true,\n    id: 0,\n    knowledgeGraph: ['string'],\n    language: ['string'],\n    question: 'string',\n    questionContext: [[{knowledgeGraph: 'string', uri: 'string', user: 'string'}]],\n    timeout: 0,\n    user: ['string']\n  },\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
                    },
                    {
                        "lang": "Shell + Curl",
                        "source": "curl --request POST \\\n  --url http://qanswer-core1.univ-st-etienne.fr/api/chat/full \\\n  --header 'Authorization: REPLACE_KEY_VALUE' \\\n  --header 'accept: application/json' \\\n  --header 'content-type: application/json' \\\n  --data '{\"chat\":true,\"id\":0,\"knowledgeGraph\":[\"string\"],\"language\":[\"string\"],\"question\":\"string\",\"questionContext\":[[{\"knowledgeGraph\":\"string\",\"uri\":\"string\",\"user\":\"string\"}]],\"timeout\":0,\"user\":[\"string\"]}'"
                    },
                    {
                        "lang": "Shell + Httpie",
                        "source": "echo '{\"chat\":true,\"id\":0,\"knowledgeGraph\":[\"string\"],\"language\":[\"string\"],\"question\":\"string\",\"questionContext\":[[{\"knowledgeGraph\":\"string\",\"uri\":\"string\",\"user\":\"string\"}]],\"timeout\":0,\"user\":[\"string\"]}' |  \\\n  http POST http://qanswer-core1.univ-st-etienne.fr/api/chat/full \\\n  Authorization:REPLACE_KEY_VALUE \\\n  accept:application/json \\\n  content-type:application/json"
                    },
                    {
                        "lang": "Python + Python3",
                        "source": "import http.client\n\nconn = http.client.HTTPConnection(\"qanswer-core1.univ-st-etienne.fr\")\n\npayload = \"{\\\"chat\\\":true,\\\"id\\\":0,\\\"knowledgeGraph\\\":[\\\"string\\\"],\\\"language\\\":[\\\"string\\\"],\\\"question\\\":\\\"string\\\",\\\"questionContext\\\":[[{\\\"knowledgeGraph\\\":\\\"string\\\",\\\"uri\\\":\\\"string\\\",\\\"user\\\":\\\"string\\\"}]],\\\"timeout\\\":0,\\\"user\\\":[\\\"string\\\"]}\"\n\nheaders = {\n    'accept': \"application/json\",\n    'content-type': \"application/json\",\n    'Authorization': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"POST\", \"/api/chat/full\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
                    },
                    {
                        "lang": "Php + Curl",
                        "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"http://qanswer-core1.univ-st-etienne.fr/api/chat/full\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_POSTFIELDS => \"{\\\"chat\\\":true,\\\"id\\\":0,\\\"knowledgeGraph\\\":[\\\"string\\\"],\\\"language\\\":[\\\"string\\\"],\\\"question\\\":\\\"string\\\",\\\"questionContext\\\":[[{\\\"knowledgeGraph\\\":\\\"string\\\",\\\"uri\\\":\\\"string\\\",\\\"user\\\":\\\"string\\\"}]],\\\"timeout\\\":0,\\\"user\\\":[\\\"string\\\"]}\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: REPLACE_KEY_VALUE\",\n    \"accept: application/json\",\n    \"content-type: application/json\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
                    },
                    {
                        "lang": "php",
                        "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('http://qanswer-core1.univ-st-etienne.fr/api/chat/full');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setHeaders([\n  'accept' => 'application/json',\n  'content-type' => 'application/json',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$request->setBody('{\"chat\":true,\"id\":0,\"knowledgeGraph\":[\"string\"],\"language\":[\"string\"],\"question\":\"string\",\"questionContext\":[[{\"knowledgeGraph\":\"string\",\"uri\":\"string\",\"user\":\"string\"}]],\"timeout\":0,\"user\":[\"string\"]}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
                    },
                    {
                        "lang": "Php + Http2",
                        "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$body = new http\\Message\\Body;\n$body->append('{\"chat\":true,\"id\":0,\"knowledgeGraph\":[\"string\"],\"language\":[\"string\"],\"question\":\"string\",\"questionContext\":[[{\"knowledgeGraph\":\"string\",\"uri\":\"string\",\"user\":\"string\"}]],\"timeout\":0,\"user\":[\"string\"]}');\n\n$request->setRequestUrl('http://qanswer-core1.univ-st-etienne.fr/api/chat/full');\n$request->setRequestMethod('POST');\n$request->setBody($body);\n\n$request->setHeaders([\n  'accept' => 'application/json',\n  'content-type' => 'application/json',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
                    }
                ]
            }
        },
        "/api/chat/sparql": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "deprecated": false,
                "operationId": "chatSparqlUsingPOST",
                "parameters": [
                    {
                        "description": "chatRequest",
                        "in": "body",
                        "name": "chatRequest",
                        "required": true,
                        "schema": {
                            "properties": {
                                "chat": {
                                    "type": "boolean"
                                },
                                "id": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "knowledgeGraph": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "language": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "question": {
                                    "type": "string"
                                },
                                "questionContext": {
                                    "items": {
                                        "items": {
                                            "$ref": "#/definitions/QuestionContext"
                                        },
                                        "type": "array"
                                    },
                                    "type": "array"
                                },
                                "timeout": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "user": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            },
                            "title": "ChatRequest",
                            "type": "object"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/QaResult"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "summary": "chatSparql",
                "tags": [
                    "chat-controller"
                ],
                "x-codeSamples": [
                    {
                        "lang": "Node + Request",
                        "source": "const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'http://qanswer-core1.univ-st-etienne.fr/api/chat/sparql',\n  headers: {\n    accept: 'application/json',\n    'content-type': 'application/json',\n    Authorization: 'REPLACE_KEY_VALUE'\n  },\n  body: {\n    chat: true,\n    id: 0,\n    knowledgeGraph: ['string'],\n    language: ['string'],\n    question: 'string',\n    questionContext: [[{knowledgeGraph: 'string', uri: 'string', user: 'string'}]],\n    timeout: 0,\n    user: ['string']\n  },\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
                    },
                    {
                        "lang": "Shell + Curl",
                        "source": "curl --request POST \\\n  --url http://qanswer-core1.univ-st-etienne.fr/api/chat/sparql \\\n  --header 'Authorization: REPLACE_KEY_VALUE' \\\n  --header 'accept: application/json' \\\n  --header 'content-type: application/json' \\\n  --data '{\"chat\":true,\"id\":0,\"knowledgeGraph\":[\"string\"],\"language\":[\"string\"],\"question\":\"string\",\"questionContext\":[[{\"knowledgeGraph\":\"string\",\"uri\":\"string\",\"user\":\"string\"}]],\"timeout\":0,\"user\":[\"string\"]}'"
                    },
                    {
                        "lang": "Shell + Httpie",
                        "source": "echo '{\"chat\":true,\"id\":0,\"knowledgeGraph\":[\"string\"],\"language\":[\"string\"],\"question\":\"string\",\"questionContext\":[[{\"knowledgeGraph\":\"string\",\"uri\":\"string\",\"user\":\"string\"}]],\"timeout\":0,\"user\":[\"string\"]}' |  \\\n  http POST http://qanswer-core1.univ-st-etienne.fr/api/chat/sparql \\\n  Authorization:REPLACE_KEY_VALUE \\\n  accept:application/json \\\n  content-type:application/json"
                    },
                    {
                        "lang": "Python + Python3",
                        "source": "import http.client\n\nconn = http.client.HTTPConnection(\"qanswer-core1.univ-st-etienne.fr\")\n\npayload = \"{\\\"chat\\\":true,\\\"id\\\":0,\\\"knowledgeGraph\\\":[\\\"string\\\"],\\\"language\\\":[\\\"string\\\"],\\\"question\\\":\\\"string\\\",\\\"questionContext\\\":[[{\\\"knowledgeGraph\\\":\\\"string\\\",\\\"uri\\\":\\\"string\\\",\\\"user\\\":\\\"string\\\"}]],\\\"timeout\\\":0,\\\"user\\\":[\\\"string\\\"]}\"\n\nheaders = {\n    'accept': \"application/json\",\n    'content-type': \"application/json\",\n    'Authorization': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"POST\", \"/api/chat/sparql\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
                    },
                    {
                        "lang": "Php + Curl",
                        "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"http://qanswer-core1.univ-st-etienne.fr/api/chat/sparql\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_POSTFIELDS => \"{\\\"chat\\\":true,\\\"id\\\":0,\\\"knowledgeGraph\\\":[\\\"string\\\"],\\\"language\\\":[\\\"string\\\"],\\\"question\\\":\\\"string\\\",\\\"questionContext\\\":[[{\\\"knowledgeGraph\\\":\\\"string\\\",\\\"uri\\\":\\\"string\\\",\\\"user\\\":\\\"string\\\"}]],\\\"timeout\\\":0,\\\"user\\\":[\\\"string\\\"]}\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: REPLACE_KEY_VALUE\",\n    \"accept: application/json\",\n    \"content-type: application/json\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
                    },
                    {
                        "lang": "php",
                        "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('http://qanswer-core1.univ-st-etienne.fr/api/chat/sparql');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setHeaders([\n  'accept' => 'application/json',\n  'content-type' => 'application/json',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$request->setBody('{\"chat\":true,\"id\":0,\"knowledgeGraph\":[\"string\"],\"language\":[\"string\"],\"question\":\"string\",\"questionContext\":[[{\"knowledgeGraph\":\"string\",\"uri\":\"string\",\"user\":\"string\"}]],\"timeout\":0,\"user\":[\"string\"]}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
                    },
                    {
                        "lang": "Php + Http2",
                        "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$body = new http\\Message\\Body;\n$body->append('{\"chat\":true,\"id\":0,\"knowledgeGraph\":[\"string\"],\"language\":[\"string\"],\"question\":\"string\",\"questionContext\":[[{\"knowledgeGraph\":\"string\",\"uri\":\"string\",\"user\":\"string\"}]],\"timeout\":0,\"user\":[\"string\"]}');\n\n$request->setRequestUrl('http://qanswer-core1.univ-st-etienne.fr/api/chat/sparql');\n$request->setRequestMethod('POST');\n$request->setBody($body);\n\n$request->setHeaders([\n  'accept' => 'application/json',\n  'content-type' => 'application/json',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
                    }
                ]
            }
        },
        "/api/dataset/access": {
            "get": {
                "deprecated": false,
                "operationId": "getOpenUsingGET",
                "parameters": [
                    {
                        "description": "dataset",
                        "in": "query",
                        "name": "dataset",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "summary": "To check the current access of the dataset",
                "tags": [
                    "dataset-controller-kg"
                ],
                "x-codeSamples": [
                    {
                        "lang": "Node + Request",
                        "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://qanswer-core1.univ-st-etienne.fr/api/dataset/access',\n  qs: {dataset: 'SOME_STRING_VALUE'},\n  headers: {'content-type': '*/*', Authorization: 'REPLACE_KEY_VALUE'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
                    },
                    {
                        "lang": "Shell + Curl",
                        "source": "curl --request GET \\\n  --url 'http://qanswer-core1.univ-st-etienne.fr/api/dataset/access?dataset=SOME_STRING_VALUE' \\\n  --header 'Authorization: REPLACE_KEY_VALUE' \\\n  --header 'content-type: */*'"
                    },
                    {
                        "lang": "Shell + Httpie",
                        "source": "http GET 'http://qanswer-core1.univ-st-etienne.fr/api/dataset/access?dataset=SOME_STRING_VALUE' \\\n  Authorization:REPLACE_KEY_VALUE \\\n  content-type:'*/*'"
                    },
                    {
                        "lang": "Python + Python3",
                        "source": "import http.client\n\nconn = http.client.HTTPConnection(\"qanswer-core1.univ-st-etienne.fr\")\n\nheaders = {\n    'content-type': \"*/*\",\n    'Authorization': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"GET\", \"/api/dataset/access?dataset=SOME_STRING_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
                    },
                    {
                        "lang": "Php + Curl",
                        "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"http://qanswer-core1.univ-st-etienne.fr/api/dataset/access?dataset=SOME_STRING_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: REPLACE_KEY_VALUE\",\n    \"content-type: */*\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
                    },
                    {
                        "lang": "php",
                        "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('http://qanswer-core1.univ-st-etienne.fr/api/dataset/access');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setQueryData([\n  'dataset' => 'SOME_STRING_VALUE'\n]);\n\n$request->setHeaders([\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
                    },
                    {
                        "lang": "Php + Http2",
                        "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('http://qanswer-core1.univ-st-etienne.fr/api/dataset/access');\n$request->setRequestMethod('GET');\n$request->setQuery(new http\\QueryString([\n  'dataset' => 'SOME_STRING_VALUE'\n]));\n\n$request->setHeaders([\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
                    }
                ]
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "deprecated": false,
                "operationId": "setOpenUsingPOST",
                "parameters": [
                    {
                        "description": "access",
                        "in": "query",
                        "name": "access",
                        "required": true,
                        "type": "boolean"
                    },
                    {
                        "description": "dataset",
                        "in": "query",
                        "name": "dataset",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "summary": "To change the access of the dataset to everyone or only to loggedin users",
                "tags": [
                    "dataset-controller-kg"
                ],
                "x-codeSamples": [
                    {
                        "lang": "Node + Request",
                        "source": "const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'http://qanswer-core1.univ-st-etienne.fr/api/dataset/access',\n  qs: {access: 'SOME_BOOLEAN_VALUE', dataset: 'SOME_STRING_VALUE'},\n  headers: {\n    accept: 'application/json',\n    'content-type': '*/*',\n    Authorization: 'REPLACE_KEY_VALUE'\n  }\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
                    },
                    {
                        "lang": "Shell + Curl",
                        "source": "curl --request POST \\\n  --url 'http://qanswer-core1.univ-st-etienne.fr/api/dataset/access?access=SOME_BOOLEAN_VALUE&dataset=SOME_STRING_VALUE' \\\n  --header 'Authorization: REPLACE_KEY_VALUE' \\\n  --header 'accept: application/json' \\\n  --header 'content-type: */*'"
                    },
                    {
                        "lang": "Shell + Httpie",
                        "source": "http POST 'http://qanswer-core1.univ-st-etienne.fr/api/dataset/access?access=SOME_BOOLEAN_VALUE&dataset=SOME_STRING_VALUE' \\\n  Authorization:REPLACE_KEY_VALUE \\\n  accept:application/json \\\n  content-type:'*/*'"
                    },
                    {
                        "lang": "Python + Python3",
                        "source": "import http.client\n\nconn = http.client.HTTPConnection(\"qanswer-core1.univ-st-etienne.fr\")\n\nheaders = {\n    'accept': \"application/json\",\n    'content-type': \"*/*\",\n    'Authorization': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"POST\", \"/api/dataset/access?access=SOME_BOOLEAN_VALUE&dataset=SOME_STRING_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
                    },
                    {
                        "lang": "Php + Curl",
                        "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"http://qanswer-core1.univ-st-etienne.fr/api/dataset/access?access=SOME_BOOLEAN_VALUE&dataset=SOME_STRING_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: REPLACE_KEY_VALUE\",\n    \"accept: application/json\",\n    \"content-type: */*\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
                    },
                    {
                        "lang": "php",
                        "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('http://qanswer-core1.univ-st-etienne.fr/api/dataset/access');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setQueryData([\n  'access' => 'SOME_BOOLEAN_VALUE',\n  'dataset' => 'SOME_STRING_VALUE'\n]);\n\n$request->setHeaders([\n  'accept' => 'application/json',\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
                    },
                    {
                        "lang": "Php + Http2",
                        "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('http://qanswer-core1.univ-st-etienne.fr/api/dataset/access');\n$request->setRequestMethod('POST');\n$request->setQuery(new http\\QueryString([\n  'access' => 'SOME_BOOLEAN_VALUE',\n  'dataset' => 'SOME_STRING_VALUE'\n]));\n\n$request->setHeaders([\n  'accept' => 'application/json',\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
                    }
                ]
            }
        },
        "/api/dataset/admin/list": {
            "get": {
                "deprecated": false,
                "operationId": "getListDatasetsAdminUsingGET",
                "parameters": [
                    {
                        "description": "username",
                        "in": "query",
                        "name": "username",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/UserDataset"
                            },
                            "type": "array"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "summary": "List all datasets of a user",
                "tags": [
                    "dataset-controller-kg"
                ],
                "x-codeSamples": [
                    {
                        "lang": "Node + Request",
                        "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://qanswer-core1.univ-st-etienne.fr/api/dataset/admin/list',\n  qs: {username: 'SOME_STRING_VALUE'},\n  headers: {'content-type': '*/*', Authorization: 'REPLACE_KEY_VALUE'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
                    },
                    {
                        "lang": "Shell + Curl",
                        "source": "curl --request GET \\\n  --url 'http://qanswer-core1.univ-st-etienne.fr/api/dataset/admin/list?username=SOME_STRING_VALUE' \\\n  --header 'Authorization: REPLACE_KEY_VALUE' \\\n  --header 'content-type: */*'"
                    },
                    {
                        "lang": "Shell + Httpie",
                        "source": "http GET 'http://qanswer-core1.univ-st-etienne.fr/api/dataset/admin/list?username=SOME_STRING_VALUE' \\\n  Authorization:REPLACE_KEY_VALUE \\\n  content-type:'*/*'"
                    },
                    {
                        "lang": "Python + Python3",
                        "source": "import http.client\n\nconn = http.client.HTTPConnection(\"qanswer-core1.univ-st-etienne.fr\")\n\nheaders = {\n    'content-type': \"*/*\",\n    'Authorization': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"GET\", \"/api/dataset/admin/list?username=SOME_STRING_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
                    },
                    {
                        "lang": "Php + Curl",
                        "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"http://qanswer-core1.univ-st-etienne.fr/api/dataset/admin/list?username=SOME_STRING_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: REPLACE_KEY_VALUE\",\n    \"content-type: */*\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
                    },
                    {
                        "lang": "php",
                        "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('http://qanswer-core1.univ-st-etienne.fr/api/dataset/admin/list');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setQueryData([\n  'username' => 'SOME_STRING_VALUE'\n]);\n\n$request->setHeaders([\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
                    },
                    {
                        "lang": "Php + Http2",
                        "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('http://qanswer-core1.univ-st-etienne.fr/api/dataset/admin/list');\n$request->setRequestMethod('GET');\n$request->setQuery(new http\\QueryString([\n  'username' => 'SOME_STRING_VALUE'\n]));\n\n$request->setHeaders([\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
                    }
                ]
            }
        },
        "/api/dataset/config": {
            "get": {
                "deprecated": false,
                "operationId": "getConfigUsingGET",
                "parameters": [
                    {
                        "collectionFormat": "multi",
                        "description": "dataset",
                        "in": "query",
                        "items": {
                            "type": "string"
                        },
                        "name": "dataset",
                        "required": true,
                        "type": "array"
                    },
                    {
                        "collectionFormat": "multi",
                        "description": "user",
                        "in": "query",
                        "items": {
                            "type": "string"
                        },
                        "name": "user",
                        "required": true,
                        "type": "array"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/DatasetConfigRequest"
                            },
                            "type": "array"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "summary": "Get all config parameters of the dataset",
                "tags": [
                    "dataset-controller-kg"
                ],
                "x-codeSamples": [
                    {
                        "lang": "Node + Request",
                        "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://qanswer-core1.univ-st-etienne.fr/api/dataset/config',\n  qs: {dataset: 'SOME_ARRAY_VALUE', user: 'SOME_ARRAY_VALUE'},\n  headers: {'content-type': 'application/json', Authorization: 'REPLACE_KEY_VALUE'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
                    },
                    {
                        "lang": "Shell + Curl",
                        "source": "curl --request GET \\\n  --url 'http://qanswer-core1.univ-st-etienne.fr/api/dataset/config?dataset=SOME_ARRAY_VALUE&user=SOME_ARRAY_VALUE' \\\n  --header 'Authorization: REPLACE_KEY_VALUE' \\\n  --header 'content-type: application/json'"
                    },
                    {
                        "lang": "Shell + Httpie",
                        "source": "http GET 'http://qanswer-core1.univ-st-etienne.fr/api/dataset/config?dataset=SOME_ARRAY_VALUE&user=SOME_ARRAY_VALUE' \\\n  Authorization:REPLACE_KEY_VALUE \\\n  content-type:application/json"
                    },
                    {
                        "lang": "Python + Python3",
                        "source": "import http.client\n\nconn = http.client.HTTPConnection(\"qanswer-core1.univ-st-etienne.fr\")\n\nheaders = {\n    'content-type': \"application/json\",\n    'Authorization': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"GET\", \"/api/dataset/config?dataset=SOME_ARRAY_VALUE&user=SOME_ARRAY_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
                    },
                    {
                        "lang": "Php + Curl",
                        "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"http://qanswer-core1.univ-st-etienne.fr/api/dataset/config?dataset=SOME_ARRAY_VALUE&user=SOME_ARRAY_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: REPLACE_KEY_VALUE\",\n    \"content-type: application/json\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
                    },
                    {
                        "lang": "php",
                        "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('http://qanswer-core1.univ-st-etienne.fr/api/dataset/config');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setQueryData([\n  'dataset' => 'SOME_ARRAY_VALUE',\n  'user' => 'SOME_ARRAY_VALUE'\n]);\n\n$request->setHeaders([\n  'content-type' => 'application/json',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
                    },
                    {
                        "lang": "Php + Http2",
                        "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('http://qanswer-core1.univ-st-etienne.fr/api/dataset/config');\n$request->setRequestMethod('GET');\n$request->setQuery(new http\\QueryString([\n  'dataset' => 'SOME_ARRAY_VALUE',\n  'user' => 'SOME_ARRAY_VALUE'\n]));\n\n$request->setHeaders([\n  'content-type' => 'application/json',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
                    }
                ]
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "deprecated": false,
                "operationId": "setConfigUsingPOST",
                "parameters": [
                    {
                        "description": "datasetConfigRequest",
                        "in": "body",
                        "name": "datasetConfigRequest",
                        "required": true,
                        "schema": {
                            "properties": {
                                "autocompletionConfig": {
                                    "$ref": "#/definitions/AutocompletionConfig"
                                },
                                "dataset": {
                                    "type": "string"
                                },
                                "featureTypes": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "indexConfig": {
                                    "$ref": "#/definitions/IndexConfig"
                                },
                                "instanceMappings": {
                                    "additionalProperties": {
                                        "items": {
                                            "$ref": "#/definitions/UriMapping"
                                        },
                                        "type": "array"
                                    },
                                    "type": "object"
                                },
                                "lang": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "languages": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "numberTriples": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "properties": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "propertiesModifiersExpansion": {
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "type": "object"
                                },
                                "propertiesPropertiesExpansion": {
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "type": "object"
                                },
                                "propertyMappings": {
                                    "additionalProperties": {
                                        "items": {
                                            "$ref": "#/definitions/UriMapping"
                                        },
                                        "type": "array"
                                    },
                                    "type": "object"
                                },
                                "rankerConfig": {
                                    "$ref": "#/definitions/RankerConfig"
                                },
                                "recursiveIteration": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "stopWords": {
                                    "additionalProperties": {
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    "type": "object"
                                },
                                "subclass": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "type": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "typeProperties": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "uiMappings": {
                                    "$ref": "#/definitions/UIMappings"
                                },
                                "visualizationOrder": {
                                    "items": {
                                        "enum": [
                                            "SIMPLE",
                                            "LIST",
                                            "FACET",
                                            "IMAGES",
                                            "TABLE",
                                            "MAP",
                                            "TIME_SERIES",
                                            "TIME",
                                            "TIMEOUT"
                                        ],
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            },
                            "title": "DatasetConfigRequest",
                            "type": "object"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "summary": "Specify config parameters for the dataset",
                "tags": [
                    "dataset-controller-kg"
                ],
                "x-codeSamples": [
                    {
                        "lang": "Node + Request",
                        "source": "const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'http://qanswer-core1.univ-st-etienne.fr/api/dataset/config',\n  headers: {\n    accept: 'application/json',\n    'content-type': 'application/json',\n    Authorization: 'REPLACE_KEY_VALUE'\n  },\n  body: {\n    autocompletionConfig: {\n      dataSuggestion: true,\n      dataSuggestionType: 'string',\n      graphSuggestion: true,\n      questionSuggestion: true\n    },\n    dataset: 'string',\n    featureTypes: ['string'],\n    indexConfig: {\n      dataset: 'string',\n      lang: ['string'],\n      properties: ['string'],\n      subclass: ['string'],\n      type: ['string']\n    },\n    instanceMappings: {\n      property1: [{lexicalization: 'string', uri: 'string'}],\n      property2: [{lexicalization: 'string', uri: 'string'}]\n    },\n    lang: ['string'],\n    languages: ['string'],\n    numberTriples: 0,\n    properties: ['string'],\n    propertiesModifiersExpansion: {property1: 'string', property2: 'string'},\n    propertiesPropertiesExpansion: {property1: 'string', property2: 'string'},\n    propertyMappings: {\n      property1: [{lexicalization: 'string', uri: 'string'}],\n      property2: [{lexicalization: 'string', uri: 'string'}]\n    },\n    rankerConfig: {learningRate: 0, minLeafSupport: 0, nTreeLeaves: 0, nTrees: 0},\n    recursiveIteration: 0,\n    stopWords: {property1: ['string'], property2: ['string']},\n    subclass: ['string'],\n    type: ['string'],\n    typeProperties: ['string'],\n    uiMappings: {\n      coordinate: ['string'],\n      dataset: 'string',\n      dbpedia: ['string'],\n      description: ['string'],\n      disambiguation: ['string'],\n      doi: ['string'],\n      facebook: ['string'],\n      geometry: ['string'],\n      github: ['string'],\n      homepage: ['string'],\n      ignore: ['string'],\n      image: ['string'],\n      instagram: ['string'],\n      label: ['string'],\n      latitude: ['string'],\n      linkedin: ['string'],\n      longitude: ['string'],\n      mainLabel: 'string',\n      optional: ['string'],\n      orcid: ['string'],\n      osmRelation: ['string'],\n      time: ['string'],\n      timeSeries: ['string'],\n      twitter: ['string'],\n      wikidata: ['string'],\n      wikipedia: ['string'],\n      youtube: ['string']\n    },\n    visualizationOrder: ['SIMPLE']\n  },\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
                    },
                    {
                        "lang": "Shell + Curl",
                        "source": "curl --request POST \\\n  --url http://qanswer-core1.univ-st-etienne.fr/api/dataset/config \\\n  --header 'Authorization: REPLACE_KEY_VALUE' \\\n  --header 'accept: application/json' \\\n  --header 'content-type: application/json' \\\n  --data '{\"autocompletionConfig\":{\"dataSuggestion\":true,\"dataSuggestionType\":\"string\",\"graphSuggestion\":true,\"questionSuggestion\":true},\"dataset\":\"string\",\"featureTypes\":[\"string\"],\"indexConfig\":{\"dataset\":\"string\",\"lang\":[\"string\"],\"properties\":[\"string\"],\"subclass\":[\"string\"],\"type\":[\"string\"]},\"instanceMappings\":{\"property1\":[{\"lexicalization\":\"string\",\"uri\":\"string\"}],\"property2\":[{\"lexicalization\":\"string\",\"uri\":\"string\"}]},\"lang\":[\"string\"],\"languages\":[\"string\"],\"numberTriples\":0,\"properties\":[\"string\"],\"propertiesModifiersExpansion\":{\"property1\":\"string\",\"property2\":\"string\"},\"propertiesPropertiesExpansion\":{\"property1\":\"string\",\"property2\":\"string\"},\"propertyMappings\":{\"property1\":[{\"lexicalization\":\"string\",\"uri\":\"string\"}],\"property2\":[{\"lexicalization\":\"string\",\"uri\":\"string\"}]},\"rankerConfig\":{\"learningRate\":0,\"minLeafSupport\":0,\"nTreeLeaves\":0,\"nTrees\":0},\"recursiveIteration\":0,\"stopWords\":{\"property1\":[\"string\"],\"property2\":[\"string\"]},\"subclass\":[\"string\"],\"type\":[\"string\"],\"typeProperties\":[\"string\"],\"uiMappings\":{\"coordinate\":[\"string\"],\"dataset\":\"string\",\"dbpedia\":[\"string\"],\"description\":[\"string\"],\"disambiguation\":[\"string\"],\"doi\":[\"string\"],\"facebook\":[\"string\"],\"geometry\":[\"string\"],\"github\":[\"string\"],\"homepage\":[\"string\"],\"ignore\":[\"string\"],\"image\":[\"string\"],\"instagram\":[\"string\"],\"label\":[\"string\"],\"latitude\":[\"string\"],\"linkedin\":[\"string\"],\"longitude\":[\"string\"],\"mainLabel\":\"string\",\"optional\":[\"string\"],\"orcid\":[\"string\"],\"osmRelation\":[\"string\"],\"time\":[\"string\"],\"timeSeries\":[\"string\"],\"twitter\":[\"string\"],\"wikidata\":[\"string\"],\"wikipedia\":[\"string\"],\"youtube\":[\"string\"]},\"visualizationOrder\":[\"SIMPLE\"]}'"
                    },
                    {
                        "lang": "Shell + Httpie",
                        "source": "echo '{\"autocompletionConfig\":{\"dataSuggestion\":true,\"dataSuggestionType\":\"string\",\"graphSuggestion\":true,\"questionSuggestion\":true},\"dataset\":\"string\",\"featureTypes\":[\"string\"],\"indexConfig\":{\"dataset\":\"string\",\"lang\":[\"string\"],\"properties\":[\"string\"],\"subclass\":[\"string\"],\"type\":[\"string\"]},\"instanceMappings\":{\"property1\":[{\"lexicalization\":\"string\",\"uri\":\"string\"}],\"property2\":[{\"lexicalization\":\"string\",\"uri\":\"string\"}]},\"lang\":[\"string\"],\"languages\":[\"string\"],\"numberTriples\":0,\"properties\":[\"string\"],\"propertiesModifiersExpansion\":{\"property1\":\"string\",\"property2\":\"string\"},\"propertiesPropertiesExpansion\":{\"property1\":\"string\",\"property2\":\"string\"},\"propertyMappings\":{\"property1\":[{\"lexicalization\":\"string\",\"uri\":\"string\"}],\"property2\":[{\"lexicalization\":\"string\",\"uri\":\"string\"}]},\"rankerConfig\":{\"learningRate\":0,\"minLeafSupport\":0,\"nTreeLeaves\":0,\"nTrees\":0},\"recursiveIteration\":0,\"stopWords\":{\"property1\":[\"string\"],\"property2\":[\"string\"]},\"subclass\":[\"string\"],\"type\":[\"string\"],\"typeProperties\":[\"string\"],\"uiMappings\":{\"coordinate\":[\"string\"],\"dataset\":\"string\",\"dbpedia\":[\"string\"],\"description\":[\"string\"],\"disambiguation\":[\"string\"],\"doi\":[\"string\"],\"facebook\":[\"string\"],\"geometry\":[\"string\"],\"github\":[\"string\"],\"homepage\":[\"string\"],\"ignore\":[\"string\"],\"image\":[\"string\"],\"instagram\":[\"string\"],\"label\":[\"string\"],\"latitude\":[\"string\"],\"linkedin\":[\"string\"],\"longitude\":[\"string\"],\"mainLabel\":\"string\",\"optional\":[\"string\"],\"orcid\":[\"string\"],\"osmRelation\":[\"string\"],\"time\":[\"string\"],\"timeSeries\":[\"string\"],\"twitter\":[\"string\"],\"wikidata\":[\"string\"],\"wikipedia\":[\"string\"],\"youtube\":[\"string\"]},\"visualizationOrder\":[\"SIMPLE\"]}' |  \\\n  http POST http://qanswer-core1.univ-st-etienne.fr/api/dataset/config \\\n  Authorization:REPLACE_KEY_VALUE \\\n  accept:application/json \\\n  content-type:application/json"
                    },
                    {
                        "lang": "Python + Python3",
                        "source": "import http.client\n\nconn = http.client.HTTPConnection(\"qanswer-core1.univ-st-etienne.fr\")\n\npayload = \"{\\\"autocompletionConfig\\\":{\\\"dataSuggestion\\\":true,\\\"dataSuggestionType\\\":\\\"string\\\",\\\"graphSuggestion\\\":true,\\\"questionSuggestion\\\":true},\\\"dataset\\\":\\\"string\\\",\\\"featureTypes\\\":[\\\"string\\\"],\\\"indexConfig\\\":{\\\"dataset\\\":\\\"string\\\",\\\"lang\\\":[\\\"string\\\"],\\\"properties\\\":[\\\"string\\\"],\\\"subclass\\\":[\\\"string\\\"],\\\"type\\\":[\\\"string\\\"]},\\\"instanceMappings\\\":{\\\"property1\\\":[{\\\"lexicalization\\\":\\\"string\\\",\\\"uri\\\":\\\"string\\\"}],\\\"property2\\\":[{\\\"lexicalization\\\":\\\"string\\\",\\\"uri\\\":\\\"string\\\"}]},\\\"lang\\\":[\\\"string\\\"],\\\"languages\\\":[\\\"string\\\"],\\\"numberTriples\\\":0,\\\"properties\\\":[\\\"string\\\"],\\\"propertiesModifiersExpansion\\\":{\\\"property1\\\":\\\"string\\\",\\\"property2\\\":\\\"string\\\"},\\\"propertiesPropertiesExpansion\\\":{\\\"property1\\\":\\\"string\\\",\\\"property2\\\":\\\"string\\\"},\\\"propertyMappings\\\":{\\\"property1\\\":[{\\\"lexicalization\\\":\\\"string\\\",\\\"uri\\\":\\\"string\\\"}],\\\"property2\\\":[{\\\"lexicalization\\\":\\\"string\\\",\\\"uri\\\":\\\"string\\\"}]},\\\"rankerConfig\\\":{\\\"learningRate\\\":0,\\\"minLeafSupport\\\":0,\\\"nTreeLeaves\\\":0,\\\"nTrees\\\":0},\\\"recursiveIteration\\\":0,\\\"stopWords\\\":{\\\"property1\\\":[\\\"string\\\"],\\\"property2\\\":[\\\"string\\\"]},\\\"subclass\\\":[\\\"string\\\"],\\\"type\\\":[\\\"string\\\"],\\\"typeProperties\\\":[\\\"string\\\"],\\\"uiMappings\\\":{\\\"coordinate\\\":[\\\"string\\\"],\\\"dataset\\\":\\\"string\\\",\\\"dbpedia\\\":[\\\"string\\\"],\\\"description\\\":[\\\"string\\\"],\\\"disambiguation\\\":[\\\"string\\\"],\\\"doi\\\":[\\\"string\\\"],\\\"facebook\\\":[\\\"string\\\"],\\\"geometry\\\":[\\\"string\\\"],\\\"github\\\":[\\\"string\\\"],\\\"homepage\\\":[\\\"string\\\"],\\\"ignore\\\":[\\\"string\\\"],\\\"image\\\":[\\\"string\\\"],\\\"instagram\\\":[\\\"string\\\"],\\\"label\\\":[\\\"string\\\"],\\\"latitude\\\":[\\\"string\\\"],\\\"linkedin\\\":[\\\"string\\\"],\\\"longitude\\\":[\\\"string\\\"],\\\"mainLabel\\\":\\\"string\\\",\\\"optional\\\":[\\\"string\\\"],\\\"orcid\\\":[\\\"string\\\"],\\\"osmRelation\\\":[\\\"string\\\"],\\\"time\\\":[\\\"string\\\"],\\\"timeSeries\\\":[\\\"string\\\"],\\\"twitter\\\":[\\\"string\\\"],\\\"wikidata\\\":[\\\"string\\\"],\\\"wikipedia\\\":[\\\"string\\\"],\\\"youtube\\\":[\\\"string\\\"]},\\\"visualizationOrder\\\":[\\\"SIMPLE\\\"]}\"\n\nheaders = {\n    'accept': \"application/json\",\n    'content-type': \"application/json\",\n    'Authorization': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"POST\", \"/api/dataset/config\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
                    },
                    {
                        "lang": "Php + Curl",
                        "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"http://qanswer-core1.univ-st-etienne.fr/api/dataset/config\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_POSTFIELDS => \"{\\\"autocompletionConfig\\\":{\\\"dataSuggestion\\\":true,\\\"dataSuggestionType\\\":\\\"string\\\",\\\"graphSuggestion\\\":true,\\\"questionSuggestion\\\":true},\\\"dataset\\\":\\\"string\\\",\\\"featureTypes\\\":[\\\"string\\\"],\\\"indexConfig\\\":{\\\"dataset\\\":\\\"string\\\",\\\"lang\\\":[\\\"string\\\"],\\\"properties\\\":[\\\"string\\\"],\\\"subclass\\\":[\\\"string\\\"],\\\"type\\\":[\\\"string\\\"]},\\\"instanceMappings\\\":{\\\"property1\\\":[{\\\"lexicalization\\\":\\\"string\\\",\\\"uri\\\":\\\"string\\\"}],\\\"property2\\\":[{\\\"lexicalization\\\":\\\"string\\\",\\\"uri\\\":\\\"string\\\"}]},\\\"lang\\\":[\\\"string\\\"],\\\"languages\\\":[\\\"string\\\"],\\\"numberTriples\\\":0,\\\"properties\\\":[\\\"string\\\"],\\\"propertiesModifiersExpansion\\\":{\\\"property1\\\":\\\"string\\\",\\\"property2\\\":\\\"string\\\"},\\\"propertiesPropertiesExpansion\\\":{\\\"property1\\\":\\\"string\\\",\\\"property2\\\":\\\"string\\\"},\\\"propertyMappings\\\":{\\\"property1\\\":[{\\\"lexicalization\\\":\\\"string\\\",\\\"uri\\\":\\\"string\\\"}],\\\"property2\\\":[{\\\"lexicalization\\\":\\\"string\\\",\\\"uri\\\":\\\"string\\\"}]},\\\"rankerConfig\\\":{\\\"learningRate\\\":0,\\\"minLeafSupport\\\":0,\\\"nTreeLeaves\\\":0,\\\"nTrees\\\":0},\\\"recursiveIteration\\\":0,\\\"stopWords\\\":{\\\"property1\\\":[\\\"string\\\"],\\\"property2\\\":[\\\"string\\\"]},\\\"subclass\\\":[\\\"string\\\"],\\\"type\\\":[\\\"string\\\"],\\\"typeProperties\\\":[\\\"string\\\"],\\\"uiMappings\\\":{\\\"coordinate\\\":[\\\"string\\\"],\\\"dataset\\\":\\\"string\\\",\\\"dbpedia\\\":[\\\"string\\\"],\\\"description\\\":[\\\"string\\\"],\\\"disambiguation\\\":[\\\"string\\\"],\\\"doi\\\":[\\\"string\\\"],\\\"facebook\\\":[\\\"string\\\"],\\\"geometry\\\":[\\\"string\\\"],\\\"github\\\":[\\\"string\\\"],\\\"homepage\\\":[\\\"string\\\"],\\\"ignore\\\":[\\\"string\\\"],\\\"image\\\":[\\\"string\\\"],\\\"instagram\\\":[\\\"string\\\"],\\\"label\\\":[\\\"string\\\"],\\\"latitude\\\":[\\\"string\\\"],\\\"linkedin\\\":[\\\"string\\\"],\\\"longitude\\\":[\\\"string\\\"],\\\"mainLabel\\\":\\\"string\\\",\\\"optional\\\":[\\\"string\\\"],\\\"orcid\\\":[\\\"string\\\"],\\\"osmRelation\\\":[\\\"string\\\"],\\\"time\\\":[\\\"string\\\"],\\\"timeSeries\\\":[\\\"string\\\"],\\\"twitter\\\":[\\\"string\\\"],\\\"wikidata\\\":[\\\"string\\\"],\\\"wikipedia\\\":[\\\"string\\\"],\\\"youtube\\\":[\\\"string\\\"]},\\\"visualizationOrder\\\":[\\\"SIMPLE\\\"]}\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: REPLACE_KEY_VALUE\",\n    \"accept: application/json\",\n    \"content-type: application/json\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
                    },
                    {
                        "lang": "php",
                        "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('http://qanswer-core1.univ-st-etienne.fr/api/dataset/config');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setHeaders([\n  'accept' => 'application/json',\n  'content-type' => 'application/json',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$request->setBody('{\"autocompletionConfig\":{\"dataSuggestion\":true,\"dataSuggestionType\":\"string\",\"graphSuggestion\":true,\"questionSuggestion\":true},\"dataset\":\"string\",\"featureTypes\":[\"string\"],\"indexConfig\":{\"dataset\":\"string\",\"lang\":[\"string\"],\"properties\":[\"string\"],\"subclass\":[\"string\"],\"type\":[\"string\"]},\"instanceMappings\":{\"property1\":[{\"lexicalization\":\"string\",\"uri\":\"string\"}],\"property2\":[{\"lexicalization\":\"string\",\"uri\":\"string\"}]},\"lang\":[\"string\"],\"languages\":[\"string\"],\"numberTriples\":0,\"properties\":[\"string\"],\"propertiesModifiersExpansion\":{\"property1\":\"string\",\"property2\":\"string\"},\"propertiesPropertiesExpansion\":{\"property1\":\"string\",\"property2\":\"string\"},\"propertyMappings\":{\"property1\":[{\"lexicalization\":\"string\",\"uri\":\"string\"}],\"property2\":[{\"lexicalization\":\"string\",\"uri\":\"string\"}]},\"rankerConfig\":{\"learningRate\":0,\"minLeafSupport\":0,\"nTreeLeaves\":0,\"nTrees\":0},\"recursiveIteration\":0,\"stopWords\":{\"property1\":[\"string\"],\"property2\":[\"string\"]},\"subclass\":[\"string\"],\"type\":[\"string\"],\"typeProperties\":[\"string\"],\"uiMappings\":{\"coordinate\":[\"string\"],\"dataset\":\"string\",\"dbpedia\":[\"string\"],\"description\":[\"string\"],\"disambiguation\":[\"string\"],\"doi\":[\"string\"],\"facebook\":[\"string\"],\"geometry\":[\"string\"],\"github\":[\"string\"],\"homepage\":[\"string\"],\"ignore\":[\"string\"],\"image\":[\"string\"],\"instagram\":[\"string\"],\"label\":[\"string\"],\"latitude\":[\"string\"],\"linkedin\":[\"string\"],\"longitude\":[\"string\"],\"mainLabel\":\"string\",\"optional\":[\"string\"],\"orcid\":[\"string\"],\"osmRelation\":[\"string\"],\"time\":[\"string\"],\"timeSeries\":[\"string\"],\"twitter\":[\"string\"],\"wikidata\":[\"string\"],\"wikipedia\":[\"string\"],\"youtube\":[\"string\"]},\"visualizationOrder\":[\"SIMPLE\"]}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
                    },
                    {
                        "lang": "Php + Http2",
                        "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$body = new http\\Message\\Body;\n$body->append('{\"autocompletionConfig\":{\"dataSuggestion\":true,\"dataSuggestionType\":\"string\",\"graphSuggestion\":true,\"questionSuggestion\":true},\"dataset\":\"string\",\"featureTypes\":[\"string\"],\"indexConfig\":{\"dataset\":\"string\",\"lang\":[\"string\"],\"properties\":[\"string\"],\"subclass\":[\"string\"],\"type\":[\"string\"]},\"instanceMappings\":{\"property1\":[{\"lexicalization\":\"string\",\"uri\":\"string\"}],\"property2\":[{\"lexicalization\":\"string\",\"uri\":\"string\"}]},\"lang\":[\"string\"],\"languages\":[\"string\"],\"numberTriples\":0,\"properties\":[\"string\"],\"propertiesModifiersExpansion\":{\"property1\":\"string\",\"property2\":\"string\"},\"propertiesPropertiesExpansion\":{\"property1\":\"string\",\"property2\":\"string\"},\"propertyMappings\":{\"property1\":[{\"lexicalization\":\"string\",\"uri\":\"string\"}],\"property2\":[{\"lexicalization\":\"string\",\"uri\":\"string\"}]},\"rankerConfig\":{\"learningRate\":0,\"minLeafSupport\":0,\"nTreeLeaves\":0,\"nTrees\":0},\"recursiveIteration\":0,\"stopWords\":{\"property1\":[\"string\"],\"property2\":[\"string\"]},\"subclass\":[\"string\"],\"type\":[\"string\"],\"typeProperties\":[\"string\"],\"uiMappings\":{\"coordinate\":[\"string\"],\"dataset\":\"string\",\"dbpedia\":[\"string\"],\"description\":[\"string\"],\"disambiguation\":[\"string\"],\"doi\":[\"string\"],\"facebook\":[\"string\"],\"geometry\":[\"string\"],\"github\":[\"string\"],\"homepage\":[\"string\"],\"ignore\":[\"string\"],\"image\":[\"string\"],\"instagram\":[\"string\"],\"label\":[\"string\"],\"latitude\":[\"string\"],\"linkedin\":[\"string\"],\"longitude\":[\"string\"],\"mainLabel\":\"string\",\"optional\":[\"string\"],\"orcid\":[\"string\"],\"osmRelation\":[\"string\"],\"time\":[\"string\"],\"timeSeries\":[\"string\"],\"twitter\":[\"string\"],\"wikidata\":[\"string\"],\"wikipedia\":[\"string\"],\"youtube\":[\"string\"]},\"visualizationOrder\":[\"SIMPLE\"]}');\n\n$request->setRequestUrl('http://qanswer-core1.univ-st-etienne.fr/api/dataset/config');\n$request->setRequestMethod('POST');\n$request->setBody($body);\n\n$request->setHeaders([\n  'accept' => 'application/json',\n  'content-type' => 'application/json',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
                    }
                ]
            }
        },
        "/api/dataset/download": {
            "get": {
                "deprecated": false,
                "operationId": "downloadUsingGET",
                "parameters": [
                    {
                        "description": "dataset",
                        "in": "query",
                        "name": "dataset",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "summary": "To download an uploaded RDF dataset in N-triples",
                "tags": [
                    "dataset-controller-kg"
                ],
                "x-codeSamples": [
                    {
                        "lang": "Node + Request",
                        "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://qanswer-core1.univ-st-etienne.fr/api/dataset/download',\n  qs: {dataset: 'SOME_STRING_VALUE'},\n  headers: {'content-type': '*/*', Authorization: 'REPLACE_KEY_VALUE'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
                    },
                    {
                        "lang": "Shell + Curl",
                        "source": "curl --request GET \\\n  --url 'http://qanswer-core1.univ-st-etienne.fr/api/dataset/download?dataset=SOME_STRING_VALUE' \\\n  --header 'Authorization: REPLACE_KEY_VALUE' \\\n  --header 'content-type: */*'"
                    },
                    {
                        "lang": "Shell + Httpie",
                        "source": "http GET 'http://qanswer-core1.univ-st-etienne.fr/api/dataset/download?dataset=SOME_STRING_VALUE' \\\n  Authorization:REPLACE_KEY_VALUE \\\n  content-type:'*/*'"
                    },
                    {
                        "lang": "Python + Python3",
                        "source": "import http.client\n\nconn = http.client.HTTPConnection(\"qanswer-core1.univ-st-etienne.fr\")\n\nheaders = {\n    'content-type': \"*/*\",\n    'Authorization': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"GET\", \"/api/dataset/download?dataset=SOME_STRING_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
                    },
                    {
                        "lang": "Php + Curl",
                        "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"http://qanswer-core1.univ-st-etienne.fr/api/dataset/download?dataset=SOME_STRING_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: REPLACE_KEY_VALUE\",\n    \"content-type: */*\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
                    },
                    {
                        "lang": "php",
                        "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('http://qanswer-core1.univ-st-etienne.fr/api/dataset/download');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setQueryData([\n  'dataset' => 'SOME_STRING_VALUE'\n]);\n\n$request->setHeaders([\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
                    },
                    {
                        "lang": "Php + Http2",
                        "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('http://qanswer-core1.univ-st-etienne.fr/api/dataset/download');\n$request->setRequestMethod('GET');\n$request->setQuery(new http\\QueryString([\n  'dataset' => 'SOME_STRING_VALUE'\n]));\n\n$request->setHeaders([\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
                    }
                ]
            }
        },
        "/api/dataset/edit": {
            "post": {
                "consumes": [
                    "multipart/form-data"
                ],
                "deprecated": false,
                "description": "The N-triples file needs to be syntactically correct!",
                "operationId": "editUsingPOST",
                "parameters": [
                    {
                        "description": "dataset",
                        "in": "query",
                        "name": "dataset",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "file",
                        "in": "formData",
                        "name": "file",
                        "required": true,
                        "type": "file"
                    },
                    {
                        "collectionFormat": "multi",
                        "default": "en,de,fr,it,pt,ja,es,nl,ar,zh",
                        "description": "lang",
                        "in": "query",
                        "items": {
                            "type": "string"
                        },
                        "name": "lang",
                        "required": false,
                        "type": "array"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "summary": "To change the RDF dataset in N-triples of a dataset",
                "tags": [
                    "dataset-controller-kg"
                ],
                "x-codeSamples": [
                    {
                        "lang": "Node + Request",
                        "source": "const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'http://qanswer-core1.univ-st-etienne.fr/api/dataset/edit',\n  qs: {dataset: 'SOME_STRING_VALUE', lang: 'en,de,fr,it,pt,ja,es,nl,ar,zh'},\n  headers: {\n    accept: 'multipart/form-data',\n    'content-type': 'application/json',\n    Authorization: 'REPLACE_KEY_VALUE'\n  }\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
                    },
                    {
                        "lang": "Shell + Curl",
                        "source": "curl --request POST \\\n  --url 'http://qanswer-core1.univ-st-etienne.fr/api/dataset/edit?dataset=SOME_STRING_VALUE&lang=en%2Cde%2Cfr%2Cit%2Cpt%2Cja%2Ces%2Cnl%2Car%2Czh' \\\n  --header 'Authorization: REPLACE_KEY_VALUE' \\\n  --header 'accept: multipart/form-data' \\\n  --header 'content-type: application/json'"
                    },
                    {
                        "lang": "Shell + Httpie",
                        "source": "http POST 'http://qanswer-core1.univ-st-etienne.fr/api/dataset/edit?dataset=SOME_STRING_VALUE&lang=en%2Cde%2Cfr%2Cit%2Cpt%2Cja%2Ces%2Cnl%2Car%2Czh' \\\n  Authorization:REPLACE_KEY_VALUE \\\n  accept:multipart/form-data \\\n  content-type:application/json"
                    },
                    {
                        "lang": "Python + Python3",
                        "source": "import http.client\n\nconn = http.client.HTTPConnection(\"qanswer-core1.univ-st-etienne.fr\")\n\nheaders = {\n    'accept': \"multipart/form-data\",\n    'content-type': \"application/json\",\n    'Authorization': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"POST\", \"/api/dataset/edit?dataset=SOME_STRING_VALUE&lang=en%2Cde%2Cfr%2Cit%2Cpt%2Cja%2Ces%2Cnl%2Car%2Czh\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
                    },
                    {
                        "lang": "Php + Curl",
                        "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"http://qanswer-core1.univ-st-etienne.fr/api/dataset/edit?dataset=SOME_STRING_VALUE&lang=en%2Cde%2Cfr%2Cit%2Cpt%2Cja%2Ces%2Cnl%2Car%2Czh\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: REPLACE_KEY_VALUE\",\n    \"accept: multipart/form-data\",\n    \"content-type: application/json\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
                    },
                    {
                        "lang": "php",
                        "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('http://qanswer-core1.univ-st-etienne.fr/api/dataset/edit');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setQueryData([\n  'dataset' => 'SOME_STRING_VALUE',\n  'lang' => 'en,de,fr,it,pt,ja,es,nl,ar,zh'\n]);\n\n$request->setHeaders([\n  'accept' => 'multipart/form-data',\n  'content-type' => 'application/json',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
                    },
                    {
                        "lang": "Php + Http2",
                        "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('http://qanswer-core1.univ-st-etienne.fr/api/dataset/edit');\n$request->setRequestMethod('POST');\n$request->setQuery(new http\\QueryString([\n  'dataset' => 'SOME_STRING_VALUE',\n  'lang' => 'en,de,fr,it,pt,ja,es,nl,ar,zh'\n]));\n\n$request->setHeaders([\n  'accept' => 'multipart/form-data',\n  'content-type' => 'application/json',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
                    }
                ]
            }
        },
        "/api/dataset/index": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "deprecated": false,
                "operationId": "indexUsingPOST",
                "parameters": [
                    {
                        "description": "indexConfig",
                        "in": "body",
                        "name": "indexConfig",
                        "required": true,
                        "schema": {
                            "properties": {
                                "dataset": {
                                    "type": "string"
                                },
                                "lang": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "properties": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "subclass": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "type": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            },
                            "title": "IndexConfig",
                            "type": "object"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "summary": "To index an already uploded RDF dataset before it can be queried",
                "tags": [
                    "dataset-controller-kg"
                ],
                "x-codeSamples": [
                    {
                        "lang": "Node + Request",
                        "source": "const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'http://qanswer-core1.univ-st-etienne.fr/api/dataset/index',\n  headers: {\n    accept: 'application/json',\n    'content-type': 'application/json',\n    Authorization: 'REPLACE_KEY_VALUE'\n  },\n  body: {\n    dataset: 'string',\n    lang: ['string'],\n    properties: ['string'],\n    subclass: ['string'],\n    type: ['string']\n  },\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
                    },
                    {
                        "lang": "Shell + Curl",
                        "source": "curl --request POST \\\n  --url http://qanswer-core1.univ-st-etienne.fr/api/dataset/index \\\n  --header 'Authorization: REPLACE_KEY_VALUE' \\\n  --header 'accept: application/json' \\\n  --header 'content-type: application/json' \\\n  --data '{\"dataset\":\"string\",\"lang\":[\"string\"],\"properties\":[\"string\"],\"subclass\":[\"string\"],\"type\":[\"string\"]}'"
                    },
                    {
                        "lang": "Shell + Httpie",
                        "source": "echo '{\"dataset\":\"string\",\"lang\":[\"string\"],\"properties\":[\"string\"],\"subclass\":[\"string\"],\"type\":[\"string\"]}' |  \\\n  http POST http://qanswer-core1.univ-st-etienne.fr/api/dataset/index \\\n  Authorization:REPLACE_KEY_VALUE \\\n  accept:application/json \\\n  content-type:application/json"
                    },
                    {
                        "lang": "Python + Python3",
                        "source": "import http.client\n\nconn = http.client.HTTPConnection(\"qanswer-core1.univ-st-etienne.fr\")\n\npayload = \"{\\\"dataset\\\":\\\"string\\\",\\\"lang\\\":[\\\"string\\\"],\\\"properties\\\":[\\\"string\\\"],\\\"subclass\\\":[\\\"string\\\"],\\\"type\\\":[\\\"string\\\"]}\"\n\nheaders = {\n    'accept': \"application/json\",\n    'content-type': \"application/json\",\n    'Authorization': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"POST\", \"/api/dataset/index\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
                    },
                    {
                        "lang": "Php + Curl",
                        "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"http://qanswer-core1.univ-st-etienne.fr/api/dataset/index\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_POSTFIELDS => \"{\\\"dataset\\\":\\\"string\\\",\\\"lang\\\":[\\\"string\\\"],\\\"properties\\\":[\\\"string\\\"],\\\"subclass\\\":[\\\"string\\\"],\\\"type\\\":[\\\"string\\\"]}\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: REPLACE_KEY_VALUE\",\n    \"accept: application/json\",\n    \"content-type: application/json\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
                    },
                    {
                        "lang": "php",
                        "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('http://qanswer-core1.univ-st-etienne.fr/api/dataset/index');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setHeaders([\n  'accept' => 'application/json',\n  'content-type' => 'application/json',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$request->setBody('{\"dataset\":\"string\",\"lang\":[\"string\"],\"properties\":[\"string\"],\"subclass\":[\"string\"],\"type\":[\"string\"]}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
                    },
                    {
                        "lang": "Php + Http2",
                        "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$body = new http\\Message\\Body;\n$body->append('{\"dataset\":\"string\",\"lang\":[\"string\"],\"properties\":[\"string\"],\"subclass\":[\"string\"],\"type\":[\"string\"]}');\n\n$request->setRequestUrl('http://qanswer-core1.univ-st-etienne.fr/api/dataset/index');\n$request->setRequestMethod('POST');\n$request->setBody($body);\n\n$request->setHeaders([\n  'accept' => 'application/json',\n  'content-type' => 'application/json',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
                    }
                ]
            }
        },
        "/api/dataset/list": {
            "get": {
                "deprecated": false,
                "operationId": "getListDatasetsUsingGET",
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/DatasetDetailKg"
                            },
                            "type": "array"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "summary": "Lists all datasets uploaded by the user",
                "tags": [
                    "dataset-controller-kg"
                ],
                "x-codeSamples": [
                    {
                        "lang": "Node + Request",
                        "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://qanswer-core1.univ-st-etienne.fr/api/dataset/list',\n  headers: {'content-type': '*/*', Authorization: 'REPLACE_KEY_VALUE'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
                    },
                    {
                        "lang": "Shell + Curl",
                        "source": "curl --request GET \\\n  --url http://qanswer-core1.univ-st-etienne.fr/api/dataset/list \\\n  --header 'Authorization: REPLACE_KEY_VALUE' \\\n  --header 'content-type: */*'"
                    },
                    {
                        "lang": "Shell + Httpie",
                        "source": "http GET http://qanswer-core1.univ-st-etienne.fr/api/dataset/list \\\n  Authorization:REPLACE_KEY_VALUE \\\n  content-type:'*/*'"
                    },
                    {
                        "lang": "Python + Python3",
                        "source": "import http.client\n\nconn = http.client.HTTPConnection(\"qanswer-core1.univ-st-etienne.fr\")\n\nheaders = {\n    'content-type': \"*/*\",\n    'Authorization': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"GET\", \"/api/dataset/list\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
                    },
                    {
                        "lang": "Php + Curl",
                        "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"http://qanswer-core1.univ-st-etienne.fr/api/dataset/list\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: REPLACE_KEY_VALUE\",\n    \"content-type: */*\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
                    },
                    {
                        "lang": "php",
                        "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('http://qanswer-core1.univ-st-etienne.fr/api/dataset/list');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setHeaders([\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
                    },
                    {
                        "lang": "Php + Http2",
                        "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('http://qanswer-core1.univ-st-etienne.fr/api/dataset/list');\n$request->setRequestMethod('GET');\n$request->setHeaders([\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
                    }
                ]
            }
        },
        "/api/dataset/logo": {
            "get": {
                "deprecated": false,
                "operationId": "getLogoUsingGET_1",
                "parameters": [
                    {
                        "description": "dataset",
                        "in": "query",
                        "name": "dataset",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "user",
                        "in": "query",
                        "name": "user",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "image/png"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "format": "byte",
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "summary": "Retrives the logo of a specific dataset",
                "tags": [
                    "dataset-controller-kg"
                ],
                "x-codeSamples": [
                    {
                        "lang": "Node + Request",
                        "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://qanswer-core1.univ-st-etienne.fr/api/dataset/logo',\n  qs: {dataset: 'SOME_STRING_VALUE', user: 'SOME_STRING_VALUE'},\n  headers: {'content-type': 'image/png', Authorization: 'REPLACE_KEY_VALUE'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
                    },
                    {
                        "lang": "Shell + Curl",
                        "source": "curl --request GET \\\n  --url 'http://qanswer-core1.univ-st-etienne.fr/api/dataset/logo?dataset=SOME_STRING_VALUE&user=SOME_STRING_VALUE' \\\n  --header 'Authorization: REPLACE_KEY_VALUE' \\\n  --header 'content-type: image/png'"
                    },
                    {
                        "lang": "Shell + Httpie",
                        "source": "http GET 'http://qanswer-core1.univ-st-etienne.fr/api/dataset/logo?dataset=SOME_STRING_VALUE&user=SOME_STRING_VALUE' \\\n  Authorization:REPLACE_KEY_VALUE \\\n  content-type:image/png"
                    },
                    {
                        "lang": "Python + Python3",
                        "source": "import http.client\n\nconn = http.client.HTTPConnection(\"qanswer-core1.univ-st-etienne.fr\")\n\nheaders = {\n    'content-type': \"image/png\",\n    'Authorization': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"GET\", \"/api/dataset/logo?dataset=SOME_STRING_VALUE&user=SOME_STRING_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
                    },
                    {
                        "lang": "Php + Curl",
                        "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"http://qanswer-core1.univ-st-etienne.fr/api/dataset/logo?dataset=SOME_STRING_VALUE&user=SOME_STRING_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: REPLACE_KEY_VALUE\",\n    \"content-type: image/png\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
                    },
                    {
                        "lang": "php",
                        "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('http://qanswer-core1.univ-st-etienne.fr/api/dataset/logo');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setQueryData([\n  'dataset' => 'SOME_STRING_VALUE',\n  'user' => 'SOME_STRING_VALUE'\n]);\n\n$request->setHeaders([\n  'content-type' => 'image/png',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
                    },
                    {
                        "lang": "Php + Http2",
                        "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('http://qanswer-core1.univ-st-etienne.fr/api/dataset/logo');\n$request->setRequestMethod('GET');\n$request->setQuery(new http\\QueryString([\n  'dataset' => 'SOME_STRING_VALUE',\n  'user' => 'SOME_STRING_VALUE'\n]));\n\n$request->setHeaders([\n  'content-type' => 'image/png',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
                    }
                ]
            }
        },
        "/api/dataset/mappings": {
            "get": {
                "deprecated": true,
                "operationId": "getContextUsingGET",
                "parameters": [
                    {
                        "description": "dataset",
                        "in": "query",
                        "name": "dataset",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/UIMappings"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "summary": "Get all specified properties for contextual information",
                "tags": [
                    "dataset-controller-kg"
                ],
                "x-codeSamples": [
                    {
                        "lang": "Node + Request",
                        "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://qanswer-core1.univ-st-etienne.fr/api/dataset/mappings',\n  qs: {dataset: 'SOME_STRING_VALUE'},\n  headers: {'content-type': 'application/json', Authorization: 'REPLACE_KEY_VALUE'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
                    },
                    {
                        "lang": "Shell + Curl",
                        "source": "curl --request GET \\\n  --url 'http://qanswer-core1.univ-st-etienne.fr/api/dataset/mappings?dataset=SOME_STRING_VALUE' \\\n  --header 'Authorization: REPLACE_KEY_VALUE' \\\n  --header 'content-type: application/json'"
                    },
                    {
                        "lang": "Shell + Httpie",
                        "source": "http GET 'http://qanswer-core1.univ-st-etienne.fr/api/dataset/mappings?dataset=SOME_STRING_VALUE' \\\n  Authorization:REPLACE_KEY_VALUE \\\n  content-type:application/json"
                    },
                    {
                        "lang": "Python + Python3",
                        "source": "import http.client\n\nconn = http.client.HTTPConnection(\"qanswer-core1.univ-st-etienne.fr\")\n\nheaders = {\n    'content-type': \"application/json\",\n    'Authorization': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"GET\", \"/api/dataset/mappings?dataset=SOME_STRING_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
                    },
                    {
                        "lang": "Php + Curl",
                        "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"http://qanswer-core1.univ-st-etienne.fr/api/dataset/mappings?dataset=SOME_STRING_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: REPLACE_KEY_VALUE\",\n    \"content-type: application/json\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
                    },
                    {
                        "lang": "php",
                        "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('http://qanswer-core1.univ-st-etienne.fr/api/dataset/mappings');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setQueryData([\n  'dataset' => 'SOME_STRING_VALUE'\n]);\n\n$request->setHeaders([\n  'content-type' => 'application/json',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
                    },
                    {
                        "lang": "Php + Http2",
                        "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('http://qanswer-core1.univ-st-etienne.fr/api/dataset/mappings');\n$request->setRequestMethod('GET');\n$request->setQuery(new http\\QueryString([\n  'dataset' => 'SOME_STRING_VALUE'\n]));\n\n$request->setHeaders([\n  'content-type' => 'application/json',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
                    }
                ]
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "deprecated": true,
                "operationId": "setContextUsingPOST",
                "parameters": [
                    {
                        "description": "UIMappings",
                        "in": "body",
                        "name": "UIMappings",
                        "required": true,
                        "schema": {
                            "properties": {
                                "coordinate": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "dataset": {
                                    "type": "string"
                                },
                                "dbpedia": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "description": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "disambiguation": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "doi": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "facebook": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "geometry": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "github": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "homepage": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "ignore": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "image": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "instagram": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "label": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "latitude": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "linkedin": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "longitude": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "mainLabel": {
                                    "type": "string"
                                },
                                "optional": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "orcid": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "osmRelation": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "time": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "timeSeries": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "twitter": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "wikidata": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "wikipedia": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "youtube": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            },
                            "title": "UIMappings",
                            "type": "object"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "summary": "Specify specific properties for contextual information",
                "tags": [
                    "dataset-controller-kg"
                ],
                "x-codeSamples": [
                    {
                        "lang": "Node + Request",
                        "source": "const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'http://qanswer-core1.univ-st-etienne.fr/api/dataset/mappings',\n  headers: {\n    accept: 'application/json',\n    'content-type': 'application/json',\n    Authorization: 'REPLACE_KEY_VALUE'\n  },\n  body: {\n    coordinate: ['string'],\n    dataset: 'string',\n    dbpedia: ['string'],\n    description: ['string'],\n    disambiguation: ['string'],\n    doi: ['string'],\n    facebook: ['string'],\n    geometry: ['string'],\n    github: ['string'],\n    homepage: ['string'],\n    ignore: ['string'],\n    image: ['string'],\n    instagram: ['string'],\n    label: ['string'],\n    latitude: ['string'],\n    linkedin: ['string'],\n    longitude: ['string'],\n    mainLabel: 'string',\n    optional: ['string'],\n    orcid: ['string'],\n    osmRelation: ['string'],\n    time: ['string'],\n    timeSeries: ['string'],\n    twitter: ['string'],\n    wikidata: ['string'],\n    wikipedia: ['string'],\n    youtube: ['string']\n  },\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
                    },
                    {
                        "lang": "Shell + Curl",
                        "source": "curl --request POST \\\n  --url http://qanswer-core1.univ-st-etienne.fr/api/dataset/mappings \\\n  --header 'Authorization: REPLACE_KEY_VALUE' \\\n  --header 'accept: application/json' \\\n  --header 'content-type: application/json' \\\n  --data '{\"coordinate\":[\"string\"],\"dataset\":\"string\",\"dbpedia\":[\"string\"],\"description\":[\"string\"],\"disambiguation\":[\"string\"],\"doi\":[\"string\"],\"facebook\":[\"string\"],\"geometry\":[\"string\"],\"github\":[\"string\"],\"homepage\":[\"string\"],\"ignore\":[\"string\"],\"image\":[\"string\"],\"instagram\":[\"string\"],\"label\":[\"string\"],\"latitude\":[\"string\"],\"linkedin\":[\"string\"],\"longitude\":[\"string\"],\"mainLabel\":\"string\",\"optional\":[\"string\"],\"orcid\":[\"string\"],\"osmRelation\":[\"string\"],\"time\":[\"string\"],\"timeSeries\":[\"string\"],\"twitter\":[\"string\"],\"wikidata\":[\"string\"],\"wikipedia\":[\"string\"],\"youtube\":[\"string\"]}'"
                    },
                    {
                        "lang": "Shell + Httpie",
                        "source": "echo '{\"coordinate\":[\"string\"],\"dataset\":\"string\",\"dbpedia\":[\"string\"],\"description\":[\"string\"],\"disambiguation\":[\"string\"],\"doi\":[\"string\"],\"facebook\":[\"string\"],\"geometry\":[\"string\"],\"github\":[\"string\"],\"homepage\":[\"string\"],\"ignore\":[\"string\"],\"image\":[\"string\"],\"instagram\":[\"string\"],\"label\":[\"string\"],\"latitude\":[\"string\"],\"linkedin\":[\"string\"],\"longitude\":[\"string\"],\"mainLabel\":\"string\",\"optional\":[\"string\"],\"orcid\":[\"string\"],\"osmRelation\":[\"string\"],\"time\":[\"string\"],\"timeSeries\":[\"string\"],\"twitter\":[\"string\"],\"wikidata\":[\"string\"],\"wikipedia\":[\"string\"],\"youtube\":[\"string\"]}' |  \\\n  http POST http://qanswer-core1.univ-st-etienne.fr/api/dataset/mappings \\\n  Authorization:REPLACE_KEY_VALUE \\\n  accept:application/json \\\n  content-type:application/json"
                    },
                    {
                        "lang": "Python + Python3",
                        "source": "import http.client\n\nconn = http.client.HTTPConnection(\"qanswer-core1.univ-st-etienne.fr\")\n\npayload = \"{\\\"coordinate\\\":[\\\"string\\\"],\\\"dataset\\\":\\\"string\\\",\\\"dbpedia\\\":[\\\"string\\\"],\\\"description\\\":[\\\"string\\\"],\\\"disambiguation\\\":[\\\"string\\\"],\\\"doi\\\":[\\\"string\\\"],\\\"facebook\\\":[\\\"string\\\"],\\\"geometry\\\":[\\\"string\\\"],\\\"github\\\":[\\\"string\\\"],\\\"homepage\\\":[\\\"string\\\"],\\\"ignore\\\":[\\\"string\\\"],\\\"image\\\":[\\\"string\\\"],\\\"instagram\\\":[\\\"string\\\"],\\\"label\\\":[\\\"string\\\"],\\\"latitude\\\":[\\\"string\\\"],\\\"linkedin\\\":[\\\"string\\\"],\\\"longitude\\\":[\\\"string\\\"],\\\"mainLabel\\\":\\\"string\\\",\\\"optional\\\":[\\\"string\\\"],\\\"orcid\\\":[\\\"string\\\"],\\\"osmRelation\\\":[\\\"string\\\"],\\\"time\\\":[\\\"string\\\"],\\\"timeSeries\\\":[\\\"string\\\"],\\\"twitter\\\":[\\\"string\\\"],\\\"wikidata\\\":[\\\"string\\\"],\\\"wikipedia\\\":[\\\"string\\\"],\\\"youtube\\\":[\\\"string\\\"]}\"\n\nheaders = {\n    'accept': \"application/json\",\n    'content-type': \"application/json\",\n    'Authorization': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"POST\", \"/api/dataset/mappings\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
                    },
                    {
                        "lang": "Php + Curl",
                        "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"http://qanswer-core1.univ-st-etienne.fr/api/dataset/mappings\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_POSTFIELDS => \"{\\\"coordinate\\\":[\\\"string\\\"],\\\"dataset\\\":\\\"string\\\",\\\"dbpedia\\\":[\\\"string\\\"],\\\"description\\\":[\\\"string\\\"],\\\"disambiguation\\\":[\\\"string\\\"],\\\"doi\\\":[\\\"string\\\"],\\\"facebook\\\":[\\\"string\\\"],\\\"geometry\\\":[\\\"string\\\"],\\\"github\\\":[\\\"string\\\"],\\\"homepage\\\":[\\\"string\\\"],\\\"ignore\\\":[\\\"string\\\"],\\\"image\\\":[\\\"string\\\"],\\\"instagram\\\":[\\\"string\\\"],\\\"label\\\":[\\\"string\\\"],\\\"latitude\\\":[\\\"string\\\"],\\\"linkedin\\\":[\\\"string\\\"],\\\"longitude\\\":[\\\"string\\\"],\\\"mainLabel\\\":\\\"string\\\",\\\"optional\\\":[\\\"string\\\"],\\\"orcid\\\":[\\\"string\\\"],\\\"osmRelation\\\":[\\\"string\\\"],\\\"time\\\":[\\\"string\\\"],\\\"timeSeries\\\":[\\\"string\\\"],\\\"twitter\\\":[\\\"string\\\"],\\\"wikidata\\\":[\\\"string\\\"],\\\"wikipedia\\\":[\\\"string\\\"],\\\"youtube\\\":[\\\"string\\\"]}\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: REPLACE_KEY_VALUE\",\n    \"accept: application/json\",\n    \"content-type: application/json\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
                    },
                    {
                        "lang": "php",
                        "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('http://qanswer-core1.univ-st-etienne.fr/api/dataset/mappings');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setHeaders([\n  'accept' => 'application/json',\n  'content-type' => 'application/json',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$request->setBody('{\"coordinate\":[\"string\"],\"dataset\":\"string\",\"dbpedia\":[\"string\"],\"description\":[\"string\"],\"disambiguation\":[\"string\"],\"doi\":[\"string\"],\"facebook\":[\"string\"],\"geometry\":[\"string\"],\"github\":[\"string\"],\"homepage\":[\"string\"],\"ignore\":[\"string\"],\"image\":[\"string\"],\"instagram\":[\"string\"],\"label\":[\"string\"],\"latitude\":[\"string\"],\"linkedin\":[\"string\"],\"longitude\":[\"string\"],\"mainLabel\":\"string\",\"optional\":[\"string\"],\"orcid\":[\"string\"],\"osmRelation\":[\"string\"],\"time\":[\"string\"],\"timeSeries\":[\"string\"],\"twitter\":[\"string\"],\"wikidata\":[\"string\"],\"wikipedia\":[\"string\"],\"youtube\":[\"string\"]}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
                    },
                    {
                        "lang": "Php + Http2",
                        "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$body = new http\\Message\\Body;\n$body->append('{\"coordinate\":[\"string\"],\"dataset\":\"string\",\"dbpedia\":[\"string\"],\"description\":[\"string\"],\"disambiguation\":[\"string\"],\"doi\":[\"string\"],\"facebook\":[\"string\"],\"geometry\":[\"string\"],\"github\":[\"string\"],\"homepage\":[\"string\"],\"ignore\":[\"string\"],\"image\":[\"string\"],\"instagram\":[\"string\"],\"label\":[\"string\"],\"latitude\":[\"string\"],\"linkedin\":[\"string\"],\"longitude\":[\"string\"],\"mainLabel\":\"string\",\"optional\":[\"string\"],\"orcid\":[\"string\"],\"osmRelation\":[\"string\"],\"time\":[\"string\"],\"timeSeries\":[\"string\"],\"twitter\":[\"string\"],\"wikidata\":[\"string\"],\"wikipedia\":[\"string\"],\"youtube\":[\"string\"]}');\n\n$request->setRequestUrl('http://qanswer-core1.univ-st-etienne.fr/api/dataset/mappings');\n$request->setRequestMethod('POST');\n$request->setBody($body);\n\n$request->setHeaders([\n  'accept' => 'application/json',\n  'content-type' => 'application/json',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
                    }
                ]
            }
        },
        "/api/dataset/remove": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "deprecated": false,
                "operationId": "removeUsingPOST_1",
                "parameters": [
                    {
                        "description": "dataset",
                        "in": "query",
                        "name": "dataset",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "summary": "To remove a specific dataset",
                "tags": [
                    "dataset-controller-kg"
                ],
                "x-codeSamples": [
                    {
                        "lang": "Node + Request",
                        "source": "const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'http://qanswer-core1.univ-st-etienne.fr/api/dataset/remove',\n  qs: {dataset: 'SOME_STRING_VALUE'},\n  headers: {\n    accept: 'application/json',\n    'content-type': 'application/json',\n    Authorization: 'REPLACE_KEY_VALUE'\n  }\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
                    },
                    {
                        "lang": "Shell + Curl",
                        "source": "curl --request POST \\\n  --url 'http://qanswer-core1.univ-st-etienne.fr/api/dataset/remove?dataset=SOME_STRING_VALUE' \\\n  --header 'Authorization: REPLACE_KEY_VALUE' \\\n  --header 'accept: application/json' \\\n  --header 'content-type: application/json'"
                    },
                    {
                        "lang": "Shell + Httpie",
                        "source": "http POST 'http://qanswer-core1.univ-st-etienne.fr/api/dataset/remove?dataset=SOME_STRING_VALUE' \\\n  Authorization:REPLACE_KEY_VALUE \\\n  accept:application/json \\\n  content-type:application/json"
                    },
                    {
                        "lang": "Python + Python3",
                        "source": "import http.client\n\nconn = http.client.HTTPConnection(\"qanswer-core1.univ-st-etienne.fr\")\n\nheaders = {\n    'accept': \"application/json\",\n    'content-type': \"application/json\",\n    'Authorization': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"POST\", \"/api/dataset/remove?dataset=SOME_STRING_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
                    },
                    {
                        "lang": "Php + Curl",
                        "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"http://qanswer-core1.univ-st-etienne.fr/api/dataset/remove?dataset=SOME_STRING_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: REPLACE_KEY_VALUE\",\n    \"accept: application/json\",\n    \"content-type: application/json\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
                    },
                    {
                        "lang": "php",
                        "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('http://qanswer-core1.univ-st-etienne.fr/api/dataset/remove');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setQueryData([\n  'dataset' => 'SOME_STRING_VALUE'\n]);\n\n$request->setHeaders([\n  'accept' => 'application/json',\n  'content-type' => 'application/json',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
                    },
                    {
                        "lang": "Php + Http2",
                        "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('http://qanswer-core1.univ-st-etienne.fr/api/dataset/remove');\n$request->setRequestMethod('POST');\n$request->setQuery(new http\\QueryString([\n  'dataset' => 'SOME_STRING_VALUE'\n]));\n\n$request->setHeaders([\n  'accept' => 'application/json',\n  'content-type' => 'application/json',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
                    }
                ]
            }
        },
        "/api/dataset/set_default_model": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "deprecated": false,
                "operationId": "setDefaultModelUsingPOST",
                "parameters": [
                    {
                        "collectionFormat": "multi",
                        "description": "kbs",
                        "in": "query",
                        "items": {
                            "type": "string"
                        },
                        "name": "kbs",
                        "required": false,
                        "type": "array"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "summary": "Set the ML model to the default ones",
                "tags": [
                    "dataset-controller-kg"
                ],
                "x-codeSamples": [
                    {
                        "lang": "Node + Request",
                        "source": "const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'http://qanswer-core1.univ-st-etienne.fr/api/dataset/set_default_model',\n  qs: {kbs: 'SOME_ARRAY_VALUE'},\n  headers: {\n    accept: 'application/json',\n    'content-type': 'application/json',\n    Authorization: 'REPLACE_KEY_VALUE'\n  }\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
                    },
                    {
                        "lang": "Shell + Curl",
                        "source": "curl --request POST \\\n  --url 'http://qanswer-core1.univ-st-etienne.fr/api/dataset/set_default_model?kbs=SOME_ARRAY_VALUE' \\\n  --header 'Authorization: REPLACE_KEY_VALUE' \\\n  --header 'accept: application/json' \\\n  --header 'content-type: application/json'"
                    },
                    {
                        "lang": "Shell + Httpie",
                        "source": "http POST 'http://qanswer-core1.univ-st-etienne.fr/api/dataset/set_default_model?kbs=SOME_ARRAY_VALUE' \\\n  Authorization:REPLACE_KEY_VALUE \\\n  accept:application/json \\\n  content-type:application/json"
                    },
                    {
                        "lang": "Python + Python3",
                        "source": "import http.client\n\nconn = http.client.HTTPConnection(\"qanswer-core1.univ-st-etienne.fr\")\n\nheaders = {\n    'accept': \"application/json\",\n    'content-type': \"application/json\",\n    'Authorization': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"POST\", \"/api/dataset/set_default_model?kbs=SOME_ARRAY_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
                    },
                    {
                        "lang": "Php + Curl",
                        "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"http://qanswer-core1.univ-st-etienne.fr/api/dataset/set_default_model?kbs=SOME_ARRAY_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: REPLACE_KEY_VALUE\",\n    \"accept: application/json\",\n    \"content-type: application/json\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
                    },
                    {
                        "lang": "php",
                        "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('http://qanswer-core1.univ-st-etienne.fr/api/dataset/set_default_model');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setQueryData([\n  'kbs' => 'SOME_ARRAY_VALUE'\n]);\n\n$request->setHeaders([\n  'accept' => 'application/json',\n  'content-type' => 'application/json',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
                    },
                    {
                        "lang": "Php + Http2",
                        "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('http://qanswer-core1.univ-st-etienne.fr/api/dataset/set_default_model');\n$request->setRequestMethod('POST');\n$request->setQuery(new http\\QueryString([\n  'kbs' => 'SOME_ARRAY_VALUE'\n]));\n\n$request->setHeaders([\n  'accept' => 'application/json',\n  'content-type' => 'application/json',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
                    }
                ]
            }
        },
        "/api/dataset/share": {
            "get": {
                "deprecated": false,
                "operationId": "getShareUsingGET",
                "parameters": [
                    {
                        "description": "dataset",
                        "in": "query",
                        "name": "dataset",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "summary": "To check the current access of the dataset",
                "tags": [
                    "dataset-controller-kg"
                ],
                "x-codeSamples": [
                    {
                        "lang": "Node + Request",
                        "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://qanswer-core1.univ-st-etienne.fr/api/dataset/share',\n  qs: {dataset: 'SOME_STRING_VALUE'},\n  headers: {'content-type': '*/*', Authorization: 'REPLACE_KEY_VALUE'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
                    },
                    {
                        "lang": "Shell + Curl",
                        "source": "curl --request GET \\\n  --url 'http://qanswer-core1.univ-st-etienne.fr/api/dataset/share?dataset=SOME_STRING_VALUE' \\\n  --header 'Authorization: REPLACE_KEY_VALUE' \\\n  --header 'content-type: */*'"
                    },
                    {
                        "lang": "Shell + Httpie",
                        "source": "http GET 'http://qanswer-core1.univ-st-etienne.fr/api/dataset/share?dataset=SOME_STRING_VALUE' \\\n  Authorization:REPLACE_KEY_VALUE \\\n  content-type:'*/*'"
                    },
                    {
                        "lang": "Python + Python3",
                        "source": "import http.client\n\nconn = http.client.HTTPConnection(\"qanswer-core1.univ-st-etienne.fr\")\n\nheaders = {\n    'content-type': \"*/*\",\n    'Authorization': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"GET\", \"/api/dataset/share?dataset=SOME_STRING_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
                    },
                    {
                        "lang": "Php + Curl",
                        "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"http://qanswer-core1.univ-st-etienne.fr/api/dataset/share?dataset=SOME_STRING_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: REPLACE_KEY_VALUE\",\n    \"content-type: */*\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
                    },
                    {
                        "lang": "php",
                        "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('http://qanswer-core1.univ-st-etienne.fr/api/dataset/share');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setQueryData([\n  'dataset' => 'SOME_STRING_VALUE'\n]);\n\n$request->setHeaders([\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
                    },
                    {
                        "lang": "Php + Http2",
                        "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('http://qanswer-core1.univ-st-etienne.fr/api/dataset/share');\n$request->setRequestMethod('GET');\n$request->setQuery(new http\\QueryString([\n  'dataset' => 'SOME_STRING_VALUE'\n]));\n\n$request->setHeaders([\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
                    }
                ]
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "deprecated": false,
                "operationId": "setShareUsingPOST",
                "parameters": [
                    {
                        "description": "dataset",
                        "in": "query",
                        "name": "dataset",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "collectionFormat": "multi",
                        "description": "users",
                        "in": "query",
                        "items": {
                            "type": "string"
                        },
                        "name": "users",
                        "required": true,
                        "type": "array"
                    }
                ],
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "summary": "To change the access of the dataset to everyone or only to logged in users",
                "tags": [
                    "dataset-controller-kg"
                ],
                "x-codeSamples": [
                    {
                        "lang": "Node + Request",
                        "source": "const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'http://qanswer-core1.univ-st-etienne.fr/api/dataset/share',\n  qs: {dataset: 'SOME_STRING_VALUE', users: 'SOME_ARRAY_VALUE'},\n  headers: {\n    accept: 'application/json',\n    'content-type': '*/*',\n    Authorization: 'REPLACE_KEY_VALUE'\n  }\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
                    },
                    {
                        "lang": "Shell + Curl",
                        "source": "curl --request POST \\\n  --url 'http://qanswer-core1.univ-st-etienne.fr/api/dataset/share?dataset=SOME_STRING_VALUE&users=SOME_ARRAY_VALUE' \\\n  --header 'Authorization: REPLACE_KEY_VALUE' \\\n  --header 'accept: application/json' \\\n  --header 'content-type: */*'"
                    },
                    {
                        "lang": "Shell + Httpie",
                        "source": "http POST 'http://qanswer-core1.univ-st-etienne.fr/api/dataset/share?dataset=SOME_STRING_VALUE&users=SOME_ARRAY_VALUE' \\\n  Authorization:REPLACE_KEY_VALUE \\\n  accept:application/json \\\n  content-type:'*/*'"
                    },
                    {
                        "lang": "Python + Python3",
                        "source": "import http.client\n\nconn = http.client.HTTPConnection(\"qanswer-core1.univ-st-etienne.fr\")\n\nheaders = {\n    'accept': \"application/json\",\n    'content-type': \"*/*\",\n    'Authorization': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"POST\", \"/api/dataset/share?dataset=SOME_STRING_VALUE&users=SOME_ARRAY_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
                    },
                    {
                        "lang": "Php + Curl",
                        "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"http://qanswer-core1.univ-st-etienne.fr/api/dataset/share?dataset=SOME_STRING_VALUE&users=SOME_ARRAY_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: REPLACE_KEY_VALUE\",\n    \"accept: application/json\",\n    \"content-type: */*\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
                    },
                    {
                        "lang": "php",
                        "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('http://qanswer-core1.univ-st-etienne.fr/api/dataset/share');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setQueryData([\n  'dataset' => 'SOME_STRING_VALUE',\n  'users' => 'SOME_ARRAY_VALUE'\n]);\n\n$request->setHeaders([\n  'accept' => 'application/json',\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
                    },
                    {
                        "lang": "Php + Http2",
                        "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('http://qanswer-core1.univ-st-etienne.fr/api/dataset/share');\n$request->setRequestMethod('POST');\n$request->setQuery(new http\\QueryString([\n  'dataset' => 'SOME_STRING_VALUE',\n  'users' => 'SOME_ARRAY_VALUE'\n]));\n\n$request->setHeaders([\n  'accept' => 'application/json',\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
                    }
                ]
            }
        },
        "/api/dataset/upload": {
            "post": {
                "consumes": [
                    "multipart/form-data"
                ],
                "deprecated": false,
                "description": "The RDF file needs to be syntactically correct! The logo needs to be an image. It is optional.",
                "operationId": "uploadUsingPOST",
                "parameters": [
                    {
                        "description": "dataset",
                        "in": "query",
                        "name": "dataset",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "file",
                        "in": "formData",
                        "name": "file",
                        "required": true,
                        "type": "file"
                    },
                    {
                        "description": "logo",
                        "in": "formData",
                        "name": "logo",
                        "required": false,
                        "type": "file"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "summary": "To upload a new RDF dataset",
                "tags": [
                    "dataset-controller-kg"
                ],
                "x-codeSamples": [
                    {
                        "lang": "Node + Request",
                        "source": "const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'http://qanswer-core1.univ-st-etienne.fr/api/dataset/upload',\n  qs: {dataset: 'SOME_STRING_VALUE'},\n  headers: {\n    accept: 'multipart/form-data',\n    'content-type': 'application/json',\n    Authorization: 'REPLACE_KEY_VALUE'\n  }\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
                    },
                    {
                        "lang": "Shell + Curl",
                        "source": "curl --request POST \\\n  --url 'http://qanswer-core1.univ-st-etienne.fr/api/dataset/upload?dataset=SOME_STRING_VALUE' \\\n  --header 'Authorization: REPLACE_KEY_VALUE' \\\n  --header 'accept: multipart/form-data' \\\n  --header 'content-type: application/json'"
                    },
                    {
                        "lang": "Shell + Httpie",
                        "source": "http POST 'http://qanswer-core1.univ-st-etienne.fr/api/dataset/upload?dataset=SOME_STRING_VALUE' \\\n  Authorization:REPLACE_KEY_VALUE \\\n  accept:multipart/form-data \\\n  content-type:application/json"
                    },
                    {
                        "lang": "Python + Python3",
                        "source": "import http.client\n\nconn = http.client.HTTPConnection(\"qanswer-core1.univ-st-etienne.fr\")\n\nheaders = {\n    'accept': \"multipart/form-data\",\n    'content-type': \"application/json\",\n    'Authorization': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"POST\", \"/api/dataset/upload?dataset=SOME_STRING_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
                    },
                    {
                        "lang": "Php + Curl",
                        "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"http://qanswer-core1.univ-st-etienne.fr/api/dataset/upload?dataset=SOME_STRING_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: REPLACE_KEY_VALUE\",\n    \"accept: multipart/form-data\",\n    \"content-type: application/json\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
                    },
                    {
                        "lang": "php",
                        "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('http://qanswer-core1.univ-st-etienne.fr/api/dataset/upload');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setQueryData([\n  'dataset' => 'SOME_STRING_VALUE'\n]);\n\n$request->setHeaders([\n  'accept' => 'multipart/form-data',\n  'content-type' => 'application/json',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
                    },
                    {
                        "lang": "Php + Http2",
                        "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('http://qanswer-core1.univ-st-etienne.fr/api/dataset/upload');\n$request->setRequestMethod('POST');\n$request->setQuery(new http\\QueryString([\n  'dataset' => 'SOME_STRING_VALUE'\n]));\n\n$request->setHeaders([\n  'accept' => 'multipart/form-data',\n  'content-type' => 'application/json',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
                    }
                ]
            }
        },
        "/api/dataset_new/dataset/logo": {
            "get": {
                "deprecated": false,
                "operationId": "getLogoUsingGET",
                "parameters": [
                    {
                        "description": "dataset",
                        "in": "query",
                        "name": "dataset",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "image/png"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "format": "byte",
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "summary": "Retrieves the logo of a specific dataset",
                "tags": [
                    "dataset-controller"
                ],
                "x-codeSamples": [
                    {
                        "lang": "Node + Request",
                        "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://qanswer-core1.univ-st-etienne.fr/api/dataset_new/dataset/logo',\n  qs: {dataset: 'SOME_STRING_VALUE'},\n  headers: {'content-type': 'image/png', Authorization: 'REPLACE_KEY_VALUE'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
                    },
                    {
                        "lang": "Shell + Curl",
                        "source": "curl --request GET \\\n  --url 'http://qanswer-core1.univ-st-etienne.fr/api/dataset_new/dataset/logo?dataset=SOME_STRING_VALUE' \\\n  --header 'Authorization: REPLACE_KEY_VALUE' \\\n  --header 'content-type: image/png'"
                    },
                    {
                        "lang": "Shell + Httpie",
                        "source": "http GET 'http://qanswer-core1.univ-st-etienne.fr/api/dataset_new/dataset/logo?dataset=SOME_STRING_VALUE' \\\n  Authorization:REPLACE_KEY_VALUE \\\n  content-type:image/png"
                    },
                    {
                        "lang": "Python + Python3",
                        "source": "import http.client\n\nconn = http.client.HTTPConnection(\"qanswer-core1.univ-st-etienne.fr\")\n\nheaders = {\n    'content-type': \"image/png\",\n    'Authorization': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"GET\", \"/api/dataset_new/dataset/logo?dataset=SOME_STRING_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
                    },
                    {
                        "lang": "Php + Curl",
                        "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"http://qanswer-core1.univ-st-etienne.fr/api/dataset_new/dataset/logo?dataset=SOME_STRING_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: REPLACE_KEY_VALUE\",\n    \"content-type: image/png\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
                    },
                    {
                        "lang": "php",
                        "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('http://qanswer-core1.univ-st-etienne.fr/api/dataset_new/dataset/logo');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setQueryData([\n  'dataset' => 'SOME_STRING_VALUE'\n]);\n\n$request->setHeaders([\n  'content-type' => 'image/png',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
                    },
                    {
                        "lang": "Php + Http2",
                        "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('http://qanswer-core1.univ-st-etienne.fr/api/dataset_new/dataset/logo');\n$request->setRequestMethod('GET');\n$request->setQuery(new http\\QueryString([\n  'dataset' => 'SOME_STRING_VALUE'\n]));\n\n$request->setHeaders([\n  'content-type' => 'image/png',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
                    }
                ]
            }
        },
        "/api/dataset_new/list_all": {
            "get": {
                "deprecated": false,
                "operationId": "getListAllDatasetsUsingGET",
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/DatasetDetail"
                            },
                            "type": "array"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "summary": "Lists all datasets uploaded by the user",
                "tags": [
                    "dataset-controller"
                ],
                "x-codeSamples": [
                    {
                        "lang": "Node + Request",
                        "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://qanswer-core1.univ-st-etienne.fr/api/dataset_new/list_all',\n  headers: {'content-type': '*/*', Authorization: 'REPLACE_KEY_VALUE'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
                    },
                    {
                        "lang": "Shell + Curl",
                        "source": "curl --request GET \\\n  --url http://qanswer-core1.univ-st-etienne.fr/api/dataset_new/list_all \\\n  --header 'Authorization: REPLACE_KEY_VALUE' \\\n  --header 'content-type: */*'"
                    },
                    {
                        "lang": "Shell + Httpie",
                        "source": "http GET http://qanswer-core1.univ-st-etienne.fr/api/dataset_new/list_all \\\n  Authorization:REPLACE_KEY_VALUE \\\n  content-type:'*/*'"
                    },
                    {
                        "lang": "Python + Python3",
                        "source": "import http.client\n\nconn = http.client.HTTPConnection(\"qanswer-core1.univ-st-etienne.fr\")\n\nheaders = {\n    'content-type': \"*/*\",\n    'Authorization': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"GET\", \"/api/dataset_new/list_all\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
                    },
                    {
                        "lang": "Php + Curl",
                        "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"http://qanswer-core1.univ-st-etienne.fr/api/dataset_new/list_all\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: REPLACE_KEY_VALUE\",\n    \"content-type: */*\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
                    },
                    {
                        "lang": "php",
                        "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('http://qanswer-core1.univ-st-etienne.fr/api/dataset_new/list_all');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setHeaders([\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
                    },
                    {
                        "lang": "Php + Http2",
                        "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('http://qanswer-core1.univ-st-etienne.fr/api/dataset_new/list_all');\n$request->setRequestMethod('GET');\n$request->setHeaders([\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
                    }
                ]
            }
        },
        "/api/dataset_new/remove": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "deprecated": false,
                "operationId": "removeUsingPOST",
                "parameters": [
                    {
                        "description": "dataset",
                        "in": "query",
                        "name": "dataset",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "summary": "To remove a specific dataset",
                "tags": [
                    "dataset-controller"
                ],
                "x-codeSamples": [
                    {
                        "lang": "Node + Request",
                        "source": "const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'http://qanswer-core1.univ-st-etienne.fr/api/dataset_new/remove',\n  qs: {dataset: 'SOME_STRING_VALUE'},\n  headers: {\n    accept: 'application/json',\n    'content-type': 'application/json',\n    Authorization: 'REPLACE_KEY_VALUE'\n  }\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
                    },
                    {
                        "lang": "Shell + Curl",
                        "source": "curl --request POST \\\n  --url 'http://qanswer-core1.univ-st-etienne.fr/api/dataset_new/remove?dataset=SOME_STRING_VALUE' \\\n  --header 'Authorization: REPLACE_KEY_VALUE' \\\n  --header 'accept: application/json' \\\n  --header 'content-type: application/json'"
                    },
                    {
                        "lang": "Shell + Httpie",
                        "source": "http POST 'http://qanswer-core1.univ-st-etienne.fr/api/dataset_new/remove?dataset=SOME_STRING_VALUE' \\\n  Authorization:REPLACE_KEY_VALUE \\\n  accept:application/json \\\n  content-type:application/json"
                    },
                    {
                        "lang": "Python + Python3",
                        "source": "import http.client\n\nconn = http.client.HTTPConnection(\"qanswer-core1.univ-st-etienne.fr\")\n\nheaders = {\n    'accept': \"application/json\",\n    'content-type': \"application/json\",\n    'Authorization': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"POST\", \"/api/dataset_new/remove?dataset=SOME_STRING_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
                    },
                    {
                        "lang": "Php + Curl",
                        "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"http://qanswer-core1.univ-st-etienne.fr/api/dataset_new/remove?dataset=SOME_STRING_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: REPLACE_KEY_VALUE\",\n    \"accept: application/json\",\n    \"content-type: application/json\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
                    },
                    {
                        "lang": "php",
                        "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('http://qanswer-core1.univ-st-etienne.fr/api/dataset_new/remove');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setQueryData([\n  'dataset' => 'SOME_STRING_VALUE'\n]);\n\n$request->setHeaders([\n  'accept' => 'application/json',\n  'content-type' => 'application/json',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
                    },
                    {
                        "lang": "Php + Http2",
                        "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('http://qanswer-core1.univ-st-etienne.fr/api/dataset_new/remove');\n$request->setRequestMethod('POST');\n$request->setQuery(new http\\QueryString([\n  'dataset' => 'SOME_STRING_VALUE'\n]));\n\n$request->setHeaders([\n  'accept' => 'application/json',\n  'content-type' => 'application/json',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
                    }
                ]
            }
        },
        "/api/download": {
            "get": {
                "deprecated": false,
                "operationId": "getSteamingFileUsingGET",
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/StreamingResponseBody"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "summary": "getSteamingFile",
                "tags": [
                    "download-controller"
                ],
                "x-codeSamples": [
                    {
                        "lang": "Node + Request",
                        "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://qanswer-core1.univ-st-etienne.fr/api/download',\n  headers: {'content-type': '*/*', Authorization: 'REPLACE_KEY_VALUE'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
                    },
                    {
                        "lang": "Shell + Curl",
                        "source": "curl --request GET \\\n  --url http://qanswer-core1.univ-st-etienne.fr/api/download \\\n  --header 'Authorization: REPLACE_KEY_VALUE' \\\n  --header 'content-type: */*'"
                    },
                    {
                        "lang": "Shell + Httpie",
                        "source": "http GET http://qanswer-core1.univ-st-etienne.fr/api/download \\\n  Authorization:REPLACE_KEY_VALUE \\\n  content-type:'*/*'"
                    },
                    {
                        "lang": "Python + Python3",
                        "source": "import http.client\n\nconn = http.client.HTTPConnection(\"qanswer-core1.univ-st-etienne.fr\")\n\nheaders = {\n    'content-type': \"*/*\",\n    'Authorization': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"GET\", \"/api/download\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
                    },
                    {
                        "lang": "Php + Curl",
                        "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"http://qanswer-core1.univ-st-etienne.fr/api/download\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: REPLACE_KEY_VALUE\",\n    \"content-type: */*\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
                    },
                    {
                        "lang": "php",
                        "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('http://qanswer-core1.univ-st-etienne.fr/api/download');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setHeaders([\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
                    },
                    {
                        "lang": "Php + Http2",
                        "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('http://qanswer-core1.univ-st-etienne.fr/api/download');\n$request->setRequestMethod('GET');\n$request->setHeaders([\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
                    }
                ]
            }
        },
        "/api/endpoint/{user}/{dataset}/has_index": {
            "get": {
                "deprecated": false,
                "operationId": "hasIndexUsingGET",
                "parameters": [
                    {
                        "description": "dataset",
                        "in": "path",
                        "name": "dataset",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "user",
                        "in": "path",
                        "name": "user",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/HasLuceneIndexResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "summary": "API to check if the lucene index is generated",
                "tags": [
                    "sparql-endpoint-controller"
                ],
                "x-codeSamples": [
                    {
                        "lang": "Node + Request",
                        "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://qanswer-core1.univ-st-etienne.fr/api/endpoint/%7Buser%7D/%7Bdataset%7D/has_index',\n  headers: {'content-type': '*/*', Authorization: 'REPLACE_KEY_VALUE'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
                    },
                    {
                        "lang": "Shell + Curl",
                        "source": "curl --request GET \\\n  --url http://qanswer-core1.univ-st-etienne.fr/api/endpoint/%7Buser%7D/%7Bdataset%7D/has_index \\\n  --header 'Authorization: REPLACE_KEY_VALUE' \\\n  --header 'content-type: */*'"
                    },
                    {
                        "lang": "Shell + Httpie",
                        "source": "http GET http://qanswer-core1.univ-st-etienne.fr/api/endpoint/%7Buser%7D/%7Bdataset%7D/has_index \\\n  Authorization:REPLACE_KEY_VALUE \\\n  content-type:'*/*'"
                    },
                    {
                        "lang": "Python + Python3",
                        "source": "import http.client\n\nconn = http.client.HTTPConnection(\"qanswer-core1.univ-st-etienne.fr\")\n\nheaders = {\n    'content-type': \"*/*\",\n    'Authorization': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"GET\", \"/api/endpoint/%7Buser%7D/%7Bdataset%7D/has_index\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
                    },
                    {
                        "lang": "Php + Curl",
                        "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"http://qanswer-core1.univ-st-etienne.fr/api/endpoint/%7Buser%7D/%7Bdataset%7D/has_index\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: REPLACE_KEY_VALUE\",\n    \"content-type: */*\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
                    },
                    {
                        "lang": "php",
                        "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('http://qanswer-core1.univ-st-etienne.fr/api/endpoint/%7Buser%7D/%7Bdataset%7D/has_index');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setHeaders([\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
                    },
                    {
                        "lang": "Php + Http2",
                        "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('http://qanswer-core1.univ-st-etienne.fr/api/endpoint/%7Buser%7D/%7Bdataset%7D/has_index');\n$request->setRequestMethod('GET');\n$request->setHeaders([\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
                    }
                ]
            }
        },
        "/api/endpoint/{user}/{dataset}/is_merging": {
            "get": {
                "deprecated": false,
                "operationId": "isMergingUsingGET",
                "parameters": [
                    {
                        "description": "dataset",
                        "in": "path",
                        "name": "dataset",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "user",
                        "in": "path",
                        "name": "user",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/IsMergingResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "summary": "API to check if the store is in a merge state or not.",
                "tags": [
                    "sparql-endpoint-controller"
                ],
                "x-codeSamples": [
                    {
                        "lang": "Node + Request",
                        "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://qanswer-core1.univ-st-etienne.fr/api/endpoint/%7Buser%7D/%7Bdataset%7D/is_merging',\n  headers: {'content-type': '*/*', Authorization: 'REPLACE_KEY_VALUE'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
                    },
                    {
                        "lang": "Shell + Curl",
                        "source": "curl --request GET \\\n  --url http://qanswer-core1.univ-st-etienne.fr/api/endpoint/%7Buser%7D/%7Bdataset%7D/is_merging \\\n  --header 'Authorization: REPLACE_KEY_VALUE' \\\n  --header 'content-type: */*'"
                    },
                    {
                        "lang": "Shell + Httpie",
                        "source": "http GET http://qanswer-core1.univ-st-etienne.fr/api/endpoint/%7Buser%7D/%7Bdataset%7D/is_merging \\\n  Authorization:REPLACE_KEY_VALUE \\\n  content-type:'*/*'"
                    },
                    {
                        "lang": "Python + Python3",
                        "source": "import http.client\n\nconn = http.client.HTTPConnection(\"qanswer-core1.univ-st-etienne.fr\")\n\nheaders = {\n    'content-type': \"*/*\",\n    'Authorization': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"GET\", \"/api/endpoint/%7Buser%7D/%7Bdataset%7D/is_merging\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
                    },
                    {
                        "lang": "Php + Curl",
                        "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"http://qanswer-core1.univ-st-etienne.fr/api/endpoint/%7Buser%7D/%7Bdataset%7D/is_merging\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: REPLACE_KEY_VALUE\",\n    \"content-type: */*\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
                    },
                    {
                        "lang": "php",
                        "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('http://qanswer-core1.univ-st-etienne.fr/api/endpoint/%7Buser%7D/%7Bdataset%7D/is_merging');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setHeaders([\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
                    },
                    {
                        "lang": "Php + Http2",
                        "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('http://qanswer-core1.univ-st-etienne.fr/api/endpoint/%7Buser%7D/%7Bdataset%7D/is_merging');\n$request->setRequestMethod('GET');\n$request->setHeaders([\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
                    }
                ]
            }
        },
        "/api/endpoint/{user}/{dataset}/merge": {
            "get": {
                "deprecated": false,
                "operationId": "mergeStoreUsingGET",
                "parameters": [
                    {
                        "description": "dataset",
                        "in": "path",
                        "name": "dataset",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "user",
                        "in": "path",
                        "name": "user",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/MergeRequestResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "summary": "API to trigger a merge. All triples in the delta are merged into the main store",
                "tags": [
                    "sparql-endpoint-controller"
                ],
                "x-codeSamples": [
                    {
                        "lang": "Node + Request",
                        "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://qanswer-core1.univ-st-etienne.fr/api/endpoint/%7Buser%7D/%7Bdataset%7D/merge',\n  headers: {'content-type': '*/*', Authorization: 'REPLACE_KEY_VALUE'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
                    },
                    {
                        "lang": "Shell + Curl",
                        "source": "curl --request GET \\\n  --url http://qanswer-core1.univ-st-etienne.fr/api/endpoint/%7Buser%7D/%7Bdataset%7D/merge \\\n  --header 'Authorization: REPLACE_KEY_VALUE' \\\n  --header 'content-type: */*'"
                    },
                    {
                        "lang": "Shell + Httpie",
                        "source": "http GET http://qanswer-core1.univ-st-etienne.fr/api/endpoint/%7Buser%7D/%7Bdataset%7D/merge \\\n  Authorization:REPLACE_KEY_VALUE \\\n  content-type:'*/*'"
                    },
                    {
                        "lang": "Python + Python3",
                        "source": "import http.client\n\nconn = http.client.HTTPConnection(\"qanswer-core1.univ-st-etienne.fr\")\n\nheaders = {\n    'content-type': \"*/*\",\n    'Authorization': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"GET\", \"/api/endpoint/%7Buser%7D/%7Bdataset%7D/merge\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
                    },
                    {
                        "lang": "Php + Curl",
                        "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"http://qanswer-core1.univ-st-etienne.fr/api/endpoint/%7Buser%7D/%7Bdataset%7D/merge\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: REPLACE_KEY_VALUE\",\n    \"content-type: */*\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
                    },
                    {
                        "lang": "php",
                        "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('http://qanswer-core1.univ-st-etienne.fr/api/endpoint/%7Buser%7D/%7Bdataset%7D/merge');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setHeaders([\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
                    },
                    {
                        "lang": "Php + Http2",
                        "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('http://qanswer-core1.univ-st-etienne.fr/api/endpoint/%7Buser%7D/%7Bdataset%7D/merge');\n$request->setRequestMethod('GET');\n$request->setHeaders([\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
                    }
                ]
            }
        },
        "/api/endpoint/{user}/{dataset}/prefixes": {
            "get": {
                "deprecated": false,
                "operationId": "prefixesUsingGET",
                "parameters": [
                    {
                        "description": "dataset",
                        "in": "path",
                        "name": "dataset",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "user",
                        "in": "path",
                        "name": "user",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "additionalProperties": {
                                "type": "string"
                            },
                            "type": "object"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "summary": "API to get the default prefixes used over a dataset",
                "tags": [
                    "sparql-endpoint-controller"
                ],
                "x-codeSamples": [
                    {
                        "lang": "Node + Request",
                        "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://qanswer-core1.univ-st-etienne.fr/api/endpoint/%7Buser%7D/%7Bdataset%7D/prefixes',\n  headers: {'content-type': '*/*', Authorization: 'REPLACE_KEY_VALUE'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
                    },
                    {
                        "lang": "Shell + Curl",
                        "source": "curl --request GET \\\n  --url http://qanswer-core1.univ-st-etienne.fr/api/endpoint/%7Buser%7D/%7Bdataset%7D/prefixes \\\n  --header 'Authorization: REPLACE_KEY_VALUE' \\\n  --header 'content-type: */*'"
                    },
                    {
                        "lang": "Shell + Httpie",
                        "source": "http GET http://qanswer-core1.univ-st-etienne.fr/api/endpoint/%7Buser%7D/%7Bdataset%7D/prefixes \\\n  Authorization:REPLACE_KEY_VALUE \\\n  content-type:'*/*'"
                    },
                    {
                        "lang": "Python + Python3",
                        "source": "import http.client\n\nconn = http.client.HTTPConnection(\"qanswer-core1.univ-st-etienne.fr\")\n\nheaders = {\n    'content-type': \"*/*\",\n    'Authorization': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"GET\", \"/api/endpoint/%7Buser%7D/%7Bdataset%7D/prefixes\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
                    },
                    {
                        "lang": "Php + Curl",
                        "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"http://qanswer-core1.univ-st-etienne.fr/api/endpoint/%7Buser%7D/%7Bdataset%7D/prefixes\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: REPLACE_KEY_VALUE\",\n    \"content-type: */*\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
                    },
                    {
                        "lang": "php",
                        "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('http://qanswer-core1.univ-st-etienne.fr/api/endpoint/%7Buser%7D/%7Bdataset%7D/prefixes');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setHeaders([\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
                    },
                    {
                        "lang": "Php + Http2",
                        "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('http://qanswer-core1.univ-st-etienne.fr/api/endpoint/%7Buser%7D/%7Bdataset%7D/prefixes');\n$request->setRequestMethod('GET');\n$request->setHeaders([\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
                    }
                ]
            }
        },
        "/api/endpoint/{user}/{dataset}/reindex": {
            "get": {
                "deprecated": false,
                "operationId": "reindexUsingGET",
                "parameters": [
                    {
                        "description": "dataset",
                        "in": "path",
                        "name": "dataset",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "user",
                        "in": "path",
                        "name": "user",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/LuceneIndexRequestResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "summary": "API to reindex the lucene index",
                "tags": [
                    "sparql-endpoint-controller"
                ],
                "x-codeSamples": [
                    {
                        "lang": "Node + Request",
                        "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://qanswer-core1.univ-st-etienne.fr/api/endpoint/%7Buser%7D/%7Bdataset%7D/reindex',\n  headers: {'content-type': '*/*', Authorization: 'REPLACE_KEY_VALUE'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
                    },
                    {
                        "lang": "Shell + Curl",
                        "source": "curl --request GET \\\n  --url http://qanswer-core1.univ-st-etienne.fr/api/endpoint/%7Buser%7D/%7Bdataset%7D/reindex \\\n  --header 'Authorization: REPLACE_KEY_VALUE' \\\n  --header 'content-type: */*'"
                    },
                    {
                        "lang": "Shell + Httpie",
                        "source": "http GET http://qanswer-core1.univ-st-etienne.fr/api/endpoint/%7Buser%7D/%7Bdataset%7D/reindex \\\n  Authorization:REPLACE_KEY_VALUE \\\n  content-type:'*/*'"
                    },
                    {
                        "lang": "Python + Python3",
                        "source": "import http.client\n\nconn = http.client.HTTPConnection(\"qanswer-core1.univ-st-etienne.fr\")\n\nheaders = {\n    'content-type': \"*/*\",\n    'Authorization': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"GET\", \"/api/endpoint/%7Buser%7D/%7Bdataset%7D/reindex\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
                    },
                    {
                        "lang": "Php + Curl",
                        "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"http://qanswer-core1.univ-st-etienne.fr/api/endpoint/%7Buser%7D/%7Bdataset%7D/reindex\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: REPLACE_KEY_VALUE\",\n    \"content-type: */*\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
                    },
                    {
                        "lang": "php",
                        "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('http://qanswer-core1.univ-st-etienne.fr/api/endpoint/%7Buser%7D/%7Bdataset%7D/reindex');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setHeaders([\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
                    },
                    {
                        "lang": "Php + Http2",
                        "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('http://qanswer-core1.univ-st-etienne.fr/api/endpoint/%7Buser%7D/%7Bdataset%7D/reindex');\n$request->setRequestMethod('GET');\n$request->setHeaders([\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
                    }
                ]
            }
        },
        "/api/endpoint/{user}/{dataset}/set_prefixes": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "deprecated": false,
                "operationId": "setPrefixesUsingPOST",
                "parameters": [
                    {
                        "description": "dataset",
                        "in": "path",
                        "name": "dataset",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "prefixes",
                        "in": "body",
                        "name": "prefixes",
                        "required": true,
                        "schema": {
                            "additionalProperties": {
                                "type": "string"
                            },
                            "type": "object"
                        }
                    },
                    {
                        "description": "user",
                        "in": "path",
                        "name": "user",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "additionalProperties": {
                                "type": "string"
                            },
                            "type": "object"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "summary": "API to set the default prefixes used over a dataset",
                "tags": [
                    "sparql-endpoint-controller"
                ],
                "x-codeSamples": [
                    {
                        "lang": "Node + Request",
                        "source": "const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'http://qanswer-core1.univ-st-etienne.fr/api/endpoint/%7Buser%7D/%7Bdataset%7D/set_prefixes',\n  headers: {\n    accept: 'application/json',\n    'content-type': '*/*',\n    Authorization: 'REPLACE_KEY_VALUE'\n  },\n  body: {property1: 'string', property2: 'string'},\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
                    },
                    {
                        "lang": "Shell + Curl",
                        "source": "curl --request POST \\\n  --url http://qanswer-core1.univ-st-etienne.fr/api/endpoint/%7Buser%7D/%7Bdataset%7D/set_prefixes \\\n  --header 'Authorization: REPLACE_KEY_VALUE' \\\n  --header 'accept: application/json' \\\n  --header 'content-type: */*' \\\n  --data '{\"property1\":\"string\",\"property2\":\"string\"}'"
                    },
                    {
                        "lang": "Shell + Httpie",
                        "source": "echo '{\"property1\":\"string\",\"property2\":\"string\"}' |  \\\n  http POST http://qanswer-core1.univ-st-etienne.fr/api/endpoint/%7Buser%7D/%7Bdataset%7D/set_prefixes \\\n  Authorization:REPLACE_KEY_VALUE \\\n  accept:application/json \\\n  content-type:'*/*'"
                    },
                    {
                        "lang": "Python + Python3",
                        "source": "import http.client\n\nconn = http.client.HTTPConnection(\"qanswer-core1.univ-st-etienne.fr\")\n\npayload = \"{\\\"property1\\\":\\\"string\\\",\\\"property2\\\":\\\"string\\\"}\"\n\nheaders = {\n    'accept': \"application/json\",\n    'content-type': \"*/*\",\n    'Authorization': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"POST\", \"/api/endpoint/%7Buser%7D/%7Bdataset%7D/set_prefixes\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
                    },
                    {
                        "lang": "Php + Curl",
                        "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"http://qanswer-core1.univ-st-etienne.fr/api/endpoint/%7Buser%7D/%7Bdataset%7D/set_prefixes\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_POSTFIELDS => \"{\\\"property1\\\":\\\"string\\\",\\\"property2\\\":\\\"string\\\"}\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: REPLACE_KEY_VALUE\",\n    \"accept: application/json\",\n    \"content-type: */*\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
                    },
                    {
                        "lang": "php",
                        "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('http://qanswer-core1.univ-st-etienne.fr/api/endpoint/%7Buser%7D/%7Bdataset%7D/set_prefixes');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setHeaders([\n  'accept' => 'application/json',\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$request->setBody('{\"property1\":\"string\",\"property2\":\"string\"}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
                    },
                    {
                        "lang": "Php + Http2",
                        "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$body = new http\\Message\\Body;\n$body->append('{\"property1\":\"string\",\"property2\":\"string\"}');\n\n$request->setRequestUrl('http://qanswer-core1.univ-st-etienne.fr/api/endpoint/%7Buser%7D/%7Bdataset%7D/set_prefixes');\n$request->setRequestMethod('POST');\n$request->setBody($body);\n\n$request->setHeaders([\n  'accept' => 'application/json',\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
                    }
                ]
            }
        },
        "/api/endpoint/{user}/{dataset}/sparql": {
            "get": {
                "deprecated": false,
                "operationId": "sparqlEndpointUsingGET",
                "parameters": [
                    {
                        "default": "text/plain",
                        "description": "Content-Type",
                        "in": "header",
                        "name": "Content-Type",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "collectionFormat": "multi",
                        "default": "application/sparql-results+json",
                        "description": "accept",
                        "in": "header",
                        "items": {
                            "type": "string"
                        },
                        "name": "accept",
                        "required": true,
                        "type": "array"
                    },
                    {
                        "description": "body",
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "dataset",
                        "in": "path",
                        "name": "dataset",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "query",
                        "in": "query",
                        "name": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "default": 60,
                        "description": "timeout",
                        "format": "int32",
                        "in": "header",
                        "name": "timeout",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "update",
                        "in": "query",
                        "name": "update",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "user",
                        "in": "path",
                        "name": "user",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "summary": "SPARQL endpoint over a dataset",
                "tags": [
                    "sparql-endpoint-controller"
                ],
                "x-codeSamples": [
                    {
                        "lang": "Node + Request",
                        "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://qanswer-core1.univ-st-etienne.fr/api/endpoint/%7Buser%7D/%7Bdataset%7D/sparql',\n  qs: {query: 'SOME_STRING_VALUE', update: 'SOME_STRING_VALUE'},\n  headers: {\n    'content-type': '*/*',\n    'Content-Type': 'SOME_STRING_VALUE',\n    accept: 'SOME_ARRAY_VALUE',\n    timeout: 'SOME_INTEGER_VALUE',\n    Authorization: 'REPLACE_KEY_VALUE'\n  },\n  body: 'string',\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
                    },
                    {
                        "lang": "Shell + Curl",
                        "source": "curl --request GET \\\n  --url 'http://qanswer-core1.univ-st-etienne.fr/api/endpoint/%7Buser%7D/%7Bdataset%7D/sparql?query=SOME_STRING_VALUE&update=SOME_STRING_VALUE' \\\n  --header 'Authorization: REPLACE_KEY_VALUE' \\\n  --header 'Content-Type: SOME_STRING_VALUE' \\\n  --header 'accept: SOME_ARRAY_VALUE' \\\n  --header 'content-type: */*' \\\n  --header 'timeout: SOME_INTEGER_VALUE' \\\n  --data '\"string\"'"
                    },
                    {
                        "lang": "Shell + Httpie",
                        "source": "echo '\"string\"' |  \\\n  http GET 'http://qanswer-core1.univ-st-etienne.fr/api/endpoint/%7Buser%7D/%7Bdataset%7D/sparql?query=SOME_STRING_VALUE&update=SOME_STRING_VALUE' \\\n  Authorization:REPLACE_KEY_VALUE \\\n  Content-Type:SOME_STRING_VALUE \\\n  accept:SOME_ARRAY_VALUE \\\n  content-type:'*/*' \\\n  timeout:SOME_INTEGER_VALUE"
                    },
                    {
                        "lang": "Python + Python3",
                        "source": "import http.client\n\nconn = http.client.HTTPConnection(\"qanswer-core1.univ-st-etienne.fr\")\n\npayload = \"\\\"string\\\"\"\n\nheaders = {\n    'content-type': \"*/*\",\n    'Content-Type': \"SOME_STRING_VALUE\",\n    'accept': \"SOME_ARRAY_VALUE\",\n    'timeout': \"SOME_INTEGER_VALUE\",\n    'Authorization': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"GET\", \"/api/endpoint/%7Buser%7D/%7Bdataset%7D/sparql?query=SOME_STRING_VALUE&update=SOME_STRING_VALUE\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
                    },
                    {
                        "lang": "Php + Curl",
                        "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"http://qanswer-core1.univ-st-etienne.fr/api/endpoint/%7Buser%7D/%7Bdataset%7D/sparql?query=SOME_STRING_VALUE&update=SOME_STRING_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_POSTFIELDS => \"\\\"string\\\"\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: REPLACE_KEY_VALUE\",\n    \"Content-Type: SOME_STRING_VALUE\",\n    \"accept: SOME_ARRAY_VALUE\",\n    \"content-type: */*\",\n    \"timeout: SOME_INTEGER_VALUE\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
                    },
                    {
                        "lang": "php",
                        "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('http://qanswer-core1.univ-st-etienne.fr/api/endpoint/%7Buser%7D/%7Bdataset%7D/sparql');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setQueryData([\n  'query' => 'SOME_STRING_VALUE',\n  'update' => 'SOME_STRING_VALUE'\n]);\n\n$request->setHeaders([\n  'content-type' => '*/*',\n  'Content-Type' => 'SOME_STRING_VALUE',\n  'accept' => 'SOME_ARRAY_VALUE',\n  'timeout' => 'SOME_INTEGER_VALUE',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$request->setBody('\"string\"');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
                    },
                    {
                        "lang": "Php + Http2",
                        "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$body = new http\\Message\\Body;\n$body->append('\"string\"');\n\n$request->setRequestUrl('http://qanswer-core1.univ-st-etienne.fr/api/endpoint/%7Buser%7D/%7Bdataset%7D/sparql');\n$request->setRequestMethod('GET');\n$request->setBody($body);\n\n$request->setQuery(new http\\QueryString([\n  'query' => 'SOME_STRING_VALUE',\n  'update' => 'SOME_STRING_VALUE'\n]));\n\n$request->setHeaders([\n  'content-type' => '*/*',\n  'Content-Type' => 'SOME_STRING_VALUE',\n  'accept' => 'SOME_ARRAY_VALUE',\n  'timeout' => 'SOME_INTEGER_VALUE',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
                    }
                ]
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "deprecated": false,
                "operationId": "sparqlEndpointUsingPOST",
                "parameters": [
                    {
                        "default": "text/plain",
                        "description": "Content-Type",
                        "in": "header",
                        "name": "Content-Type",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "collectionFormat": "multi",
                        "default": "application/sparql-results+json",
                        "description": "accept",
                        "in": "header",
                        "items": {
                            "type": "string"
                        },
                        "name": "accept",
                        "required": true,
                        "type": "array"
                    },
                    {
                        "description": "body",
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "dataset",
                        "in": "path",
                        "name": "dataset",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "query",
                        "in": "query",
                        "name": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "default": 60,
                        "description": "timeout",
                        "format": "int32",
                        "in": "header",
                        "name": "timeout",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "update",
                        "in": "query",
                        "name": "update",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "user",
                        "in": "path",
                        "name": "user",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "summary": "SPARQL endpoint over a dataset",
                "tags": [
                    "sparql-endpoint-controller"
                ],
                "x-codeSamples": [
                    {
                        "lang": "Node + Request",
                        "source": "const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'http://qanswer-core1.univ-st-etienne.fr/api/endpoint/%7Buser%7D/%7Bdataset%7D/sparql',\n  qs: {query: 'SOME_STRING_VALUE', update: 'SOME_STRING_VALUE'},\n  headers: {\n    accept: 'SOME_ARRAY_VALUE',\n    'content-type': '*/*',\n    'Content-Type': 'SOME_STRING_VALUE',\n    timeout: 'SOME_INTEGER_VALUE',\n    Authorization: 'REPLACE_KEY_VALUE'\n  },\n  body: 'string',\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
                    },
                    {
                        "lang": "Shell + Curl",
                        "source": "curl --request POST \\\n  --url 'http://qanswer-core1.univ-st-etienne.fr/api/endpoint/%7Buser%7D/%7Bdataset%7D/sparql?query=SOME_STRING_VALUE&update=SOME_STRING_VALUE' \\\n  --header 'Authorization: REPLACE_KEY_VALUE' \\\n  --header 'Content-Type: SOME_STRING_VALUE' \\\n  --header 'accept: SOME_ARRAY_VALUE' \\\n  --header 'content-type: */*' \\\n  --header 'timeout: SOME_INTEGER_VALUE' \\\n  --data '\"string\"'"
                    },
                    {
                        "lang": "Shell + Httpie",
                        "source": "echo '\"string\"' |  \\\n  http POST 'http://qanswer-core1.univ-st-etienne.fr/api/endpoint/%7Buser%7D/%7Bdataset%7D/sparql?query=SOME_STRING_VALUE&update=SOME_STRING_VALUE' \\\n  Authorization:REPLACE_KEY_VALUE \\\n  Content-Type:SOME_STRING_VALUE \\\n  accept:SOME_ARRAY_VALUE \\\n  content-type:'*/*' \\\n  timeout:SOME_INTEGER_VALUE"
                    },
                    {
                        "lang": "Python + Python3",
                        "source": "import http.client\n\nconn = http.client.HTTPConnection(\"qanswer-core1.univ-st-etienne.fr\")\n\npayload = \"\\\"string\\\"\"\n\nheaders = {\n    'accept': \"SOME_ARRAY_VALUE\",\n    'content-type': \"*/*\",\n    'Content-Type': \"SOME_STRING_VALUE\",\n    'timeout': \"SOME_INTEGER_VALUE\",\n    'Authorization': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"POST\", \"/api/endpoint/%7Buser%7D/%7Bdataset%7D/sparql?query=SOME_STRING_VALUE&update=SOME_STRING_VALUE\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
                    },
                    {
                        "lang": "Php + Curl",
                        "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"http://qanswer-core1.univ-st-etienne.fr/api/endpoint/%7Buser%7D/%7Bdataset%7D/sparql?query=SOME_STRING_VALUE&update=SOME_STRING_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_POSTFIELDS => \"\\\"string\\\"\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: REPLACE_KEY_VALUE\",\n    \"Content-Type: SOME_STRING_VALUE\",\n    \"accept: SOME_ARRAY_VALUE\",\n    \"content-type: */*\",\n    \"timeout: SOME_INTEGER_VALUE\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
                    },
                    {
                        "lang": "php",
                        "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('http://qanswer-core1.univ-st-etienne.fr/api/endpoint/%7Buser%7D/%7Bdataset%7D/sparql');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setQueryData([\n  'query' => 'SOME_STRING_VALUE',\n  'update' => 'SOME_STRING_VALUE'\n]);\n\n$request->setHeaders([\n  'accept' => 'SOME_ARRAY_VALUE',\n  'content-type' => '*/*',\n  'Content-Type' => 'SOME_STRING_VALUE',\n  'timeout' => 'SOME_INTEGER_VALUE',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$request->setBody('\"string\"');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
                    },
                    {
                        "lang": "Php + Http2",
                        "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$body = new http\\Message\\Body;\n$body->append('\"string\"');\n\n$request->setRequestUrl('http://qanswer-core1.univ-st-etienne.fr/api/endpoint/%7Buser%7D/%7Bdataset%7D/sparql');\n$request->setRequestMethod('POST');\n$request->setBody($body);\n\n$request->setQuery(new http\\QueryString([\n  'query' => 'SOME_STRING_VALUE',\n  'update' => 'SOME_STRING_VALUE'\n]));\n\n$request->setHeaders([\n  'accept' => 'SOME_ARRAY_VALUE',\n  'content-type' => '*/*',\n  'Content-Type' => 'SOME_STRING_VALUE',\n  'timeout' => 'SOME_INTEGER_VALUE',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
                    }
                ]
            }
        },
        "/api/feedback/admin/dump": {
            "get": {
                "deprecated": false,
                "operationId": "dumpAdminUsingGET",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "summary": "Download all question-answer pairs",
                "tags": [
                    "feedback-controller"
                ],
                "x-codeSamples": [
                    {
                        "lang": "Node + Request",
                        "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://qanswer-core1.univ-st-etienne.fr/api/feedback/admin/dump',\n  headers: {'content-type': 'application/json', Authorization: 'REPLACE_KEY_VALUE'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
                    },
                    {
                        "lang": "Shell + Curl",
                        "source": "curl --request GET \\\n  --url http://qanswer-core1.univ-st-etienne.fr/api/feedback/admin/dump \\\n  --header 'Authorization: REPLACE_KEY_VALUE' \\\n  --header 'content-type: application/json'"
                    },
                    {
                        "lang": "Shell + Httpie",
                        "source": "http GET http://qanswer-core1.univ-st-etienne.fr/api/feedback/admin/dump \\\n  Authorization:REPLACE_KEY_VALUE \\\n  content-type:application/json"
                    },
                    {
                        "lang": "Python + Python3",
                        "source": "import http.client\n\nconn = http.client.HTTPConnection(\"qanswer-core1.univ-st-etienne.fr\")\n\nheaders = {\n    'content-type': \"application/json\",\n    'Authorization': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"GET\", \"/api/feedback/admin/dump\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
                    },
                    {
                        "lang": "Php + Curl",
                        "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"http://qanswer-core1.univ-st-etienne.fr/api/feedback/admin/dump\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: REPLACE_KEY_VALUE\",\n    \"content-type: application/json\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
                    },
                    {
                        "lang": "php",
                        "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('http://qanswer-core1.univ-st-etienne.fr/api/feedback/admin/dump');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setHeaders([\n  'content-type' => 'application/json',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
                    },
                    {
                        "lang": "Php + Http2",
                        "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('http://qanswer-core1.univ-st-etienne.fr/api/feedback/admin/dump');\n$request->setRequestMethod('GET');\n$request->setHeaders([\n  'content-type' => 'application/json',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
                    }
                ]
            }
        },
        "/api/feedback/admin/removeall": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "deprecated": false,
                "operationId": "removeAllAdminUsingPOST",
                "parameters": [
                    {
                        "collectionFormat": "multi",
                        "description": "kbs",
                        "in": "query",
                        "items": {
                            "type": "string"
                        },
                        "name": "kbs",
                        "required": false,
                        "type": "array"
                    },
                    {
                        "description": "username",
                        "in": "query",
                        "name": "username",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "summary": "Remove all the feedback given",
                "tags": [
                    "feedback-controller"
                ],
                "x-codeSamples": [
                    {
                        "lang": "Node + Request",
                        "source": "const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'http://qanswer-core1.univ-st-etienne.fr/api/feedback/admin/removeall',\n  qs: {kbs: 'SOME_ARRAY_VALUE', username: 'SOME_STRING_VALUE'},\n  headers: {\n    accept: 'application/json',\n    'content-type': 'application/json',\n    Authorization: 'REPLACE_KEY_VALUE'\n  }\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
                    },
                    {
                        "lang": "Shell + Curl",
                        "source": "curl --request POST \\\n  --url 'http://qanswer-core1.univ-st-etienne.fr/api/feedback/admin/removeall?kbs=SOME_ARRAY_VALUE&username=SOME_STRING_VALUE' \\\n  --header 'Authorization: REPLACE_KEY_VALUE' \\\n  --header 'accept: application/json' \\\n  --header 'content-type: application/json'"
                    },
                    {
                        "lang": "Shell + Httpie",
                        "source": "http POST 'http://qanswer-core1.univ-st-etienne.fr/api/feedback/admin/removeall?kbs=SOME_ARRAY_VALUE&username=SOME_STRING_VALUE' \\\n  Authorization:REPLACE_KEY_VALUE \\\n  accept:application/json \\\n  content-type:application/json"
                    },
                    {
                        "lang": "Python + Python3",
                        "source": "import http.client\n\nconn = http.client.HTTPConnection(\"qanswer-core1.univ-st-etienne.fr\")\n\nheaders = {\n    'accept': \"application/json\",\n    'content-type': \"application/json\",\n    'Authorization': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"POST\", \"/api/feedback/admin/removeall?kbs=SOME_ARRAY_VALUE&username=SOME_STRING_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
                    },
                    {
                        "lang": "Php + Curl",
                        "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"http://qanswer-core1.univ-st-etienne.fr/api/feedback/admin/removeall?kbs=SOME_ARRAY_VALUE&username=SOME_STRING_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: REPLACE_KEY_VALUE\",\n    \"accept: application/json\",\n    \"content-type: application/json\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
                    },
                    {
                        "lang": "php",
                        "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('http://qanswer-core1.univ-st-etienne.fr/api/feedback/admin/removeall');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setQueryData([\n  'kbs' => 'SOME_ARRAY_VALUE',\n  'username' => 'SOME_STRING_VALUE'\n]);\n\n$request->setHeaders([\n  'accept' => 'application/json',\n  'content-type' => 'application/json',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
                    },
                    {
                        "lang": "Php + Http2",
                        "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('http://qanswer-core1.univ-st-etienne.fr/api/feedback/admin/removeall');\n$request->setRequestMethod('POST');\n$request->setQuery(new http\\QueryString([\n  'kbs' => 'SOME_ARRAY_VALUE',\n  'username' => 'SOME_STRING_VALUE'\n]));\n\n$request->setHeaders([\n  'accept' => 'application/json',\n  'content-type' => 'application/json',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
                    }
                ]
            }
        },
        "/api/feedback/admin/trainAll": {
            "get": {
                "deprecated": false,
                "operationId": "adminTrainUsingGET",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "summary": "Retrain all datasets models based on the uploaded question-answer pairs",
                "tags": [
                    "feedback-controller"
                ],
                "x-codeSamples": [
                    {
                        "lang": "Node + Request",
                        "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://qanswer-core1.univ-st-etienne.fr/api/feedback/admin/trainAll',\n  headers: {'content-type': 'application/json', Authorization: 'REPLACE_KEY_VALUE'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
                    },
                    {
                        "lang": "Shell + Curl",
                        "source": "curl --request GET \\\n  --url http://qanswer-core1.univ-st-etienne.fr/api/feedback/admin/trainAll \\\n  --header 'Authorization: REPLACE_KEY_VALUE' \\\n  --header 'content-type: application/json'"
                    },
                    {
                        "lang": "Shell + Httpie",
                        "source": "http GET http://qanswer-core1.univ-st-etienne.fr/api/feedback/admin/trainAll \\\n  Authorization:REPLACE_KEY_VALUE \\\n  content-type:application/json"
                    },
                    {
                        "lang": "Python + Python3",
                        "source": "import http.client\n\nconn = http.client.HTTPConnection(\"qanswer-core1.univ-st-etienne.fr\")\n\nheaders = {\n    'content-type': \"application/json\",\n    'Authorization': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"GET\", \"/api/feedback/admin/trainAll\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
                    },
                    {
                        "lang": "Php + Curl",
                        "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"http://qanswer-core1.univ-st-etienne.fr/api/feedback/admin/trainAll\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: REPLACE_KEY_VALUE\",\n    \"content-type: application/json\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
                    },
                    {
                        "lang": "php",
                        "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('http://qanswer-core1.univ-st-etienne.fr/api/feedback/admin/trainAll');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setHeaders([\n  'content-type' => 'application/json',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
                    },
                    {
                        "lang": "Php + Http2",
                        "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('http://qanswer-core1.univ-st-etienne.fr/api/feedback/admin/trainAll');\n$request->setRequestMethod('GET');\n$request->setHeaders([\n  'content-type' => 'application/json',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
                    }
                ]
            }
        },
        "/api/feedback/admin/upload": {
            "post": {
                "consumes": [
                    "multipart/form-data"
                ],
                "deprecated": false,
                "operationId": "uploadAdminUsingPOST",
                "parameters": [
                    {
                        "description": "json",
                        "in": "formData",
                        "name": "json",
                        "required": true,
                        "type": "file"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "summary": "Upload question-answer pairs",
                "tags": [
                    "feedback-controller"
                ],
                "x-codeSamples": [
                    {
                        "lang": "Node + Request",
                        "source": "const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'http://qanswer-core1.univ-st-etienne.fr/api/feedback/admin/upload',\n  headers: {\n    accept: 'multipart/form-data',\n    'content-type': 'application/json',\n    Authorization: 'REPLACE_KEY_VALUE'\n  }\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
                    },
                    {
                        "lang": "Shell + Curl",
                        "source": "curl --request POST \\\n  --url http://qanswer-core1.univ-st-etienne.fr/api/feedback/admin/upload \\\n  --header 'Authorization: REPLACE_KEY_VALUE' \\\n  --header 'accept: multipart/form-data' \\\n  --header 'content-type: application/json'"
                    },
                    {
                        "lang": "Shell + Httpie",
                        "source": "http POST http://qanswer-core1.univ-st-etienne.fr/api/feedback/admin/upload \\\n  Authorization:REPLACE_KEY_VALUE \\\n  accept:multipart/form-data \\\n  content-type:application/json"
                    },
                    {
                        "lang": "Python + Python3",
                        "source": "import http.client\n\nconn = http.client.HTTPConnection(\"qanswer-core1.univ-st-etienne.fr\")\n\nheaders = {\n    'accept': \"multipart/form-data\",\n    'content-type': \"application/json\",\n    'Authorization': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"POST\", \"/api/feedback/admin/upload\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
                    },
                    {
                        "lang": "Php + Curl",
                        "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"http://qanswer-core1.univ-st-etienne.fr/api/feedback/admin/upload\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: REPLACE_KEY_VALUE\",\n    \"accept: multipart/form-data\",\n    \"content-type: application/json\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
                    },
                    {
                        "lang": "php",
                        "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('http://qanswer-core1.univ-st-etienne.fr/api/feedback/admin/upload');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setHeaders([\n  'accept' => 'multipart/form-data',\n  'content-type' => 'application/json',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
                    },
                    {
                        "lang": "Php + Http2",
                        "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('http://qanswer-core1.univ-st-etienne.fr/api/feedback/admin/upload');\n$request->setRequestMethod('POST');\n$request->setHeaders([\n  'accept' => 'multipart/form-data',\n  'content-type' => 'application/json',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
                    }
                ]
            }
        },
        "/api/feedback/create": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "deprecated": false,
                "operationId": "createFeaturesApiUsingPOST",
                "parameters": [
                    {
                        "description": "feedbackRequest",
                        "in": "body",
                        "name": "feedbackRequest",
                        "required": true,
                        "schema": {
                            "properties": {
                                "context": {
                                    "items": {
                                        "items": {
                                            "$ref": "#/definitions/QuestionContext"
                                        },
                                        "type": "array"
                                    },
                                    "type": "array"
                                },
                                "correct": {
                                    "type": "boolean"
                                },
                                "knowledgebase": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "language": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "question": {
                                    "type": "string"
                                },
                                "questionId": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "sparql": {
                                    "type": "string"
                                },
                                "sparqlKB": {
                                    "type": "string"
                                },
                                "user": {
                                    "type": "string"
                                },
                                "validated": {
                                    "type": "boolean"
                                }
                            },
                            "title": "FeedbackRequest",
                            "type": "object"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "summary": "Give new feedback for a question answer pair",
                "tags": [
                    "feedback-controller"
                ],
                "x-codeSamples": [
                    {
                        "lang": "Node + Request",
                        "source": "const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'http://qanswer-core1.univ-st-etienne.fr/api/feedback/create',\n  headers: {\n    accept: 'application/json',\n    'content-type': 'application/json',\n    Authorization: 'REPLACE_KEY_VALUE'\n  },\n  body: {\n    context: [[{knowledgeGraph: 'string', uri: 'string', user: 'string'}]],\n    correct: true,\n    knowledgebase: ['string'],\n    language: ['string'],\n    question: 'string',\n    questionId: 0,\n    sparql: 'string',\n    sparqlKB: 'string',\n    user: 'string',\n    validated: true\n  },\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
                    },
                    {
                        "lang": "Shell + Curl",
                        "source": "curl --request POST \\\n  --url http://qanswer-core1.univ-st-etienne.fr/api/feedback/create \\\n  --header 'Authorization: REPLACE_KEY_VALUE' \\\n  --header 'accept: application/json' \\\n  --header 'content-type: application/json' \\\n  --data '{\"context\":[[{\"knowledgeGraph\":\"string\",\"uri\":\"string\",\"user\":\"string\"}]],\"correct\":true,\"knowledgebase\":[\"string\"],\"language\":[\"string\"],\"question\":\"string\",\"questionId\":0,\"sparql\":\"string\",\"sparqlKB\":\"string\",\"user\":\"string\",\"validated\":true}'"
                    },
                    {
                        "lang": "Shell + Httpie",
                        "source": "echo '{\"context\":[[{\"knowledgeGraph\":\"string\",\"uri\":\"string\",\"user\":\"string\"}]],\"correct\":true,\"knowledgebase\":[\"string\"],\"language\":[\"string\"],\"question\":\"string\",\"questionId\":0,\"sparql\":\"string\",\"sparqlKB\":\"string\",\"user\":\"string\",\"validated\":true}' |  \\\n  http POST http://qanswer-core1.univ-st-etienne.fr/api/feedback/create \\\n  Authorization:REPLACE_KEY_VALUE \\\n  accept:application/json \\\n  content-type:application/json"
                    },
                    {
                        "lang": "Python + Python3",
                        "source": "import http.client\n\nconn = http.client.HTTPConnection(\"qanswer-core1.univ-st-etienne.fr\")\n\npayload = \"{\\\"context\\\":[[{\\\"knowledgeGraph\\\":\\\"string\\\",\\\"uri\\\":\\\"string\\\",\\\"user\\\":\\\"string\\\"}]],\\\"correct\\\":true,\\\"knowledgebase\\\":[\\\"string\\\"],\\\"language\\\":[\\\"string\\\"],\\\"question\\\":\\\"string\\\",\\\"questionId\\\":0,\\\"sparql\\\":\\\"string\\\",\\\"sparqlKB\\\":\\\"string\\\",\\\"user\\\":\\\"string\\\",\\\"validated\\\":true}\"\n\nheaders = {\n    'accept': \"application/json\",\n    'content-type': \"application/json\",\n    'Authorization': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"POST\", \"/api/feedback/create\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
                    },
                    {
                        "lang": "Php + Curl",
                        "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"http://qanswer-core1.univ-st-etienne.fr/api/feedback/create\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_POSTFIELDS => \"{\\\"context\\\":[[{\\\"knowledgeGraph\\\":\\\"string\\\",\\\"uri\\\":\\\"string\\\",\\\"user\\\":\\\"string\\\"}]],\\\"correct\\\":true,\\\"knowledgebase\\\":[\\\"string\\\"],\\\"language\\\":[\\\"string\\\"],\\\"question\\\":\\\"string\\\",\\\"questionId\\\":0,\\\"sparql\\\":\\\"string\\\",\\\"sparqlKB\\\":\\\"string\\\",\\\"user\\\":\\\"string\\\",\\\"validated\\\":true}\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: REPLACE_KEY_VALUE\",\n    \"accept: application/json\",\n    \"content-type: application/json\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
                    },
                    {
                        "lang": "php",
                        "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('http://qanswer-core1.univ-st-etienne.fr/api/feedback/create');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setHeaders([\n  'accept' => 'application/json',\n  'content-type' => 'application/json',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$request->setBody('{\"context\":[[{\"knowledgeGraph\":\"string\",\"uri\":\"string\",\"user\":\"string\"}]],\"correct\":true,\"knowledgebase\":[\"string\"],\"language\":[\"string\"],\"question\":\"string\",\"questionId\":0,\"sparql\":\"string\",\"sparqlKB\":\"string\",\"user\":\"string\",\"validated\":true}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
                    },
                    {
                        "lang": "Php + Http2",
                        "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$body = new http\\Message\\Body;\n$body->append('{\"context\":[[{\"knowledgeGraph\":\"string\",\"uri\":\"string\",\"user\":\"string\"}]],\"correct\":true,\"knowledgebase\":[\"string\"],\"language\":[\"string\"],\"question\":\"string\",\"questionId\":0,\"sparql\":\"string\",\"sparqlKB\":\"string\",\"user\":\"string\",\"validated\":true}');\n\n$request->setRequestUrl('http://qanswer-core1.univ-st-etienne.fr/api/feedback/create');\n$request->setRequestMethod('POST');\n$request->setBody($body);\n\n$request->setHeaders([\n  'accept' => 'application/json',\n  'content-type' => 'application/json',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
                    }
                ]
            }
        },
        "/api/feedback/dump": {
            "get": {
                "deprecated": false,
                "operationId": "dumpUsingGET",
                "parameters": [
                    {
                        "collectionFormat": "multi",
                        "description": "kbs",
                        "in": "query",
                        "items": {
                            "type": "string"
                        },
                        "name": "kbs",
                        "required": false,
                        "type": "array"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "summary": "Download all question-answer pairs",
                "tags": [
                    "feedback-controller"
                ],
                "x-codeSamples": [
                    {
                        "lang": "Node + Request",
                        "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://qanswer-core1.univ-st-etienne.fr/api/feedback/dump',\n  qs: {kbs: 'SOME_ARRAY_VALUE'},\n  headers: {'content-type': 'application/json', Authorization: 'REPLACE_KEY_VALUE'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
                    },
                    {
                        "lang": "Shell + Curl",
                        "source": "curl --request GET \\\n  --url 'http://qanswer-core1.univ-st-etienne.fr/api/feedback/dump?kbs=SOME_ARRAY_VALUE' \\\n  --header 'Authorization: REPLACE_KEY_VALUE' \\\n  --header 'content-type: application/json'"
                    },
                    {
                        "lang": "Shell + Httpie",
                        "source": "http GET 'http://qanswer-core1.univ-st-etienne.fr/api/feedback/dump?kbs=SOME_ARRAY_VALUE' \\\n  Authorization:REPLACE_KEY_VALUE \\\n  content-type:application/json"
                    },
                    {
                        "lang": "Python + Python3",
                        "source": "import http.client\n\nconn = http.client.HTTPConnection(\"qanswer-core1.univ-st-etienne.fr\")\n\nheaders = {\n    'content-type': \"application/json\",\n    'Authorization': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"GET\", \"/api/feedback/dump?kbs=SOME_ARRAY_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
                    },
                    {
                        "lang": "Php + Curl",
                        "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"http://qanswer-core1.univ-st-etienne.fr/api/feedback/dump?kbs=SOME_ARRAY_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: REPLACE_KEY_VALUE\",\n    \"content-type: application/json\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
                    },
                    {
                        "lang": "php",
                        "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('http://qanswer-core1.univ-st-etienne.fr/api/feedback/dump');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setQueryData([\n  'kbs' => 'SOME_ARRAY_VALUE'\n]);\n\n$request->setHeaders([\n  'content-type' => 'application/json',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
                    },
                    {
                        "lang": "Php + Http2",
                        "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('http://qanswer-core1.univ-st-etienne.fr/api/feedback/dump');\n$request->setRequestMethod('GET');\n$request->setQuery(new http\\QueryString([\n  'kbs' => 'SOME_ARRAY_VALUE'\n]));\n\n$request->setHeaders([\n  'content-type' => 'application/json',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
                    }
                ]
            }
        },
        "/api/feedback/dump_features": {
            "get": {
                "deprecated": false,
                "operationId": "dumpFeaturesUsingGET",
                "parameters": [
                    {
                        "collectionFormat": "multi",
                        "description": "kbs",
                        "in": "query",
                        "items": {
                            "type": "string"
                        },
                        "name": "kbs",
                        "required": false,
                        "type": "array"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "summary": "Train a model based on the uploaded question-answer pairs",
                "tags": [
                    "feedback-controller"
                ],
                "x-codeSamples": [
                    {
                        "lang": "Node + Request",
                        "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://qanswer-core1.univ-st-etienne.fr/api/feedback/dump_features',\n  qs: {kbs: 'SOME_ARRAY_VALUE'},\n  headers: {'content-type': 'application/json', Authorization: 'REPLACE_KEY_VALUE'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
                    },
                    {
                        "lang": "Shell + Curl",
                        "source": "curl --request GET \\\n  --url 'http://qanswer-core1.univ-st-etienne.fr/api/feedback/dump_features?kbs=SOME_ARRAY_VALUE' \\\n  --header 'Authorization: REPLACE_KEY_VALUE' \\\n  --header 'content-type: application/json'"
                    },
                    {
                        "lang": "Shell + Httpie",
                        "source": "http GET 'http://qanswer-core1.univ-st-etienne.fr/api/feedback/dump_features?kbs=SOME_ARRAY_VALUE' \\\n  Authorization:REPLACE_KEY_VALUE \\\n  content-type:application/json"
                    },
                    {
                        "lang": "Python + Python3",
                        "source": "import http.client\n\nconn = http.client.HTTPConnection(\"qanswer-core1.univ-st-etienne.fr\")\n\nheaders = {\n    'content-type': \"application/json\",\n    'Authorization': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"GET\", \"/api/feedback/dump_features?kbs=SOME_ARRAY_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
                    },
                    {
                        "lang": "Php + Curl",
                        "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"http://qanswer-core1.univ-st-etienne.fr/api/feedback/dump_features?kbs=SOME_ARRAY_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: REPLACE_KEY_VALUE\",\n    \"content-type: application/json\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
                    },
                    {
                        "lang": "php",
                        "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('http://qanswer-core1.univ-st-etienne.fr/api/feedback/dump_features');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setQueryData([\n  'kbs' => 'SOME_ARRAY_VALUE'\n]);\n\n$request->setHeaders([\n  'content-type' => 'application/json',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
                    },
                    {
                        "lang": "Php + Http2",
                        "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('http://qanswer-core1.univ-st-etienne.fr/api/feedback/dump_features');\n$request->setRequestMethod('GET');\n$request->setQuery(new http\\QueryString([\n  'kbs' => 'SOME_ARRAY_VALUE'\n]));\n\n$request->setHeaders([\n  'content-type' => 'application/json',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
                    }
                ]
            }
        },
        "/api/feedback/dump_qald": {
            "get": {
                "deprecated": false,
                "operationId": "dumpQaldUsingGET",
                "parameters": [
                    {
                        "collectionFormat": "multi",
                        "description": "kbs",
                        "in": "query",
                        "items": {
                            "type": "string"
                        },
                        "name": "kbs",
                        "required": false,
                        "type": "array"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "summary": "Download all question-answer pairs in QALD format",
                "tags": [
                    "feedback-controller"
                ],
                "x-codeSamples": [
                    {
                        "lang": "Node + Request",
                        "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://qanswer-core1.univ-st-etienne.fr/api/feedback/dump_qald',\n  qs: {kbs: 'SOME_ARRAY_VALUE'},\n  headers: {'content-type': 'application/json', Authorization: 'REPLACE_KEY_VALUE'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
                    },
                    {
                        "lang": "Shell + Curl",
                        "source": "curl --request GET \\\n  --url 'http://qanswer-core1.univ-st-etienne.fr/api/feedback/dump_qald?kbs=SOME_ARRAY_VALUE' \\\n  --header 'Authorization: REPLACE_KEY_VALUE' \\\n  --header 'content-type: application/json'"
                    },
                    {
                        "lang": "Shell + Httpie",
                        "source": "http GET 'http://qanswer-core1.univ-st-etienne.fr/api/feedback/dump_qald?kbs=SOME_ARRAY_VALUE' \\\n  Authorization:REPLACE_KEY_VALUE \\\n  content-type:application/json"
                    },
                    {
                        "lang": "Python + Python3",
                        "source": "import http.client\n\nconn = http.client.HTTPConnection(\"qanswer-core1.univ-st-etienne.fr\")\n\nheaders = {\n    'content-type': \"application/json\",\n    'Authorization': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"GET\", \"/api/feedback/dump_qald?kbs=SOME_ARRAY_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
                    },
                    {
                        "lang": "Php + Curl",
                        "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"http://qanswer-core1.univ-st-etienne.fr/api/feedback/dump_qald?kbs=SOME_ARRAY_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: REPLACE_KEY_VALUE\",\n    \"content-type: application/json\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
                    },
                    {
                        "lang": "php",
                        "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('http://qanswer-core1.univ-st-etienne.fr/api/feedback/dump_qald');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setQueryData([\n  'kbs' => 'SOME_ARRAY_VALUE'\n]);\n\n$request->setHeaders([\n  'content-type' => 'application/json',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
                    },
                    {
                        "lang": "Php + Http2",
                        "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('http://qanswer-core1.univ-st-etienne.fr/api/feedback/dump_qald');\n$request->setRequestMethod('GET');\n$request->setQuery(new http\\QueryString([\n  'kbs' => 'SOME_ARRAY_VALUE'\n]));\n\n$request->setHeaders([\n  'content-type' => 'application/json',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
                    }
                ]
            }
        },
        "/api/feedback/dump_suggestor": {
            "get": {
                "deprecated": false,
                "operationId": "dumpSuggestorUsingGET",
                "parameters": [
                    {
                        "collectionFormat": "multi",
                        "description": "kbs",
                        "in": "query",
                        "items": {
                            "type": "string"
                        },
                        "name": "kbs",
                        "required": false,
                        "type": "array"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "summary": "dumpSuggestor",
                "tags": [
                    "feedback-controller"
                ],
                "x-codeSamples": [
                    {
                        "lang": "Node + Request",
                        "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://qanswer-core1.univ-st-etienne.fr/api/feedback/dump_suggestor',\n  qs: {kbs: 'SOME_ARRAY_VALUE'},\n  headers: {'content-type': 'application/json', Authorization: 'REPLACE_KEY_VALUE'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
                    },
                    {
                        "lang": "Shell + Curl",
                        "source": "curl --request GET \\\n  --url 'http://qanswer-core1.univ-st-etienne.fr/api/feedback/dump_suggestor?kbs=SOME_ARRAY_VALUE' \\\n  --header 'Authorization: REPLACE_KEY_VALUE' \\\n  --header 'content-type: application/json'"
                    },
                    {
                        "lang": "Shell + Httpie",
                        "source": "http GET 'http://qanswer-core1.univ-st-etienne.fr/api/feedback/dump_suggestor?kbs=SOME_ARRAY_VALUE' \\\n  Authorization:REPLACE_KEY_VALUE \\\n  content-type:application/json"
                    },
                    {
                        "lang": "Python + Python3",
                        "source": "import http.client\n\nconn = http.client.HTTPConnection(\"qanswer-core1.univ-st-etienne.fr\")\n\nheaders = {\n    'content-type': \"application/json\",\n    'Authorization': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"GET\", \"/api/feedback/dump_suggestor?kbs=SOME_ARRAY_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
                    },
                    {
                        "lang": "Php + Curl",
                        "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"http://qanswer-core1.univ-st-etienne.fr/api/feedback/dump_suggestor?kbs=SOME_ARRAY_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: REPLACE_KEY_VALUE\",\n    \"content-type: application/json\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
                    },
                    {
                        "lang": "php",
                        "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('http://qanswer-core1.univ-st-etienne.fr/api/feedback/dump_suggestor');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setQueryData([\n  'kbs' => 'SOME_ARRAY_VALUE'\n]);\n\n$request->setHeaders([\n  'content-type' => 'application/json',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
                    },
                    {
                        "lang": "Php + Http2",
                        "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('http://qanswer-core1.univ-st-etienne.fr/api/feedback/dump_suggestor');\n$request->setRequestMethod('GET');\n$request->setQuery(new http\\QueryString([\n  'kbs' => 'SOME_ARRAY_VALUE'\n]));\n\n$request->setHeaders([\n  'content-type' => 'application/json',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
                    }
                ]
            }
        },
        "/api/feedback/evaluate": {
            "get": {
                "deprecated": false,
                "operationId": "evaluateUsingGET",
                "parameters": [
                    {
                        "collectionFormat": "multi",
                        "description": "kbs",
                        "in": "query",
                        "items": {
                            "type": "string"
                        },
                        "name": "kbs",
                        "required": false,
                        "type": "array"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/FeedbackEvaluation"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "summary": "Evaluate the current model on the uploaded question-answer pairs",
                "tags": [
                    "feedback-controller"
                ],
                "x-codeSamples": [
                    {
                        "lang": "Node + Request",
                        "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://qanswer-core1.univ-st-etienne.fr/api/feedback/evaluate',\n  qs: {kbs: 'SOME_ARRAY_VALUE'},\n  headers: {'content-type': 'application/json', Authorization: 'REPLACE_KEY_VALUE'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
                    },
                    {
                        "lang": "Shell + Curl",
                        "source": "curl --request GET \\\n  --url 'http://qanswer-core1.univ-st-etienne.fr/api/feedback/evaluate?kbs=SOME_ARRAY_VALUE' \\\n  --header 'Authorization: REPLACE_KEY_VALUE' \\\n  --header 'content-type: application/json'"
                    },
                    {
                        "lang": "Shell + Httpie",
                        "source": "http GET 'http://qanswer-core1.univ-st-etienne.fr/api/feedback/evaluate?kbs=SOME_ARRAY_VALUE' \\\n  Authorization:REPLACE_KEY_VALUE \\\n  content-type:application/json"
                    },
                    {
                        "lang": "Python + Python3",
                        "source": "import http.client\n\nconn = http.client.HTTPConnection(\"qanswer-core1.univ-st-etienne.fr\")\n\nheaders = {\n    'content-type': \"application/json\",\n    'Authorization': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"GET\", \"/api/feedback/evaluate?kbs=SOME_ARRAY_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
                    },
                    {
                        "lang": "Php + Curl",
                        "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"http://qanswer-core1.univ-st-etienne.fr/api/feedback/evaluate?kbs=SOME_ARRAY_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: REPLACE_KEY_VALUE\",\n    \"content-type: application/json\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
                    },
                    {
                        "lang": "php",
                        "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('http://qanswer-core1.univ-st-etienne.fr/api/feedback/evaluate');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setQueryData([\n  'kbs' => 'SOME_ARRAY_VALUE'\n]);\n\n$request->setHeaders([\n  'content-type' => 'application/json',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
                    },
                    {
                        "lang": "Php + Http2",
                        "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('http://qanswer-core1.univ-st-etienne.fr/api/feedback/evaluate');\n$request->setRequestMethod('GET');\n$request->setQuery(new http\\QueryString([\n  'kbs' => 'SOME_ARRAY_VALUE'\n]));\n\n$request->setHeaders([\n  'content-type' => 'application/json',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
                    }
                ]
            }
        },
        "/api/feedback/remove": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "deprecated": false,
                "operationId": "removeUsingPOST_2",
                "parameters": [
                    {
                        "description": "questionIds",
                        "in": "body",
                        "name": "questionIds",
                        "required": true,
                        "schema": {
                            "properties": {
                                "questionIds": {
                                    "items": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "type": "array"
                                }
                            },
                            "title": "RemoveRequest",
                            "type": "object"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "summary": "Remove one question-answer pair",
                "tags": [
                    "feedback-controller"
                ],
                "x-codeSamples": [
                    {
                        "lang": "Node + Request",
                        "source": "const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'http://qanswer-core1.univ-st-etienne.fr/api/feedback/remove',\n  headers: {\n    accept: 'application/json',\n    'content-type': 'application/json',\n    Authorization: 'REPLACE_KEY_VALUE'\n  },\n  body: {questionIds: [0]},\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
                    },
                    {
                        "lang": "Shell + Curl",
                        "source": "curl --request POST \\\n  --url http://qanswer-core1.univ-st-etienne.fr/api/feedback/remove \\\n  --header 'Authorization: REPLACE_KEY_VALUE' \\\n  --header 'accept: application/json' \\\n  --header 'content-type: application/json' \\\n  --data '{\"questionIds\":[0]}'"
                    },
                    {
                        "lang": "Shell + Httpie",
                        "source": "echo '{\"questionIds\":[0]}' |  \\\n  http POST http://qanswer-core1.univ-st-etienne.fr/api/feedback/remove \\\n  Authorization:REPLACE_KEY_VALUE \\\n  accept:application/json \\\n  content-type:application/json"
                    },
                    {
                        "lang": "Python + Python3",
                        "source": "import http.client\n\nconn = http.client.HTTPConnection(\"qanswer-core1.univ-st-etienne.fr\")\n\npayload = \"{\\\"questionIds\\\":[0]}\"\n\nheaders = {\n    'accept': \"application/json\",\n    'content-type': \"application/json\",\n    'Authorization': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"POST\", \"/api/feedback/remove\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
                    },
                    {
                        "lang": "Php + Curl",
                        "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"http://qanswer-core1.univ-st-etienne.fr/api/feedback/remove\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_POSTFIELDS => \"{\\\"questionIds\\\":[0]}\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: REPLACE_KEY_VALUE\",\n    \"accept: application/json\",\n    \"content-type: application/json\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
                    },
                    {
                        "lang": "php",
                        "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('http://qanswer-core1.univ-st-etienne.fr/api/feedback/remove');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setHeaders([\n  'accept' => 'application/json',\n  'content-type' => 'application/json',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$request->setBody('{\"questionIds\":[0]}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
                    },
                    {
                        "lang": "Php + Http2",
                        "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$body = new http\\Message\\Body;\n$body->append('{\"questionIds\":[0]}');\n\n$request->setRequestUrl('http://qanswer-core1.univ-st-etienne.fr/api/feedback/remove');\n$request->setRequestMethod('POST');\n$request->setBody($body);\n\n$request->setHeaders([\n  'accept' => 'application/json',\n  'content-type' => 'application/json',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
                    }
                ]
            }
        },
        "/api/feedback/remove-all-questions": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "deprecated": false,
                "operationId": "removeAllUsingPOST",
                "parameters": [
                    {
                        "description": "removeAllRequest",
                        "in": "body",
                        "name": "removeAllRequest",
                        "required": true,
                        "schema": {
                            "properties": {
                                "knowledgeGraphs": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            },
                            "title": "RemoveAllQuestions",
                            "type": "object"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "summary": "Remove all given question-answer pairs",
                "tags": [
                    "feedback-controller"
                ],
                "x-codeSamples": [
                    {
                        "lang": "Node + Request",
                        "source": "const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'http://qanswer-core1.univ-st-etienne.fr/api/feedback/remove-all-questions',\n  headers: {\n    accept: 'application/json',\n    'content-type': 'application/json',\n    Authorization: 'REPLACE_KEY_VALUE'\n  },\n  body: {knowledgeGraphs: ['string']},\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
                    },
                    {
                        "lang": "Shell + Curl",
                        "source": "curl --request POST \\\n  --url http://qanswer-core1.univ-st-etienne.fr/api/feedback/remove-all-questions \\\n  --header 'Authorization: REPLACE_KEY_VALUE' \\\n  --header 'accept: application/json' \\\n  --header 'content-type: application/json' \\\n  --data '{\"knowledgeGraphs\":[\"string\"]}'"
                    },
                    {
                        "lang": "Shell + Httpie",
                        "source": "echo '{\"knowledgeGraphs\":[\"string\"]}' |  \\\n  http POST http://qanswer-core1.univ-st-etienne.fr/api/feedback/remove-all-questions \\\n  Authorization:REPLACE_KEY_VALUE \\\n  accept:application/json \\\n  content-type:application/json"
                    },
                    {
                        "lang": "Python + Python3",
                        "source": "import http.client\n\nconn = http.client.HTTPConnection(\"qanswer-core1.univ-st-etienne.fr\")\n\npayload = \"{\\\"knowledgeGraphs\\\":[\\\"string\\\"]}\"\n\nheaders = {\n    'accept': \"application/json\",\n    'content-type': \"application/json\",\n    'Authorization': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"POST\", \"/api/feedback/remove-all-questions\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
                    },
                    {
                        "lang": "Php + Curl",
                        "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"http://qanswer-core1.univ-st-etienne.fr/api/feedback/remove-all-questions\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_POSTFIELDS => \"{\\\"knowledgeGraphs\\\":[\\\"string\\\"]}\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: REPLACE_KEY_VALUE\",\n    \"accept: application/json\",\n    \"content-type: application/json\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
                    },
                    {
                        "lang": "php",
                        "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('http://qanswer-core1.univ-st-etienne.fr/api/feedback/remove-all-questions');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setHeaders([\n  'accept' => 'application/json',\n  'content-type' => 'application/json',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$request->setBody('{\"knowledgeGraphs\":[\"string\"]}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
                    },
                    {
                        "lang": "Php + Http2",
                        "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$body = new http\\Message\\Body;\n$body->append('{\"knowledgeGraphs\":[\"string\"]}');\n\n$request->setRequestUrl('http://qanswer-core1.univ-st-etienne.fr/api/feedback/remove-all-questions');\n$request->setRequestMethod('POST');\n$request->setBody($body);\n\n$request->setHeaders([\n  'accept' => 'application/json',\n  'content-type' => 'application/json',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
                    }
                ]
            }
        },
        "/api/feedback/train": {
            "get": {
                "deprecated": false,
                "operationId": "trainUsingGET",
                "parameters": [
                    {
                        "collectionFormat": "multi",
                        "description": "kbs",
                        "in": "query",
                        "items": {
                            "type": "string"
                        },
                        "name": "kbs",
                        "required": false,
                        "type": "array"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "summary": "Train a model based on the uploaded question-answer pairs",
                "tags": [
                    "feedback-controller"
                ],
                "x-codeSamples": [
                    {
                        "lang": "Node + Request",
                        "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://qanswer-core1.univ-st-etienne.fr/api/feedback/train',\n  qs: {kbs: 'SOME_ARRAY_VALUE'},\n  headers: {'content-type': 'application/json', Authorization: 'REPLACE_KEY_VALUE'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
                    },
                    {
                        "lang": "Shell + Curl",
                        "source": "curl --request GET \\\n  --url 'http://qanswer-core1.univ-st-etienne.fr/api/feedback/train?kbs=SOME_ARRAY_VALUE' \\\n  --header 'Authorization: REPLACE_KEY_VALUE' \\\n  --header 'content-type: application/json'"
                    },
                    {
                        "lang": "Shell + Httpie",
                        "source": "http GET 'http://qanswer-core1.univ-st-etienne.fr/api/feedback/train?kbs=SOME_ARRAY_VALUE' \\\n  Authorization:REPLACE_KEY_VALUE \\\n  content-type:application/json"
                    },
                    {
                        "lang": "Python + Python3",
                        "source": "import http.client\n\nconn = http.client.HTTPConnection(\"qanswer-core1.univ-st-etienne.fr\")\n\nheaders = {\n    'content-type': \"application/json\",\n    'Authorization': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"GET\", \"/api/feedback/train?kbs=SOME_ARRAY_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
                    },
                    {
                        "lang": "Php + Curl",
                        "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"http://qanswer-core1.univ-st-etienne.fr/api/feedback/train?kbs=SOME_ARRAY_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: REPLACE_KEY_VALUE\",\n    \"content-type: application/json\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
                    },
                    {
                        "lang": "php",
                        "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('http://qanswer-core1.univ-st-etienne.fr/api/feedback/train');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setQueryData([\n  'kbs' => 'SOME_ARRAY_VALUE'\n]);\n\n$request->setHeaders([\n  'content-type' => 'application/json',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
                    },
                    {
                        "lang": "Php + Http2",
                        "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('http://qanswer-core1.univ-st-etienne.fr/api/feedback/train');\n$request->setRequestMethod('GET');\n$request->setQuery(new http\\QueryString([\n  'kbs' => 'SOME_ARRAY_VALUE'\n]));\n\n$request->setHeaders([\n  'content-type' => 'application/json',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
                    }
                ]
            }
        },
        "/api/feedback/upload": {
            "post": {
                "consumes": [
                    "multipart/form-data"
                ],
                "deprecated": false,
                "operationId": "feedbackUploadUsingPOST",
                "parameters": [
                    {
                        "description": "json",
                        "in": "formData",
                        "name": "json",
                        "required": true,
                        "type": "file"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "summary": "Upload question-answer pairs",
                "tags": [
                    "feedback-controller"
                ],
                "x-codeSamples": [
                    {
                        "lang": "Node + Request",
                        "source": "const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'http://qanswer-core1.univ-st-etienne.fr/api/feedback/upload',\n  headers: {\n    accept: 'multipart/form-data',\n    'content-type': 'application/json',\n    Authorization: 'REPLACE_KEY_VALUE'\n  }\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
                    },
                    {
                        "lang": "Shell + Curl",
                        "source": "curl --request POST \\\n  --url http://qanswer-core1.univ-st-etienne.fr/api/feedback/upload \\\n  --header 'Authorization: REPLACE_KEY_VALUE' \\\n  --header 'accept: multipart/form-data' \\\n  --header 'content-type: application/json'"
                    },
                    {
                        "lang": "Shell + Httpie",
                        "source": "http POST http://qanswer-core1.univ-st-etienne.fr/api/feedback/upload \\\n  Authorization:REPLACE_KEY_VALUE \\\n  accept:multipart/form-data \\\n  content-type:application/json"
                    },
                    {
                        "lang": "Python + Python3",
                        "source": "import http.client\n\nconn = http.client.HTTPConnection(\"qanswer-core1.univ-st-etienne.fr\")\n\nheaders = {\n    'accept': \"multipart/form-data\",\n    'content-type': \"application/json\",\n    'Authorization': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"POST\", \"/api/feedback/upload\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
                    },
                    {
                        "lang": "Php + Curl",
                        "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"http://qanswer-core1.univ-st-etienne.fr/api/feedback/upload\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: REPLACE_KEY_VALUE\",\n    \"accept: multipart/form-data\",\n    \"content-type: application/json\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
                    },
                    {
                        "lang": "php",
                        "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('http://qanswer-core1.univ-st-etienne.fr/api/feedback/upload');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setHeaders([\n  'accept' => 'multipart/form-data',\n  'content-type' => 'application/json',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
                    },
                    {
                        "lang": "Php + Http2",
                        "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('http://qanswer-core1.univ-st-etienne.fr/api/feedback/upload');\n$request->setRequestMethod('POST');\n$request->setHeaders([\n  'accept' => 'multipart/form-data',\n  'content-type' => 'application/json',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
                    }
                ]
            }
        },
        "/api/feedback/upload_qald": {
            "post": {
                "consumes": [
                    "multipart/form-data"
                ],
                "deprecated": false,
                "operationId": "uploadQaldUsingPOST",
                "parameters": [
                    {
                        "description": "qaldJson",
                        "in": "formData",
                        "name": "qaldJson",
                        "required": true,
                        "type": "file"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "summary": "Upload question-answer pairs in QALD format",
                "tags": [
                    "feedback-controller"
                ],
                "x-codeSamples": [
                    {
                        "lang": "Node + Request",
                        "source": "const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'http://qanswer-core1.univ-st-etienne.fr/api/feedback/upload_qald',\n  headers: {\n    accept: 'multipart/form-data',\n    'content-type': 'application/json',\n    Authorization: 'REPLACE_KEY_VALUE'\n  }\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
                    },
                    {
                        "lang": "Shell + Curl",
                        "source": "curl --request POST \\\n  --url http://qanswer-core1.univ-st-etienne.fr/api/feedback/upload_qald \\\n  --header 'Authorization: REPLACE_KEY_VALUE' \\\n  --header 'accept: multipart/form-data' \\\n  --header 'content-type: application/json'"
                    },
                    {
                        "lang": "Shell + Httpie",
                        "source": "http POST http://qanswer-core1.univ-st-etienne.fr/api/feedback/upload_qald \\\n  Authorization:REPLACE_KEY_VALUE \\\n  accept:multipart/form-data \\\n  content-type:application/json"
                    },
                    {
                        "lang": "Python + Python3",
                        "source": "import http.client\n\nconn = http.client.HTTPConnection(\"qanswer-core1.univ-st-etienne.fr\")\n\nheaders = {\n    'accept': \"multipart/form-data\",\n    'content-type': \"application/json\",\n    'Authorization': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"POST\", \"/api/feedback/upload_qald\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
                    },
                    {
                        "lang": "Php + Curl",
                        "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"http://qanswer-core1.univ-st-etienne.fr/api/feedback/upload_qald\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: REPLACE_KEY_VALUE\",\n    \"accept: multipart/form-data\",\n    \"content-type: application/json\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
                    },
                    {
                        "lang": "php",
                        "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('http://qanswer-core1.univ-st-etienne.fr/api/feedback/upload_qald');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setHeaders([\n  'accept' => 'multipart/form-data',\n  'content-type' => 'application/json',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
                    },
                    {
                        "lang": "Php + Http2",
                        "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('http://qanswer-core1.univ-st-etienne.fr/api/feedback/upload_qald');\n$request->setRequestMethod('POST');\n$request->setHeaders([\n  'accept' => 'multipart/form-data',\n  'content-type' => 'application/json',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
                    }
                ]
            }
        },
        "/api/feedback/{dataset}/upload": {
            "post": {
                "consumes": [
                    "multipart/form-data"
                ],
                "deprecated": false,
                "operationId": "uploadSpecificUsingPOST",
                "parameters": [
                    {
                        "description": "dataset",
                        "in": "path",
                        "name": "dataset",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "json",
                        "in": "formData",
                        "name": "json",
                        "required": true,
                        "type": "file"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "summary": "Upload question-answer pairs for specific dataset",
                "tags": [
                    "feedback-controller"
                ],
                "x-codeSamples": [
                    {
                        "lang": "Node + Request",
                        "source": "const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'http://qanswer-core1.univ-st-etienne.fr/api/feedback/%7Bdataset%7D/upload',\n  headers: {\n    accept: 'multipart/form-data',\n    'content-type': 'application/json',\n    Authorization: 'REPLACE_KEY_VALUE'\n  }\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
                    },
                    {
                        "lang": "Shell + Curl",
                        "source": "curl --request POST \\\n  --url http://qanswer-core1.univ-st-etienne.fr/api/feedback/%7Bdataset%7D/upload \\\n  --header 'Authorization: REPLACE_KEY_VALUE' \\\n  --header 'accept: multipart/form-data' \\\n  --header 'content-type: application/json'"
                    },
                    {
                        "lang": "Shell + Httpie",
                        "source": "http POST http://qanswer-core1.univ-st-etienne.fr/api/feedback/%7Bdataset%7D/upload \\\n  Authorization:REPLACE_KEY_VALUE \\\n  accept:multipart/form-data \\\n  content-type:application/json"
                    },
                    {
                        "lang": "Python + Python3",
                        "source": "import http.client\n\nconn = http.client.HTTPConnection(\"qanswer-core1.univ-st-etienne.fr\")\n\nheaders = {\n    'accept': \"multipart/form-data\",\n    'content-type': \"application/json\",\n    'Authorization': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"POST\", \"/api/feedback/%7Bdataset%7D/upload\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
                    },
                    {
                        "lang": "Php + Curl",
                        "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"http://qanswer-core1.univ-st-etienne.fr/api/feedback/%7Bdataset%7D/upload\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: REPLACE_KEY_VALUE\",\n    \"accept: multipart/form-data\",\n    \"content-type: application/json\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
                    },
                    {
                        "lang": "php",
                        "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('http://qanswer-core1.univ-st-etienne.fr/api/feedback/%7Bdataset%7D/upload');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setHeaders([\n  'accept' => 'multipart/form-data',\n  'content-type' => 'application/json',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
                    },
                    {
                        "lang": "Php + Http2",
                        "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('http://qanswer-core1.univ-st-etienne.fr/api/feedback/%7Bdataset%7D/upload');\n$request->setRequestMethod('POST');\n$request->setHeaders([\n  'accept' => 'multipart/form-data',\n  'content-type' => 'application/json',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
                    }
                ]
            }
        },
        "/api/freeText/check_elasticsearch": {
            "get": {
                "deprecated": false,
                "operationId": "freeTextCheckElasticSearchUsingGET",
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/GeneralResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "summary": "freeTextCheckElasticSearch",
                "tags": [
                    "free-text-general-controller"
                ],
                "x-codeSamples": [
                    {
                        "lang": "Node + Request",
                        "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://qanswer-core1.univ-st-etienne.fr/api/freeText/check_elasticsearch',\n  headers: {'content-type': '*/*', Authorization: 'REPLACE_KEY_VALUE'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
                    },
                    {
                        "lang": "Shell + Curl",
                        "source": "curl --request GET \\\n  --url http://qanswer-core1.univ-st-etienne.fr/api/freeText/check_elasticsearch \\\n  --header 'Authorization: REPLACE_KEY_VALUE' \\\n  --header 'content-type: */*'"
                    },
                    {
                        "lang": "Shell + Httpie",
                        "source": "http GET http://qanswer-core1.univ-st-etienne.fr/api/freeText/check_elasticsearch \\\n  Authorization:REPLACE_KEY_VALUE \\\n  content-type:'*/*'"
                    },
                    {
                        "lang": "Python + Python3",
                        "source": "import http.client\n\nconn = http.client.HTTPConnection(\"qanswer-core1.univ-st-etienne.fr\")\n\nheaders = {\n    'content-type': \"*/*\",\n    'Authorization': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"GET\", \"/api/freeText/check_elasticsearch\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
                    },
                    {
                        "lang": "Php + Curl",
                        "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"http://qanswer-core1.univ-st-etienne.fr/api/freeText/check_elasticsearch\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: REPLACE_KEY_VALUE\",\n    \"content-type: */*\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
                    },
                    {
                        "lang": "php",
                        "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('http://qanswer-core1.univ-st-etienne.fr/api/freeText/check_elasticsearch');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setHeaders([\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
                    },
                    {
                        "lang": "Php + Http2",
                        "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('http://qanswer-core1.univ-st-etienne.fr/api/freeText/check_elasticsearch');\n$request->setRequestMethod('GET');\n$request->setHeaders([\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
                    }
                ]
            }
        },
        "/api/freeText/collection": {
            "delete": {
                "deprecated": false,
                "operationId": "freeTextCollectionDeletionUsingDELETE",
                "parameters": [
                    {
                        "description": "collectionId",
                        "in": "query",
                        "name": "collectionId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/GeneralResponse"
                        }
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "summary": "freeTextCollectionDeletion",
                "tags": [
                    "dataset-controller-free-text"
                ],
                "x-codeSamples": [
                    {
                        "lang": "Node + Request",
                        "source": "const request = require('request');\n\nconst options = {\n  method: 'DELETE',\n  url: 'http://qanswer-core1.univ-st-etienne.fr/api/freeText/collection',\n  qs: {collectionId: 'SOME_STRING_VALUE'},\n  headers: {'content-type': '*/*', Authorization: 'REPLACE_KEY_VALUE'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
                    },
                    {
                        "lang": "Shell + Curl",
                        "source": "curl --request DELETE \\\n  --url 'http://qanswer-core1.univ-st-etienne.fr/api/freeText/collection?collectionId=SOME_STRING_VALUE' \\\n  --header 'Authorization: REPLACE_KEY_VALUE' \\\n  --header 'content-type: */*'"
                    },
                    {
                        "lang": "Shell + Httpie",
                        "source": "http DELETE 'http://qanswer-core1.univ-st-etienne.fr/api/freeText/collection?collectionId=SOME_STRING_VALUE' \\\n  Authorization:REPLACE_KEY_VALUE \\\n  content-type:'*/*'"
                    },
                    {
                        "lang": "Python + Python3",
                        "source": "import http.client\n\nconn = http.client.HTTPConnection(\"qanswer-core1.univ-st-etienne.fr\")\n\nheaders = {\n    'content-type': \"*/*\",\n    'Authorization': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"DELETE\", \"/api/freeText/collection?collectionId=SOME_STRING_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
                    },
                    {
                        "lang": "Php + Curl",
                        "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"http://qanswer-core1.univ-st-etienne.fr/api/freeText/collection?collectionId=SOME_STRING_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"DELETE\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: REPLACE_KEY_VALUE\",\n    \"content-type: */*\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
                    },
                    {
                        "lang": "php",
                        "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('http://qanswer-core1.univ-st-etienne.fr/api/freeText/collection');\n$request->setMethod(HTTP_METH_DELETE);\n\n$request->setQueryData([\n  'collectionId' => 'SOME_STRING_VALUE'\n]);\n\n$request->setHeaders([\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
                    },
                    {
                        "lang": "Php + Http2",
                        "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('http://qanswer-core1.univ-st-etienne.fr/api/freeText/collection');\n$request->setRequestMethod('DELETE');\n$request->setQuery(new http\\QueryString([\n  'collectionId' => 'SOME_STRING_VALUE'\n]));\n\n$request->setHeaders([\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
                    }
                ]
            },
            "get": {
                "deprecated": false,
                "operationId": "freeTextCollectionReadUsingGET",
                "parameters": [
                    {
                        "description": "collectionId",
                        "in": "query",
                        "name": "collectionId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/CollectionGetModel"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "summary": "freeTextCollectionRead",
                "tags": [
                    "dataset-controller-free-text"
                ],
                "x-codeSamples": [
                    {
                        "lang": "Node + Request",
                        "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://qanswer-core1.univ-st-etienne.fr/api/freeText/collection',\n  qs: {collectionId: 'SOME_STRING_VALUE'},\n  headers: {'content-type': '*/*', Authorization: 'REPLACE_KEY_VALUE'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
                    },
                    {
                        "lang": "Shell + Curl",
                        "source": "curl --request GET \\\n  --url 'http://qanswer-core1.univ-st-etienne.fr/api/freeText/collection?collectionId=SOME_STRING_VALUE' \\\n  --header 'Authorization: REPLACE_KEY_VALUE' \\\n  --header 'content-type: */*'"
                    },
                    {
                        "lang": "Shell + Httpie",
                        "source": "http GET 'http://qanswer-core1.univ-st-etienne.fr/api/freeText/collection?collectionId=SOME_STRING_VALUE' \\\n  Authorization:REPLACE_KEY_VALUE \\\n  content-type:'*/*'"
                    },
                    {
                        "lang": "Python + Python3",
                        "source": "import http.client\n\nconn = http.client.HTTPConnection(\"qanswer-core1.univ-st-etienne.fr\")\n\nheaders = {\n    'content-type': \"*/*\",\n    'Authorization': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"GET\", \"/api/freeText/collection?collectionId=SOME_STRING_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
                    },
                    {
                        "lang": "Php + Curl",
                        "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"http://qanswer-core1.univ-st-etienne.fr/api/freeText/collection?collectionId=SOME_STRING_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: REPLACE_KEY_VALUE\",\n    \"content-type: */*\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
                    },
                    {
                        "lang": "php",
                        "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('http://qanswer-core1.univ-st-etienne.fr/api/freeText/collection');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setQueryData([\n  'collectionId' => 'SOME_STRING_VALUE'\n]);\n\n$request->setHeaders([\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
                    },
                    {
                        "lang": "Php + Http2",
                        "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('http://qanswer-core1.univ-st-etienne.fr/api/freeText/collection');\n$request->setRequestMethod('GET');\n$request->setQuery(new http\\QueryString([\n  'collectionId' => 'SOME_STRING_VALUE'\n]));\n\n$request->setHeaders([\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
                    }
                ]
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "deprecated": false,
                "operationId": "freeTextCollectionCreationUsingPOST",
                "parameters": [
                    {
                        "description": "collectionPostModel",
                        "in": "body",
                        "name": "collectionPostModel",
                        "required": true,
                        "schema": {
                            "properties": {
                                "docStride": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "indexName": {
                                    "type": "string"
                                },
                                "language": {
                                    "type": "string"
                                },
                                "maxSeqLen": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "noAnsBoost": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "returnNoAns": {
                                    "type": "boolean"
                                },
                                "splitBy": {
                                    "type": "string"
                                },
                                "splitLength": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "topKReader": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "topKRetriever": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "useFallback": {
                                    "type": "boolean"
                                },
                                "useReader": {
                                    "type": "boolean"
                                },
                                "username": {
                                    "type": "string"
                                },
                                "weightText": {
                                    "type": "number"
                                },
                                "weightTitle": {
                                    "type": "number"
                                }
                            },
                            "required": [
                                "indexName",
                                "username"
                            ],
                            "title": "CollectionPostModel",
                            "type": "object"
                        }
                    }
                ],
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/GeneralResponse"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "summary": "freeTextCollectionCreation",
                "tags": [
                    "dataset-controller-free-text"
                ],
                "x-codeSamples": [
                    {
                        "lang": "Node + Request",
                        "source": "const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'http://qanswer-core1.univ-st-etienne.fr/api/freeText/collection',\n  headers: {\n    accept: 'application/json',\n    'content-type': '*/*',\n    Authorization: 'REPLACE_KEY_VALUE'\n  },\n  body: {\n    docStride: 0,\n    indexName: 'string',\n    language: 'string',\n    maxSeqLen: 0,\n    noAnsBoost: 0,\n    returnNoAns: true,\n    splitBy: 'string',\n    splitLength: 0,\n    topKReader: 0,\n    topKRetriever: 0,\n    useFallback: true,\n    useReader: true,\n    username: 'string',\n    weightText: 0,\n    weightTitle: 0\n  },\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
                    },
                    {
                        "lang": "Shell + Curl",
                        "source": "curl --request POST \\\n  --url http://qanswer-core1.univ-st-etienne.fr/api/freeText/collection \\\n  --header 'Authorization: REPLACE_KEY_VALUE' \\\n  --header 'accept: application/json' \\\n  --header 'content-type: */*' \\\n  --data '{\"docStride\":0,\"indexName\":\"string\",\"language\":\"string\",\"maxSeqLen\":0,\"noAnsBoost\":0,\"returnNoAns\":true,\"splitBy\":\"string\",\"splitLength\":0,\"topKReader\":0,\"topKRetriever\":0,\"useFallback\":true,\"useReader\":true,\"username\":\"string\",\"weightText\":0,\"weightTitle\":0}'"
                    },
                    {
                        "lang": "Shell + Httpie",
                        "source": "echo '{\"docStride\":0,\"indexName\":\"string\",\"language\":\"string\",\"maxSeqLen\":0,\"noAnsBoost\":0,\"returnNoAns\":true,\"splitBy\":\"string\",\"splitLength\":0,\"topKReader\":0,\"topKRetriever\":0,\"useFallback\":true,\"useReader\":true,\"username\":\"string\",\"weightText\":0,\"weightTitle\":0}' |  \\\n  http POST http://qanswer-core1.univ-st-etienne.fr/api/freeText/collection \\\n  Authorization:REPLACE_KEY_VALUE \\\n  accept:application/json \\\n  content-type:'*/*'"
                    },
                    {
                        "lang": "Python + Python3",
                        "source": "import http.client\n\nconn = http.client.HTTPConnection(\"qanswer-core1.univ-st-etienne.fr\")\n\npayload = \"{\\\"docStride\\\":0,\\\"indexName\\\":\\\"string\\\",\\\"language\\\":\\\"string\\\",\\\"maxSeqLen\\\":0,\\\"noAnsBoost\\\":0,\\\"returnNoAns\\\":true,\\\"splitBy\\\":\\\"string\\\",\\\"splitLength\\\":0,\\\"topKReader\\\":0,\\\"topKRetriever\\\":0,\\\"useFallback\\\":true,\\\"useReader\\\":true,\\\"username\\\":\\\"string\\\",\\\"weightText\\\":0,\\\"weightTitle\\\":0}\"\n\nheaders = {\n    'accept': \"application/json\",\n    'content-type': \"*/*\",\n    'Authorization': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"POST\", \"/api/freeText/collection\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
                    },
                    {
                        "lang": "Php + Curl",
                        "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"http://qanswer-core1.univ-st-etienne.fr/api/freeText/collection\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_POSTFIELDS => \"{\\\"docStride\\\":0,\\\"indexName\\\":\\\"string\\\",\\\"language\\\":\\\"string\\\",\\\"maxSeqLen\\\":0,\\\"noAnsBoost\\\":0,\\\"returnNoAns\\\":true,\\\"splitBy\\\":\\\"string\\\",\\\"splitLength\\\":0,\\\"topKReader\\\":0,\\\"topKRetriever\\\":0,\\\"useFallback\\\":true,\\\"useReader\\\":true,\\\"username\\\":\\\"string\\\",\\\"weightText\\\":0,\\\"weightTitle\\\":0}\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: REPLACE_KEY_VALUE\",\n    \"accept: application/json\",\n    \"content-type: */*\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
                    },
                    {
                        "lang": "php",
                        "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('http://qanswer-core1.univ-st-etienne.fr/api/freeText/collection');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setHeaders([\n  'accept' => 'application/json',\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$request->setBody('{\"docStride\":0,\"indexName\":\"string\",\"language\":\"string\",\"maxSeqLen\":0,\"noAnsBoost\":0,\"returnNoAns\":true,\"splitBy\":\"string\",\"splitLength\":0,\"topKReader\":0,\"topKRetriever\":0,\"useFallback\":true,\"useReader\":true,\"username\":\"string\",\"weightText\":0,\"weightTitle\":0}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
                    },
                    {
                        "lang": "Php + Http2",
                        "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$body = new http\\Message\\Body;\n$body->append('{\"docStride\":0,\"indexName\":\"string\",\"language\":\"string\",\"maxSeqLen\":0,\"noAnsBoost\":0,\"returnNoAns\":true,\"splitBy\":\"string\",\"splitLength\":0,\"topKReader\":0,\"topKRetriever\":0,\"useFallback\":true,\"useReader\":true,\"username\":\"string\",\"weightText\":0,\"weightTitle\":0}');\n\n$request->setRequestUrl('http://qanswer-core1.univ-st-etienne.fr/api/freeText/collection');\n$request->setRequestMethod('POST');\n$request->setBody($body);\n\n$request->setHeaders([\n  'accept' => 'application/json',\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
                    }
                ]
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "deprecated": false,
                "operationId": "freeTextCollectionUpdateUsingPUT",
                "parameters": [
                    {
                        "description": "collectionPutModel",
                        "in": "body",
                        "name": "collectionPutModel",
                        "required": true,
                        "schema": {
                            "properties": {
                                "docStride": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "id": {
                                    "type": "string"
                                },
                                "maxSeqLen": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "noAnsBoost": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "returnNoAns": {
                                    "type": "boolean"
                                },
                                "splitBy": {
                                    "type": "string"
                                },
                                "splitLength": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "topKReader": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "topKRetriever": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "useFallback": {
                                    "type": "boolean"
                                },
                                "useReader": {
                                    "type": "boolean"
                                },
                                "weightText": {
                                    "type": "number"
                                },
                                "weightTitle": {
                                    "type": "number"
                                }
                            },
                            "required": [
                                "id"
                            ],
                            "title": "CollectionPutModel",
                            "type": "object"
                        }
                    }
                ],
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/GeneralResponse"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "summary": "freeTextCollectionUpdate",
                "tags": [
                    "dataset-controller-free-text"
                ],
                "x-codeSamples": [
                    {
                        "lang": "Node + Request",
                        "source": "const request = require('request');\n\nconst options = {\n  method: 'PUT',\n  url: 'http://qanswer-core1.univ-st-etienne.fr/api/freeText/collection',\n  headers: {\n    accept: 'application/json',\n    'content-type': '*/*',\n    Authorization: 'REPLACE_KEY_VALUE'\n  },\n  body: {\n    docStride: 0,\n    id: 'string',\n    maxSeqLen: 0,\n    noAnsBoost: 0,\n    returnNoAns: true,\n    splitBy: 'string',\n    splitLength: 0,\n    topKReader: 0,\n    topKRetriever: 0,\n    useFallback: true,\n    useReader: true,\n    weightText: 0,\n    weightTitle: 0\n  },\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
                    },
                    {
                        "lang": "Shell + Curl",
                        "source": "curl --request PUT \\\n  --url http://qanswer-core1.univ-st-etienne.fr/api/freeText/collection \\\n  --header 'Authorization: REPLACE_KEY_VALUE' \\\n  --header 'accept: application/json' \\\n  --header 'content-type: */*' \\\n  --data '{\"docStride\":0,\"id\":\"string\",\"maxSeqLen\":0,\"noAnsBoost\":0,\"returnNoAns\":true,\"splitBy\":\"string\",\"splitLength\":0,\"topKReader\":0,\"topKRetriever\":0,\"useFallback\":true,\"useReader\":true,\"weightText\":0,\"weightTitle\":0}'"
                    },
                    {
                        "lang": "Shell + Httpie",
                        "source": "echo '{\"docStride\":0,\"id\":\"string\",\"maxSeqLen\":0,\"noAnsBoost\":0,\"returnNoAns\":true,\"splitBy\":\"string\",\"splitLength\":0,\"topKReader\":0,\"topKRetriever\":0,\"useFallback\":true,\"useReader\":true,\"weightText\":0,\"weightTitle\":0}' |  \\\n  http PUT http://qanswer-core1.univ-st-etienne.fr/api/freeText/collection \\\n  Authorization:REPLACE_KEY_VALUE \\\n  accept:application/json \\\n  content-type:'*/*'"
                    },
                    {
                        "lang": "Python + Python3",
                        "source": "import http.client\n\nconn = http.client.HTTPConnection(\"qanswer-core1.univ-st-etienne.fr\")\n\npayload = \"{\\\"docStride\\\":0,\\\"id\\\":\\\"string\\\",\\\"maxSeqLen\\\":0,\\\"noAnsBoost\\\":0,\\\"returnNoAns\\\":true,\\\"splitBy\\\":\\\"string\\\",\\\"splitLength\\\":0,\\\"topKReader\\\":0,\\\"topKRetriever\\\":0,\\\"useFallback\\\":true,\\\"useReader\\\":true,\\\"weightText\\\":0,\\\"weightTitle\\\":0}\"\n\nheaders = {\n    'accept': \"application/json\",\n    'content-type': \"*/*\",\n    'Authorization': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"PUT\", \"/api/freeText/collection\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
                    },
                    {
                        "lang": "Php + Curl",
                        "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"http://qanswer-core1.univ-st-etienne.fr/api/freeText/collection\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"PUT\",\n  CURLOPT_POSTFIELDS => \"{\\\"docStride\\\":0,\\\"id\\\":\\\"string\\\",\\\"maxSeqLen\\\":0,\\\"noAnsBoost\\\":0,\\\"returnNoAns\\\":true,\\\"splitBy\\\":\\\"string\\\",\\\"splitLength\\\":0,\\\"topKReader\\\":0,\\\"topKRetriever\\\":0,\\\"useFallback\\\":true,\\\"useReader\\\":true,\\\"weightText\\\":0,\\\"weightTitle\\\":0}\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: REPLACE_KEY_VALUE\",\n    \"accept: application/json\",\n    \"content-type: */*\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
                    },
                    {
                        "lang": "php",
                        "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('http://qanswer-core1.univ-st-etienne.fr/api/freeText/collection');\n$request->setMethod(HTTP_METH_PUT);\n\n$request->setHeaders([\n  'accept' => 'application/json',\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$request->setBody('{\"docStride\":0,\"id\":\"string\",\"maxSeqLen\":0,\"noAnsBoost\":0,\"returnNoAns\":true,\"splitBy\":\"string\",\"splitLength\":0,\"topKReader\":0,\"topKRetriever\":0,\"useFallback\":true,\"useReader\":true,\"weightText\":0,\"weightTitle\":0}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
                    },
                    {
                        "lang": "Php + Http2",
                        "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$body = new http\\Message\\Body;\n$body->append('{\"docStride\":0,\"id\":\"string\",\"maxSeqLen\":0,\"noAnsBoost\":0,\"returnNoAns\":true,\"splitBy\":\"string\",\"splitLength\":0,\"topKReader\":0,\"topKRetriever\":0,\"useFallback\":true,\"useReader\":true,\"weightText\":0,\"weightTitle\":0}');\n\n$request->setRequestUrl('http://qanswer-core1.univ-st-etienne.fr/api/freeText/collection');\n$request->setRequestMethod('PUT');\n$request->setBody($body);\n\n$request->setHeaders([\n  'accept' => 'application/json',\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
                    }
                ]
            }
        },
        "/api/freeText/collection/documents": {
            "delete": {
                "deprecated": false,
                "operationId": "freeTextDocumentDeletionUsingDELETE",
                "parameters": [
                    {
                        "collectionFormat": "multi",
                        "description": "documentIds",
                        "in": "query",
                        "items": {
                            "type": "string"
                        },
                        "name": "documentIds",
                        "required": false,
                        "type": "array"
                    },
                    {
                        "description": "filename",
                        "in": "query",
                        "name": "filename",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "indexName",
                        "in": "query",
                        "name": "indexName",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/GeneralResponse"
                        }
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "summary": "freeTextDocumentDeletion",
                "tags": [
                    "dataset-controller-free-text"
                ],
                "x-codeSamples": [
                    {
                        "lang": "Node + Request",
                        "source": "const request = require('request');\n\nconst options = {\n  method: 'DELETE',\n  url: 'http://qanswer-core1.univ-st-etienne.fr/api/freeText/collection/documents',\n  qs: {\n    documentIds: 'SOME_ARRAY_VALUE',\n    filename: 'SOME_STRING_VALUE',\n    indexName: 'SOME_STRING_VALUE'\n  },\n  headers: {'content-type': '*/*', Authorization: 'REPLACE_KEY_VALUE'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
                    },
                    {
                        "lang": "Shell + Curl",
                        "source": "curl --request DELETE \\\n  --url 'http://qanswer-core1.univ-st-etienne.fr/api/freeText/collection/documents?documentIds=SOME_ARRAY_VALUE&filename=SOME_STRING_VALUE&indexName=SOME_STRING_VALUE' \\\n  --header 'Authorization: REPLACE_KEY_VALUE' \\\n  --header 'content-type: */*'"
                    },
                    {
                        "lang": "Shell + Httpie",
                        "source": "http DELETE 'http://qanswer-core1.univ-st-etienne.fr/api/freeText/collection/documents?documentIds=SOME_ARRAY_VALUE&filename=SOME_STRING_VALUE&indexName=SOME_STRING_VALUE' \\\n  Authorization:REPLACE_KEY_VALUE \\\n  content-type:'*/*'"
                    },
                    {
                        "lang": "Python + Python3",
                        "source": "import http.client\n\nconn = http.client.HTTPConnection(\"qanswer-core1.univ-st-etienne.fr\")\n\nheaders = {\n    'content-type': \"*/*\",\n    'Authorization': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"DELETE\", \"/api/freeText/collection/documents?documentIds=SOME_ARRAY_VALUE&filename=SOME_STRING_VALUE&indexName=SOME_STRING_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
                    },
                    {
                        "lang": "Php + Curl",
                        "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"http://qanswer-core1.univ-st-etienne.fr/api/freeText/collection/documents?documentIds=SOME_ARRAY_VALUE&filename=SOME_STRING_VALUE&indexName=SOME_STRING_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"DELETE\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: REPLACE_KEY_VALUE\",\n    \"content-type: */*\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
                    },
                    {
                        "lang": "php",
                        "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('http://qanswer-core1.univ-st-etienne.fr/api/freeText/collection/documents');\n$request->setMethod(HTTP_METH_DELETE);\n\n$request->setQueryData([\n  'documentIds' => 'SOME_ARRAY_VALUE',\n  'filename' => 'SOME_STRING_VALUE',\n  'indexName' => 'SOME_STRING_VALUE'\n]);\n\n$request->setHeaders([\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
                    },
                    {
                        "lang": "Php + Http2",
                        "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('http://qanswer-core1.univ-st-etienne.fr/api/freeText/collection/documents');\n$request->setRequestMethod('DELETE');\n$request->setQuery(new http\\QueryString([\n  'documentIds' => 'SOME_ARRAY_VALUE',\n  'filename' => 'SOME_STRING_VALUE',\n  'indexName' => 'SOME_STRING_VALUE'\n]));\n\n$request->setHeaders([\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
                    }
                ]
            },
            "get": {
                "deprecated": false,
                "operationId": "freeTextDocumentsListUsingGET",
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ReadDocumentsResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "summary": "freeTextDocumentsList",
                "tags": [
                    "dataset-controller-free-text"
                ],
                "x-codeSamples": [
                    {
                        "lang": "Node + Request",
                        "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://qanswer-core1.univ-st-etienne.fr/api/freeText/collection/documents',\n  headers: {'content-type': '*/*', Authorization: 'REPLACE_KEY_VALUE'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
                    },
                    {
                        "lang": "Shell + Curl",
                        "source": "curl --request GET \\\n  --url http://qanswer-core1.univ-st-etienne.fr/api/freeText/collection/documents \\\n  --header 'Authorization: REPLACE_KEY_VALUE' \\\n  --header 'content-type: */*'"
                    },
                    {
                        "lang": "Shell + Httpie",
                        "source": "http GET http://qanswer-core1.univ-st-etienne.fr/api/freeText/collection/documents \\\n  Authorization:REPLACE_KEY_VALUE \\\n  content-type:'*/*'"
                    },
                    {
                        "lang": "Python + Python3",
                        "source": "import http.client\n\nconn = http.client.HTTPConnection(\"qanswer-core1.univ-st-etienne.fr\")\n\nheaders = {\n    'content-type': \"*/*\",\n    'Authorization': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"GET\", \"/api/freeText/collection/documents\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
                    },
                    {
                        "lang": "Php + Curl",
                        "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"http://qanswer-core1.univ-st-etienne.fr/api/freeText/collection/documents\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: REPLACE_KEY_VALUE\",\n    \"content-type: */*\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
                    },
                    {
                        "lang": "php",
                        "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('http://qanswer-core1.univ-st-etienne.fr/api/freeText/collection/documents');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setHeaders([\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
                    },
                    {
                        "lang": "Php + Http2",
                        "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('http://qanswer-core1.univ-st-etienne.fr/api/freeText/collection/documents');\n$request->setRequestMethod('GET');\n$request->setHeaders([\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
                    }
                ]
            }
        },
        "/api/freeText/collection/list": {
            "get": {
                "deprecated": false,
                "operationId": "freeTextCollectionListUsingGET",
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/CollectionGetModel"
                            },
                            "type": "array"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "summary": "freeTextCollectionList",
                "tags": [
                    "dataset-controller-free-text"
                ],
                "x-codeSamples": [
                    {
                        "lang": "Node + Request",
                        "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://qanswer-core1.univ-st-etienne.fr/api/freeText/collection/list',\n  headers: {'content-type': '*/*', Authorization: 'REPLACE_KEY_VALUE'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
                    },
                    {
                        "lang": "Shell + Curl",
                        "source": "curl --request GET \\\n  --url http://qanswer-core1.univ-st-etienne.fr/api/freeText/collection/list \\\n  --header 'Authorization: REPLACE_KEY_VALUE' \\\n  --header 'content-type: */*'"
                    },
                    {
                        "lang": "Shell + Httpie",
                        "source": "http GET http://qanswer-core1.univ-st-etienne.fr/api/freeText/collection/list \\\n  Authorization:REPLACE_KEY_VALUE \\\n  content-type:'*/*'"
                    },
                    {
                        "lang": "Python + Python3",
                        "source": "import http.client\n\nconn = http.client.HTTPConnection(\"qanswer-core1.univ-st-etienne.fr\")\n\nheaders = {\n    'content-type': \"*/*\",\n    'Authorization': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"GET\", \"/api/freeText/collection/list\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
                    },
                    {
                        "lang": "Php + Curl",
                        "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"http://qanswer-core1.univ-st-etienne.fr/api/freeText/collection/list\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: REPLACE_KEY_VALUE\",\n    \"content-type: */*\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
                    },
                    {
                        "lang": "php",
                        "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('http://qanswer-core1.univ-st-etienne.fr/api/freeText/collection/list');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setHeaders([\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
                    },
                    {
                        "lang": "Php + Http2",
                        "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('http://qanswer-core1.univ-st-etienne.fr/api/freeText/collection/list');\n$request->setRequestMethod('GET');\n$request->setHeaders([\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
                    }
                ]
            }
        },
        "/api/freeText/feedback": {
            "delete": {
                "deprecated": false,
                "operationId": "freeTextFeedbackDeletionUsingDELETE",
                "parameters": [
                    {
                        "collectionFormat": "multi",
                        "description": "feedbackIds",
                        "in": "query",
                        "items": {
                            "format": "int64",
                            "type": "integer"
                        },
                        "name": "feedbackIds",
                        "required": true,
                        "type": "array"
                    }
                ],
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/FeedbackMessageResponse"
                        }
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "summary": "freeTextFeedbackDeletion",
                "tags": [
                    "free-text-feedback-controller"
                ],
                "x-codeSamples": [
                    {
                        "lang": "Node + Request",
                        "source": "const request = require('request');\n\nconst options = {\n  method: 'DELETE',\n  url: 'http://qanswer-core1.univ-st-etienne.fr/api/freeText/feedback',\n  qs: {feedbackIds: 'SOME_ARRAY_VALUE'},\n  headers: {'content-type': '*/*', Authorization: 'REPLACE_KEY_VALUE'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
                    },
                    {
                        "lang": "Shell + Curl",
                        "source": "curl --request DELETE \\\n  --url 'http://qanswer-core1.univ-st-etienne.fr/api/freeText/feedback?feedbackIds=SOME_ARRAY_VALUE' \\\n  --header 'Authorization: REPLACE_KEY_VALUE' \\\n  --header 'content-type: */*'"
                    },
                    {
                        "lang": "Shell + Httpie",
                        "source": "http DELETE 'http://qanswer-core1.univ-st-etienne.fr/api/freeText/feedback?feedbackIds=SOME_ARRAY_VALUE' \\\n  Authorization:REPLACE_KEY_VALUE \\\n  content-type:'*/*'"
                    },
                    {
                        "lang": "Python + Python3",
                        "source": "import http.client\n\nconn = http.client.HTTPConnection(\"qanswer-core1.univ-st-etienne.fr\")\n\nheaders = {\n    'content-type': \"*/*\",\n    'Authorization': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"DELETE\", \"/api/freeText/feedback?feedbackIds=SOME_ARRAY_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
                    },
                    {
                        "lang": "Php + Curl",
                        "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"http://qanswer-core1.univ-st-etienne.fr/api/freeText/feedback?feedbackIds=SOME_ARRAY_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"DELETE\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: REPLACE_KEY_VALUE\",\n    \"content-type: */*\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
                    },
                    {
                        "lang": "php",
                        "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('http://qanswer-core1.univ-st-etienne.fr/api/freeText/feedback');\n$request->setMethod(HTTP_METH_DELETE);\n\n$request->setQueryData([\n  'feedbackIds' => 'SOME_ARRAY_VALUE'\n]);\n\n$request->setHeaders([\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
                    },
                    {
                        "lang": "Php + Http2",
                        "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('http://qanswer-core1.univ-st-etienne.fr/api/freeText/feedback');\n$request->setRequestMethod('DELETE');\n$request->setQuery(new http\\QueryString([\n  'feedbackIds' => 'SOME_ARRAY_VALUE'\n]));\n\n$request->setHeaders([\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
                    }
                ]
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "deprecated": false,
                "operationId": "freeTextFeedbackCreationUsingPOST",
                "parameters": [
                    {
                        "description": "freeTextFeedback",
                        "in": "body",
                        "name": "freeTextFeedback",
                        "required": true,
                        "schema": {
                            "properties": {
                                "answerCorrect": {
                                    "type": "boolean"
                                },
                                "answerStart": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "answerText": {
                                    "type": "string"
                                },
                                "confidence": {
                                    "type": "number"
                                },
                                "context": {
                                    "type": "string"
                                },
                                "documentCorrect": {
                                    "type": "boolean"
                                },
                                "feedbackType": {
                                    "enum": [
                                        "qa",
                                        "annotation"
                                    ],
                                    "example": "qa",
                                    "type": "string"
                                },
                                "indexId": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "question": {
                                    "type": "string"
                                }
                            },
                            "required": [
                                "answerCorrect",
                                "answerStart",
                                "answerText",
                                "confidence",
                                "context",
                                "documentCorrect",
                                "feedbackType",
                                "indexId",
                                "question"
                            ],
                            "title": "FeedbackPostModel",
                            "type": "object"
                        }
                    }
                ],
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/FeedbackMessageResponse"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "summary": "freeTextFeedbackCreation",
                "tags": [
                    "free-text-feedback-controller"
                ],
                "x-codeSamples": [
                    {
                        "lang": "Node + Request",
                        "source": "const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'http://qanswer-core1.univ-st-etienne.fr/api/freeText/feedback',\n  headers: {\n    accept: 'application/json',\n    'content-type': '*/*',\n    Authorization: 'REPLACE_KEY_VALUE'\n  },\n  body: {\n    answerCorrect: true,\n    answerStart: 0,\n    answerText: 'string',\n    confidence: 0,\n    context: 'string',\n    documentCorrect: true,\n    feedbackType: 'qa',\n    indexId: 0,\n    question: 'string'\n  },\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
                    },
                    {
                        "lang": "Shell + Curl",
                        "source": "curl --request POST \\\n  --url http://qanswer-core1.univ-st-etienne.fr/api/freeText/feedback \\\n  --header 'Authorization: REPLACE_KEY_VALUE' \\\n  --header 'accept: application/json' \\\n  --header 'content-type: */*' \\\n  --data '{\"answerCorrect\":true,\"answerStart\":0,\"answerText\":\"string\",\"confidence\":0,\"context\":\"string\",\"documentCorrect\":true,\"feedbackType\":\"qa\",\"indexId\":0,\"question\":\"string\"}'"
                    },
                    {
                        "lang": "Shell + Httpie",
                        "source": "echo '{\"answerCorrect\":true,\"answerStart\":0,\"answerText\":\"string\",\"confidence\":0,\"context\":\"string\",\"documentCorrect\":true,\"feedbackType\":\"qa\",\"indexId\":0,\"question\":\"string\"}' |  \\\n  http POST http://qanswer-core1.univ-st-etienne.fr/api/freeText/feedback \\\n  Authorization:REPLACE_KEY_VALUE \\\n  accept:application/json \\\n  content-type:'*/*'"
                    },
                    {
                        "lang": "Python + Python3",
                        "source": "import http.client\n\nconn = http.client.HTTPConnection(\"qanswer-core1.univ-st-etienne.fr\")\n\npayload = \"{\\\"answerCorrect\\\":true,\\\"answerStart\\\":0,\\\"answerText\\\":\\\"string\\\",\\\"confidence\\\":0,\\\"context\\\":\\\"string\\\",\\\"documentCorrect\\\":true,\\\"feedbackType\\\":\\\"qa\\\",\\\"indexId\\\":0,\\\"question\\\":\\\"string\\\"}\"\n\nheaders = {\n    'accept': \"application/json\",\n    'content-type': \"*/*\",\n    'Authorization': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"POST\", \"/api/freeText/feedback\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
                    },
                    {
                        "lang": "Php + Curl",
                        "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"http://qanswer-core1.univ-st-etienne.fr/api/freeText/feedback\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_POSTFIELDS => \"{\\\"answerCorrect\\\":true,\\\"answerStart\\\":0,\\\"answerText\\\":\\\"string\\\",\\\"confidence\\\":0,\\\"context\\\":\\\"string\\\",\\\"documentCorrect\\\":true,\\\"feedbackType\\\":\\\"qa\\\",\\\"indexId\\\":0,\\\"question\\\":\\\"string\\\"}\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: REPLACE_KEY_VALUE\",\n    \"accept: application/json\",\n    \"content-type: */*\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
                    },
                    {
                        "lang": "php",
                        "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('http://qanswer-core1.univ-st-etienne.fr/api/freeText/feedback');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setHeaders([\n  'accept' => 'application/json',\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$request->setBody('{\"answerCorrect\":true,\"answerStart\":0,\"answerText\":\"string\",\"confidence\":0,\"context\":\"string\",\"documentCorrect\":true,\"feedbackType\":\"qa\",\"indexId\":0,\"question\":\"string\"}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
                    },
                    {
                        "lang": "Php + Http2",
                        "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$body = new http\\Message\\Body;\n$body->append('{\"answerCorrect\":true,\"answerStart\":0,\"answerText\":\"string\",\"confidence\":0,\"context\":\"string\",\"documentCorrect\":true,\"feedbackType\":\"qa\",\"indexId\":0,\"question\":\"string\"}');\n\n$request->setRequestUrl('http://qanswer-core1.univ-st-etienne.fr/api/freeText/feedback');\n$request->setRequestMethod('POST');\n$request->setBody($body);\n\n$request->setHeaders([\n  'accept' => 'application/json',\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
                    }
                ]
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "deprecated": false,
                "operationId": "freeTextFeedbackUpdateUsingPUT",
                "parameters": [
                    {
                        "description": "freeTextFeedbackUpdate",
                        "in": "body",
                        "name": "freeTextFeedbackUpdate",
                        "required": true,
                        "schema": {
                            "properties": {
                                "answerCorrect": {
                                    "type": "boolean"
                                },
                                "answerStart": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "answerText": {
                                    "type": "string"
                                },
                                "confidence": {
                                    "type": "number"
                                },
                                "context": {
                                    "type": "string"
                                },
                                "currentModelRight": {
                                    "type": "boolean"
                                },
                                "id": {
                                    "format": "int32",
                                    "type": "integer"
                                }
                            },
                            "required": [
                                "confidence",
                                "currentModelRight",
                                "id"
                            ],
                            "title": "FeedbackPutModel",
                            "type": "object"
                        }
                    }
                ],
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/FeedbackMessageResponse"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "summary": "freeTextFeedbackUpdate",
                "tags": [
                    "free-text-feedback-controller"
                ],
                "x-codeSamples": [
                    {
                        "lang": "Node + Request",
                        "source": "const request = require('request');\n\nconst options = {\n  method: 'PUT',\n  url: 'http://qanswer-core1.univ-st-etienne.fr/api/freeText/feedback',\n  headers: {\n    accept: 'application/json',\n    'content-type': '*/*',\n    Authorization: 'REPLACE_KEY_VALUE'\n  },\n  body: {\n    answerCorrect: true,\n    answerStart: 0,\n    answerText: 'string',\n    confidence: 0,\n    context: 'string',\n    currentModelRight: true,\n    id: 0\n  },\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
                    },
                    {
                        "lang": "Shell + Curl",
                        "source": "curl --request PUT \\\n  --url http://qanswer-core1.univ-st-etienne.fr/api/freeText/feedback \\\n  --header 'Authorization: REPLACE_KEY_VALUE' \\\n  --header 'accept: application/json' \\\n  --header 'content-type: */*' \\\n  --data '{\"answerCorrect\":true,\"answerStart\":0,\"answerText\":\"string\",\"confidence\":0,\"context\":\"string\",\"currentModelRight\":true,\"id\":0}'"
                    },
                    {
                        "lang": "Shell + Httpie",
                        "source": "echo '{\"answerCorrect\":true,\"answerStart\":0,\"answerText\":\"string\",\"confidence\":0,\"context\":\"string\",\"currentModelRight\":true,\"id\":0}' |  \\\n  http PUT http://qanswer-core1.univ-st-etienne.fr/api/freeText/feedback \\\n  Authorization:REPLACE_KEY_VALUE \\\n  accept:application/json \\\n  content-type:'*/*'"
                    },
                    {
                        "lang": "Python + Python3",
                        "source": "import http.client\n\nconn = http.client.HTTPConnection(\"qanswer-core1.univ-st-etienne.fr\")\n\npayload = \"{\\\"answerCorrect\\\":true,\\\"answerStart\\\":0,\\\"answerText\\\":\\\"string\\\",\\\"confidence\\\":0,\\\"context\\\":\\\"string\\\",\\\"currentModelRight\\\":true,\\\"id\\\":0}\"\n\nheaders = {\n    'accept': \"application/json\",\n    'content-type': \"*/*\",\n    'Authorization': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"PUT\", \"/api/freeText/feedback\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
                    },
                    {
                        "lang": "Php + Curl",
                        "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"http://qanswer-core1.univ-st-etienne.fr/api/freeText/feedback\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"PUT\",\n  CURLOPT_POSTFIELDS => \"{\\\"answerCorrect\\\":true,\\\"answerStart\\\":0,\\\"answerText\\\":\\\"string\\\",\\\"confidence\\\":0,\\\"context\\\":\\\"string\\\",\\\"currentModelRight\\\":true,\\\"id\\\":0}\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: REPLACE_KEY_VALUE\",\n    \"accept: application/json\",\n    \"content-type: */*\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
                    },
                    {
                        "lang": "php",
                        "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('http://qanswer-core1.univ-st-etienne.fr/api/freeText/feedback');\n$request->setMethod(HTTP_METH_PUT);\n\n$request->setHeaders([\n  'accept' => 'application/json',\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$request->setBody('{\"answerCorrect\":true,\"answerStart\":0,\"answerText\":\"string\",\"confidence\":0,\"context\":\"string\",\"currentModelRight\":true,\"id\":0}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
                    },
                    {
                        "lang": "Php + Http2",
                        "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$body = new http\\Message\\Body;\n$body->append('{\"answerCorrect\":true,\"answerStart\":0,\"answerText\":\"string\",\"confidence\":0,\"context\":\"string\",\"currentModelRight\":true,\"id\":0}');\n\n$request->setRequestUrl('http://qanswer-core1.univ-st-etienne.fr/api/freeText/feedback');\n$request->setRequestMethod('PUT');\n$request->setBody($body);\n\n$request->setHeaders([\n  'accept' => 'application/json',\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
                    }
                ]
            }
        },
        "/api/freeText/feedback/list": {
            "get": {
                "deprecated": false,
                "operationId": "freeTextFeedbackListUsingGET",
                "parameters": [
                    {
                        "description": "indexId",
                        "format": "int64",
                        "in": "query",
                        "name": "indexId",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/FeedbackGetModel"
                            },
                            "type": "array"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "summary": "freeTextFeedbackList",
                "tags": [
                    "free-text-feedback-controller"
                ],
                "x-codeSamples": [
                    {
                        "lang": "Node + Request",
                        "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://qanswer-core1.univ-st-etienne.fr/api/freeText/feedback/list',\n  qs: {indexId: 'SOME_INTEGER_VALUE'},\n  headers: {'content-type': '*/*', Authorization: 'REPLACE_KEY_VALUE'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
                    },
                    {
                        "lang": "Shell + Curl",
                        "source": "curl --request GET \\\n  --url 'http://qanswer-core1.univ-st-etienne.fr/api/freeText/feedback/list?indexId=SOME_INTEGER_VALUE' \\\n  --header 'Authorization: REPLACE_KEY_VALUE' \\\n  --header 'content-type: */*'"
                    },
                    {
                        "lang": "Shell + Httpie",
                        "source": "http GET 'http://qanswer-core1.univ-st-etienne.fr/api/freeText/feedback/list?indexId=SOME_INTEGER_VALUE' \\\n  Authorization:REPLACE_KEY_VALUE \\\n  content-type:'*/*'"
                    },
                    {
                        "lang": "Python + Python3",
                        "source": "import http.client\n\nconn = http.client.HTTPConnection(\"qanswer-core1.univ-st-etienne.fr\")\n\nheaders = {\n    'content-type': \"*/*\",\n    'Authorization': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"GET\", \"/api/freeText/feedback/list?indexId=SOME_INTEGER_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
                    },
                    {
                        "lang": "Php + Curl",
                        "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"http://qanswer-core1.univ-st-etienne.fr/api/freeText/feedback/list?indexId=SOME_INTEGER_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: REPLACE_KEY_VALUE\",\n    \"content-type: */*\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
                    },
                    {
                        "lang": "php",
                        "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('http://qanswer-core1.univ-st-etienne.fr/api/freeText/feedback/list');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setQueryData([\n  'indexId' => 'SOME_INTEGER_VALUE'\n]);\n\n$request->setHeaders([\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
                    },
                    {
                        "lang": "Php + Http2",
                        "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('http://qanswer-core1.univ-st-etienne.fr/api/freeText/feedback/list');\n$request->setRequestMethod('GET');\n$request->setQuery(new http\\QueryString([\n  'indexId' => 'SOME_INTEGER_VALUE'\n]));\n\n$request->setHeaders([\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
                    }
                ]
            }
        },
        "/api/freeText/file/convert": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "deprecated": false,
                "operationId": "freeTextFileConvertUsingPOST",
                "parameters": [
                    {
                        "description": "indexName",
                        "in": "query",
                        "name": "indexName",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "sessionId",
                        "in": "query",
                        "name": "sessionId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/JobSubmissionResponse"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "summary": "freeTextFileConvert",
                "tags": [
                    "free-text-file-controller"
                ],
                "x-codeSamples": [
                    {
                        "lang": "Node + Request",
                        "source": "const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'http://qanswer-core1.univ-st-etienne.fr/api/freeText/file/convert',\n  qs: {indexName: 'SOME_STRING_VALUE', sessionId: 'SOME_STRING_VALUE'},\n  headers: {\n    accept: 'application/json',\n    'content-type': '*/*',\n    Authorization: 'REPLACE_KEY_VALUE'\n  }\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
                    },
                    {
                        "lang": "Shell + Curl",
                        "source": "curl --request POST \\\n  --url 'http://qanswer-core1.univ-st-etienne.fr/api/freeText/file/convert?indexName=SOME_STRING_VALUE&sessionId=SOME_STRING_VALUE' \\\n  --header 'Authorization: REPLACE_KEY_VALUE' \\\n  --header 'accept: application/json' \\\n  --header 'content-type: */*'"
                    },
                    {
                        "lang": "Shell + Httpie",
                        "source": "http POST 'http://qanswer-core1.univ-st-etienne.fr/api/freeText/file/convert?indexName=SOME_STRING_VALUE&sessionId=SOME_STRING_VALUE' \\\n  Authorization:REPLACE_KEY_VALUE \\\n  accept:application/json \\\n  content-type:'*/*'"
                    },
                    {
                        "lang": "Python + Python3",
                        "source": "import http.client\n\nconn = http.client.HTTPConnection(\"qanswer-core1.univ-st-etienne.fr\")\n\nheaders = {\n    'accept': \"application/json\",\n    'content-type': \"*/*\",\n    'Authorization': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"POST\", \"/api/freeText/file/convert?indexName=SOME_STRING_VALUE&sessionId=SOME_STRING_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
                    },
                    {
                        "lang": "Php + Curl",
                        "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"http://qanswer-core1.univ-st-etienne.fr/api/freeText/file/convert?indexName=SOME_STRING_VALUE&sessionId=SOME_STRING_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: REPLACE_KEY_VALUE\",\n    \"accept: application/json\",\n    \"content-type: */*\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
                    },
                    {
                        "lang": "php",
                        "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('http://qanswer-core1.univ-st-etienne.fr/api/freeText/file/convert');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setQueryData([\n  'indexName' => 'SOME_STRING_VALUE',\n  'sessionId' => 'SOME_STRING_VALUE'\n]);\n\n$request->setHeaders([\n  'accept' => 'application/json',\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
                    },
                    {
                        "lang": "Php + Http2",
                        "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('http://qanswer-core1.univ-st-etienne.fr/api/freeText/file/convert');\n$request->setRequestMethod('POST');\n$request->setQuery(new http\\QueryString([\n  'indexName' => 'SOME_STRING_VALUE',\n  'sessionId' => 'SOME_STRING_VALUE'\n]));\n\n$request->setHeaders([\n  'accept' => 'application/json',\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
                    }
                ]
            }
        },
        "/api/freeText/file/upload": {
            "post": {
                "consumes": [
                    "multipart/form-data"
                ],
                "deprecated": false,
                "operationId": "freeTextFileUploadUsingPOST",
                "parameters": [
                    {
                        "description": "file",
                        "in": "formData",
                        "name": "file",
                        "required": true,
                        "type": "file"
                    },
                    {
                        "description": "sessionId",
                        "in": "query",
                        "name": "sessionId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/GeneralResponse"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "summary": "freeTextFileUpload",
                "tags": [
                    "free-text-file-controller"
                ],
                "x-codeSamples": [
                    {
                        "lang": "Node + Request",
                        "source": "const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'http://qanswer-core1.univ-st-etienne.fr/api/freeText/file/upload',\n  qs: {sessionId: 'SOME_STRING_VALUE'},\n  headers: {\n    accept: 'multipart/form-data',\n    'content-type': '*/*',\n    Authorization: 'REPLACE_KEY_VALUE'\n  }\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
                    },
                    {
                        "lang": "Shell + Curl",
                        "source": "curl --request POST \\\n  --url 'http://qanswer-core1.univ-st-etienne.fr/api/freeText/file/upload?sessionId=SOME_STRING_VALUE' \\\n  --header 'Authorization: REPLACE_KEY_VALUE' \\\n  --header 'accept: multipart/form-data' \\\n  --header 'content-type: */*'"
                    },
                    {
                        "lang": "Shell + Httpie",
                        "source": "http POST 'http://qanswer-core1.univ-st-etienne.fr/api/freeText/file/upload?sessionId=SOME_STRING_VALUE' \\\n  Authorization:REPLACE_KEY_VALUE \\\n  accept:multipart/form-data \\\n  content-type:'*/*'"
                    },
                    {
                        "lang": "Python + Python3",
                        "source": "import http.client\n\nconn = http.client.HTTPConnection(\"qanswer-core1.univ-st-etienne.fr\")\n\nheaders = {\n    'accept': \"multipart/form-data\",\n    'content-type': \"*/*\",\n    'Authorization': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"POST\", \"/api/freeText/file/upload?sessionId=SOME_STRING_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
                    },
                    {
                        "lang": "Php + Curl",
                        "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"http://qanswer-core1.univ-st-etienne.fr/api/freeText/file/upload?sessionId=SOME_STRING_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: REPLACE_KEY_VALUE\",\n    \"accept: multipart/form-data\",\n    \"content-type: */*\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
                    },
                    {
                        "lang": "php",
                        "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('http://qanswer-core1.univ-st-etienne.fr/api/freeText/file/upload');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setQueryData([\n  'sessionId' => 'SOME_STRING_VALUE'\n]);\n\n$request->setHeaders([\n  'accept' => 'multipart/form-data',\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
                    },
                    {
                        "lang": "Php + Http2",
                        "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('http://qanswer-core1.univ-st-etienne.fr/api/freeText/file/upload');\n$request->setRequestMethod('POST');\n$request->setQuery(new http\\QueryString([\n  'sessionId' => 'SOME_STRING_VALUE'\n]));\n\n$request->setHeaders([\n  'accept' => 'multipart/form-data',\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
                    }
                ]
            }
        },
        "/api/freeText/job": {
            "put": {
                "consumes": [
                    "application/json"
                ],
                "deprecated": false,
                "operationId": "freeTextJobUpdateUsingPUT",
                "parameters": [
                    {
                        "description": "jobId",
                        "in": "query",
                        "name": "jobId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "jobStatus",
                        "in": "query",
                        "name": "jobStatus",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "jobType",
                        "in": "query",
                        "name": "jobType",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "key",
                        "in": "query",
                        "name": "key",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "username",
                        "in": "query",
                        "name": "username",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "summary": "freeTextJobUpdate",
                "tags": [
                    "free-text-job-controller"
                ],
                "x-codeSamples": [
                    {
                        "lang": "Node + Request",
                        "source": "const request = require('request');\n\nconst options = {\n  method: 'PUT',\n  url: 'http://qanswer-core1.univ-st-etienne.fr/api/freeText/job',\n  qs: {\n    jobId: 'SOME_STRING_VALUE',\n    jobStatus: 'SOME_STRING_VALUE',\n    jobType: 'SOME_STRING_VALUE',\n    key: 'SOME_STRING_VALUE',\n    username: 'SOME_STRING_VALUE'\n  },\n  headers: {\n    accept: 'application/json',\n    'content-type': '*/*',\n    Authorization: 'REPLACE_KEY_VALUE'\n  }\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
                    },
                    {
                        "lang": "Shell + Curl",
                        "source": "curl --request PUT \\\n  --url 'http://qanswer-core1.univ-st-etienne.fr/api/freeText/job?jobId=SOME_STRING_VALUE&jobStatus=SOME_STRING_VALUE&jobType=SOME_STRING_VALUE&key=SOME_STRING_VALUE&username=SOME_STRING_VALUE' \\\n  --header 'Authorization: REPLACE_KEY_VALUE' \\\n  --header 'accept: application/json' \\\n  --header 'content-type: */*'"
                    },
                    {
                        "lang": "Shell + Httpie",
                        "source": "http PUT 'http://qanswer-core1.univ-st-etienne.fr/api/freeText/job?jobId=SOME_STRING_VALUE&jobStatus=SOME_STRING_VALUE&jobType=SOME_STRING_VALUE&key=SOME_STRING_VALUE&username=SOME_STRING_VALUE' \\\n  Authorization:REPLACE_KEY_VALUE \\\n  accept:application/json \\\n  content-type:'*/*'"
                    },
                    {
                        "lang": "Python + Python3",
                        "source": "import http.client\n\nconn = http.client.HTTPConnection(\"qanswer-core1.univ-st-etienne.fr\")\n\nheaders = {\n    'accept': \"application/json\",\n    'content-type': \"*/*\",\n    'Authorization': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"PUT\", \"/api/freeText/job?jobId=SOME_STRING_VALUE&jobStatus=SOME_STRING_VALUE&jobType=SOME_STRING_VALUE&key=SOME_STRING_VALUE&username=SOME_STRING_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
                    },
                    {
                        "lang": "Php + Curl",
                        "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"http://qanswer-core1.univ-st-etienne.fr/api/freeText/job?jobId=SOME_STRING_VALUE&jobStatus=SOME_STRING_VALUE&jobType=SOME_STRING_VALUE&key=SOME_STRING_VALUE&username=SOME_STRING_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"PUT\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: REPLACE_KEY_VALUE\",\n    \"accept: application/json\",\n    \"content-type: */*\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
                    },
                    {
                        "lang": "php",
                        "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('http://qanswer-core1.univ-st-etienne.fr/api/freeText/job');\n$request->setMethod(HTTP_METH_PUT);\n\n$request->setQueryData([\n  'jobId' => 'SOME_STRING_VALUE',\n  'jobStatus' => 'SOME_STRING_VALUE',\n  'jobType' => 'SOME_STRING_VALUE',\n  'key' => 'SOME_STRING_VALUE',\n  'username' => 'SOME_STRING_VALUE'\n]);\n\n$request->setHeaders([\n  'accept' => 'application/json',\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
                    },
                    {
                        "lang": "Php + Http2",
                        "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('http://qanswer-core1.univ-st-etienne.fr/api/freeText/job');\n$request->setRequestMethod('PUT');\n$request->setQuery(new http\\QueryString([\n  'jobId' => 'SOME_STRING_VALUE',\n  'jobStatus' => 'SOME_STRING_VALUE',\n  'jobType' => 'SOME_STRING_VALUE',\n  'key' => 'SOME_STRING_VALUE',\n  'username' => 'SOME_STRING_VALUE'\n]));\n\n$request->setHeaders([\n  'accept' => 'application/json',\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
                    }
                ]
            }
        },
        "/api/freeText/job/list": {
            "get": {
                "deprecated": false,
                "operationId": "freeTextJobListUsingGET",
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/JobGetModel"
                            },
                            "type": "array"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "summary": "freeTextJobList",
                "tags": [
                    "free-text-job-controller"
                ],
                "x-codeSamples": [
                    {
                        "lang": "Node + Request",
                        "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://qanswer-core1.univ-st-etienne.fr/api/freeText/job/list',\n  headers: {'content-type': '*/*', Authorization: 'REPLACE_KEY_VALUE'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
                    },
                    {
                        "lang": "Shell + Curl",
                        "source": "curl --request GET \\\n  --url http://qanswer-core1.univ-st-etienne.fr/api/freeText/job/list \\\n  --header 'Authorization: REPLACE_KEY_VALUE' \\\n  --header 'content-type: */*'"
                    },
                    {
                        "lang": "Shell + Httpie",
                        "source": "http GET http://qanswer-core1.univ-st-etienne.fr/api/freeText/job/list \\\n  Authorization:REPLACE_KEY_VALUE \\\n  content-type:'*/*'"
                    },
                    {
                        "lang": "Python + Python3",
                        "source": "import http.client\n\nconn = http.client.HTTPConnection(\"qanswer-core1.univ-st-etienne.fr\")\n\nheaders = {\n    'content-type': \"*/*\",\n    'Authorization': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"GET\", \"/api/freeText/job/list\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
                    },
                    {
                        "lang": "Php + Curl",
                        "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"http://qanswer-core1.univ-st-etienne.fr/api/freeText/job/list\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: REPLACE_KEY_VALUE\",\n    \"content-type: */*\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
                    },
                    {
                        "lang": "php",
                        "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('http://qanswer-core1.univ-st-etienne.fr/api/freeText/job/list');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setHeaders([\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
                    },
                    {
                        "lang": "Php + Http2",
                        "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('http://qanswer-core1.univ-st-etienne.fr/api/freeText/job/list');\n$request->setRequestMethod('GET');\n$request->setHeaders([\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
                    }
                ]
            }
        },
        "/api/freeText/predict": {
            "get": {
                "deprecated": false,
                "operationId": "freeTextQAPredictUsingGET",
                "parameters": [
                    {
                        "description": "dataset",
                        "in": "query",
                        "name": "dataset",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "question",
                        "in": "query",
                        "name": "question",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "user",
                        "in": "query",
                        "name": "user",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/PredictResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "summary": "freeTextQAPredict",
                "tags": [
                    "qa-controller-free-text"
                ],
                "x-codeSamples": [
                    {
                        "lang": "Node + Request",
                        "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://qanswer-core1.univ-st-etienne.fr/api/freeText/predict',\n  qs: {\n    dataset: 'SOME_STRING_VALUE',\n    question: 'SOME_STRING_VALUE',\n    user: 'SOME_STRING_VALUE'\n  },\n  headers: {'content-type': '*/*', Authorization: 'REPLACE_KEY_VALUE'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
                    },
                    {
                        "lang": "Shell + Curl",
                        "source": "curl --request GET \\\n  --url 'http://qanswer-core1.univ-st-etienne.fr/api/freeText/predict?dataset=SOME_STRING_VALUE&question=SOME_STRING_VALUE&user=SOME_STRING_VALUE' \\\n  --header 'Authorization: REPLACE_KEY_VALUE' \\\n  --header 'content-type: */*'"
                    },
                    {
                        "lang": "Shell + Httpie",
                        "source": "http GET 'http://qanswer-core1.univ-st-etienne.fr/api/freeText/predict?dataset=SOME_STRING_VALUE&question=SOME_STRING_VALUE&user=SOME_STRING_VALUE' \\\n  Authorization:REPLACE_KEY_VALUE \\\n  content-type:'*/*'"
                    },
                    {
                        "lang": "Python + Python3",
                        "source": "import http.client\n\nconn = http.client.HTTPConnection(\"qanswer-core1.univ-st-etienne.fr\")\n\nheaders = {\n    'content-type': \"*/*\",\n    'Authorization': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"GET\", \"/api/freeText/predict?dataset=SOME_STRING_VALUE&question=SOME_STRING_VALUE&user=SOME_STRING_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
                    },
                    {
                        "lang": "Php + Curl",
                        "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"http://qanswer-core1.univ-st-etienne.fr/api/freeText/predict?dataset=SOME_STRING_VALUE&question=SOME_STRING_VALUE&user=SOME_STRING_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: REPLACE_KEY_VALUE\",\n    \"content-type: */*\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
                    },
                    {
                        "lang": "php",
                        "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('http://qanswer-core1.univ-st-etienne.fr/api/freeText/predict');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setQueryData([\n  'dataset' => 'SOME_STRING_VALUE',\n  'question' => 'SOME_STRING_VALUE',\n  'user' => 'SOME_STRING_VALUE'\n]);\n\n$request->setHeaders([\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
                    },
                    {
                        "lang": "Php + Http2",
                        "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('http://qanswer-core1.univ-st-etienne.fr/api/freeText/predict');\n$request->setRequestMethod('GET');\n$request->setQuery(new http\\QueryString([\n  'dataset' => 'SOME_STRING_VALUE',\n  'question' => 'SOME_STRING_VALUE',\n  'user' => 'SOME_STRING_VALUE'\n]));\n\n$request->setHeaders([\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
                    }
                ]
            }
        },
        "/api/freeText/predict_on_text": {
            "get": {
                "deprecated": false,
                "operationId": "freeTextQAPredictOnTextUsingGET",
                "parameters": [
                    {
                        "description": "context",
                        "in": "query",
                        "name": "context",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "language",
                        "in": "query",
                        "name": "language",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "question",
                        "in": "query",
                        "name": "question",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/PredictResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "summary": "freeTextQAPredictOnText",
                "tags": [
                    "qa-controller-free-text"
                ],
                "x-codeSamples": [
                    {
                        "lang": "Node + Request",
                        "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://qanswer-core1.univ-st-etienne.fr/api/freeText/predict_on_text',\n  qs: {\n    context: 'SOME_STRING_VALUE',\n    language: 'SOME_STRING_VALUE',\n    question: 'SOME_STRING_VALUE'\n  },\n  headers: {'content-type': '*/*', Authorization: 'REPLACE_KEY_VALUE'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
                    },
                    {
                        "lang": "Shell + Curl",
                        "source": "curl --request GET \\\n  --url 'http://qanswer-core1.univ-st-etienne.fr/api/freeText/predict_on_text?context=SOME_STRING_VALUE&language=SOME_STRING_VALUE&question=SOME_STRING_VALUE' \\\n  --header 'Authorization: REPLACE_KEY_VALUE' \\\n  --header 'content-type: */*'"
                    },
                    {
                        "lang": "Shell + Httpie",
                        "source": "http GET 'http://qanswer-core1.univ-st-etienne.fr/api/freeText/predict_on_text?context=SOME_STRING_VALUE&language=SOME_STRING_VALUE&question=SOME_STRING_VALUE' \\\n  Authorization:REPLACE_KEY_VALUE \\\n  content-type:'*/*'"
                    },
                    {
                        "lang": "Python + Python3",
                        "source": "import http.client\n\nconn = http.client.HTTPConnection(\"qanswer-core1.univ-st-etienne.fr\")\n\nheaders = {\n    'content-type': \"*/*\",\n    'Authorization': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"GET\", \"/api/freeText/predict_on_text?context=SOME_STRING_VALUE&language=SOME_STRING_VALUE&question=SOME_STRING_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
                    },
                    {
                        "lang": "Php + Curl",
                        "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"http://qanswer-core1.univ-st-etienne.fr/api/freeText/predict_on_text?context=SOME_STRING_VALUE&language=SOME_STRING_VALUE&question=SOME_STRING_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: REPLACE_KEY_VALUE\",\n    \"content-type: */*\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
                    },
                    {
                        "lang": "php",
                        "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('http://qanswer-core1.univ-st-etienne.fr/api/freeText/predict_on_text');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setQueryData([\n  'context' => 'SOME_STRING_VALUE',\n  'language' => 'SOME_STRING_VALUE',\n  'question' => 'SOME_STRING_VALUE'\n]);\n\n$request->setHeaders([\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
                    },
                    {
                        "lang": "Php + Http2",
                        "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('http://qanswer-core1.univ-st-etienne.fr/api/freeText/predict_on_text');\n$request->setRequestMethod('GET');\n$request->setQuery(new http\\QueryString([\n  'context' => 'SOME_STRING_VALUE',\n  'language' => 'SOME_STRING_VALUE',\n  'question' => 'SOME_STRING_VALUE'\n]));\n\n$request->setHeaders([\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
                    }
                ]
            }
        },
        "/api/freeText/reset/reader": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "deprecated": false,
                "operationId": "freeTextResetReaderUsingPOST",
                "parameters": [
                    {
                        "description": "indexId",
                        "format": "int64",
                        "in": "query",
                        "name": "indexId",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/TrainMessageResponse"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "summary": "freeTextResetReader",
                "tags": [
                    "free-text-train-controller"
                ],
                "x-codeSamples": [
                    {
                        "lang": "Node + Request",
                        "source": "const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'http://qanswer-core1.univ-st-etienne.fr/api/freeText/reset/reader',\n  qs: {indexId: 'SOME_INTEGER_VALUE'},\n  headers: {\n    accept: 'application/json',\n    'content-type': '*/*',\n    Authorization: 'REPLACE_KEY_VALUE'\n  }\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
                    },
                    {
                        "lang": "Shell + Curl",
                        "source": "curl --request POST \\\n  --url 'http://qanswer-core1.univ-st-etienne.fr/api/freeText/reset/reader?indexId=SOME_INTEGER_VALUE' \\\n  --header 'Authorization: REPLACE_KEY_VALUE' \\\n  --header 'accept: application/json' \\\n  --header 'content-type: */*'"
                    },
                    {
                        "lang": "Shell + Httpie",
                        "source": "http POST 'http://qanswer-core1.univ-st-etienne.fr/api/freeText/reset/reader?indexId=SOME_INTEGER_VALUE' \\\n  Authorization:REPLACE_KEY_VALUE \\\n  accept:application/json \\\n  content-type:'*/*'"
                    },
                    {
                        "lang": "Python + Python3",
                        "source": "import http.client\n\nconn = http.client.HTTPConnection(\"qanswer-core1.univ-st-etienne.fr\")\n\nheaders = {\n    'accept': \"application/json\",\n    'content-type': \"*/*\",\n    'Authorization': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"POST\", \"/api/freeText/reset/reader?indexId=SOME_INTEGER_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
                    },
                    {
                        "lang": "Php + Curl",
                        "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"http://qanswer-core1.univ-st-etienne.fr/api/freeText/reset/reader?indexId=SOME_INTEGER_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: REPLACE_KEY_VALUE\",\n    \"accept: application/json\",\n    \"content-type: */*\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
                    },
                    {
                        "lang": "php",
                        "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('http://qanswer-core1.univ-st-etienne.fr/api/freeText/reset/reader');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setQueryData([\n  'indexId' => 'SOME_INTEGER_VALUE'\n]);\n\n$request->setHeaders([\n  'accept' => 'application/json',\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
                    },
                    {
                        "lang": "Php + Http2",
                        "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('http://qanswer-core1.univ-st-etienne.fr/api/freeText/reset/reader');\n$request->setRequestMethod('POST');\n$request->setQuery(new http\\QueryString([\n  'indexId' => 'SOME_INTEGER_VALUE'\n]));\n\n$request->setHeaders([\n  'accept' => 'application/json',\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
                    }
                ]
            }
        },
        "/api/freeText/train/reader": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "deprecated": false,
                "operationId": "freeTextTrainReaderUsingPOST",
                "parameters": [
                    {
                        "description": "indexId",
                        "format": "int64",
                        "in": "query",
                        "name": "indexId",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/JobSubmissionResponse"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "summary": "freeTextTrainReader",
                "tags": [
                    "free-text-train-controller"
                ],
                "x-codeSamples": [
                    {
                        "lang": "Node + Request",
                        "source": "const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'http://qanswer-core1.univ-st-etienne.fr/api/freeText/train/reader',\n  qs: {indexId: 'SOME_INTEGER_VALUE'},\n  headers: {\n    accept: 'application/json',\n    'content-type': '*/*',\n    Authorization: 'REPLACE_KEY_VALUE'\n  }\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
                    },
                    {
                        "lang": "Shell + Curl",
                        "source": "curl --request POST \\\n  --url 'http://qanswer-core1.univ-st-etienne.fr/api/freeText/train/reader?indexId=SOME_INTEGER_VALUE' \\\n  --header 'Authorization: REPLACE_KEY_VALUE' \\\n  --header 'accept: application/json' \\\n  --header 'content-type: */*'"
                    },
                    {
                        "lang": "Shell + Httpie",
                        "source": "http POST 'http://qanswer-core1.univ-st-etienne.fr/api/freeText/train/reader?indexId=SOME_INTEGER_VALUE' \\\n  Authorization:REPLACE_KEY_VALUE \\\n  accept:application/json \\\n  content-type:'*/*'"
                    },
                    {
                        "lang": "Python + Python3",
                        "source": "import http.client\n\nconn = http.client.HTTPConnection(\"qanswer-core1.univ-st-etienne.fr\")\n\nheaders = {\n    'accept': \"application/json\",\n    'content-type': \"*/*\",\n    'Authorization': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"POST\", \"/api/freeText/train/reader?indexId=SOME_INTEGER_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
                    },
                    {
                        "lang": "Php + Curl",
                        "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"http://qanswer-core1.univ-st-etienne.fr/api/freeText/train/reader?indexId=SOME_INTEGER_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: REPLACE_KEY_VALUE\",\n    \"accept: application/json\",\n    \"content-type: */*\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
                    },
                    {
                        "lang": "php",
                        "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('http://qanswer-core1.univ-st-etienne.fr/api/freeText/train/reader');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setQueryData([\n  'indexId' => 'SOME_INTEGER_VALUE'\n]);\n\n$request->setHeaders([\n  'accept' => 'application/json',\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
                    },
                    {
                        "lang": "Php + Http2",
                        "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('http://qanswer-core1.univ-st-etienne.fr/api/freeText/train/reader');\n$request->setRequestMethod('POST');\n$request->setQuery(new http\\QueryString([\n  'indexId' => 'SOME_INTEGER_VALUE'\n]));\n\n$request->setHeaders([\n  'accept' => 'application/json',\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
                    }
                ]
            }
        },
        "/api/gerbil": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "deprecated": false,
                "operationId": "gerbilUsingPOST",
                "parameters": [
                    {
                        "default": "wikidata",
                        "description": "kb",
                        "in": "query",
                        "name": "kb",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "default": "en",
                        "description": "lang",
                        "in": "query",
                        "name": "lang",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "query",
                        "in": "query",
                        "name": "query",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "collectionFormat": "multi",
                        "description": "user",
                        "in": "query",
                        "items": {
                            "type": "string"
                        },
                        "name": "user",
                        "required": false,
                        "type": "array"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "additionalProperties": {
                                "type": "object"
                            },
                            "type": "object"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "summary": "Takes a question and returns the answer in the format specified by the GERBIL API",
                "tags": [
                    "qa-controller-kb"
                ],
                "x-codeSamples": [
                    {
                        "lang": "Node + Request",
                        "source": "const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'http://qanswer-core1.univ-st-etienne.fr/api/gerbil',\n  qs: {\n    kb: 'wikidata',\n    lang: 'en',\n    query: 'SOME_STRING_VALUE',\n    user: 'SOME_ARRAY_VALUE'\n  },\n  headers: {\n    accept: 'application/json',\n    'content-type': 'application/json',\n    Authorization: 'REPLACE_KEY_VALUE'\n  }\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
                    },
                    {
                        "lang": "Shell + Curl",
                        "source": "curl --request POST \\\n  --url 'http://qanswer-core1.univ-st-etienne.fr/api/gerbil?kb=wikidata&lang=en&query=SOME_STRING_VALUE&user=SOME_ARRAY_VALUE' \\\n  --header 'Authorization: REPLACE_KEY_VALUE' \\\n  --header 'accept: application/json' \\\n  --header 'content-type: application/json'"
                    },
                    {
                        "lang": "Shell + Httpie",
                        "source": "http POST 'http://qanswer-core1.univ-st-etienne.fr/api/gerbil?kb=wikidata&lang=en&query=SOME_STRING_VALUE&user=SOME_ARRAY_VALUE' \\\n  Authorization:REPLACE_KEY_VALUE \\\n  accept:application/json \\\n  content-type:application/json"
                    },
                    {
                        "lang": "Python + Python3",
                        "source": "import http.client\n\nconn = http.client.HTTPConnection(\"qanswer-core1.univ-st-etienne.fr\")\n\nheaders = {\n    'accept': \"application/json\",\n    'content-type': \"application/json\",\n    'Authorization': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"POST\", \"/api/gerbil?kb=wikidata&lang=en&query=SOME_STRING_VALUE&user=SOME_ARRAY_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
                    },
                    {
                        "lang": "Php + Curl",
                        "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"http://qanswer-core1.univ-st-etienne.fr/api/gerbil?kb=wikidata&lang=en&query=SOME_STRING_VALUE&user=SOME_ARRAY_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: REPLACE_KEY_VALUE\",\n    \"accept: application/json\",\n    \"content-type: application/json\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
                    },
                    {
                        "lang": "php",
                        "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('http://qanswer-core1.univ-st-etienne.fr/api/gerbil');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setQueryData([\n  'kb' => 'wikidata',\n  'lang' => 'en',\n  'query' => 'SOME_STRING_VALUE',\n  'user' => 'SOME_ARRAY_VALUE'\n]);\n\n$request->setHeaders([\n  'accept' => 'application/json',\n  'content-type' => 'application/json',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
                    },
                    {
                        "lang": "Php + Http2",
                        "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('http://qanswer-core1.univ-st-etienne.fr/api/gerbil');\n$request->setRequestMethod('POST');\n$request->setQuery(new http\\QueryString([\n  'kb' => 'wikidata',\n  'lang' => 'en',\n  'query' => 'SOME_STRING_VALUE',\n  'user' => 'SOME_ARRAY_VALUE'\n]));\n\n$request->setHeaders([\n  'accept' => 'application/json',\n  'content-type' => 'application/json',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
                    }
                ]
            }
        },
        "/api/linkDev/evaluate": {
            "get": {
                "deprecated": false,
                "operationId": "evaluateUsingGET_1",
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "summary": "evaluate",
                "tags": [
                    "link-controller"
                ],
                "x-codeSamples": [
                    {
                        "lang": "Node + Request",
                        "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://qanswer-core1.univ-st-etienne.fr/api/linkDev/evaluate',\n  headers: {'content-type': '*/*', Authorization: 'REPLACE_KEY_VALUE'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
                    },
                    {
                        "lang": "Shell + Curl",
                        "source": "curl --request GET \\\n  --url http://qanswer-core1.univ-st-etienne.fr/api/linkDev/evaluate \\\n  --header 'Authorization: REPLACE_KEY_VALUE' \\\n  --header 'content-type: */*'"
                    },
                    {
                        "lang": "Shell + Httpie",
                        "source": "http GET http://qanswer-core1.univ-st-etienne.fr/api/linkDev/evaluate \\\n  Authorization:REPLACE_KEY_VALUE \\\n  content-type:'*/*'"
                    },
                    {
                        "lang": "Python + Python3",
                        "source": "import http.client\n\nconn = http.client.HTTPConnection(\"qanswer-core1.univ-st-etienne.fr\")\n\nheaders = {\n    'content-type': \"*/*\",\n    'Authorization': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"GET\", \"/api/linkDev/evaluate\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
                    },
                    {
                        "lang": "Php + Curl",
                        "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"http://qanswer-core1.univ-st-etienne.fr/api/linkDev/evaluate\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: REPLACE_KEY_VALUE\",\n    \"content-type: */*\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
                    },
                    {
                        "lang": "php",
                        "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('http://qanswer-core1.univ-st-etienne.fr/api/linkDev/evaluate');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setHeaders([\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
                    },
                    {
                        "lang": "Php + Http2",
                        "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('http://qanswer-core1.univ-st-etienne.fr/api/linkDev/evaluate');\n$request->setRequestMethod('GET');\n$request->setHeaders([\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
                    }
                ]
            }
        },
        "/api/linkDev/link": {
            "get": {
                "deprecated": false,
                "operationId": "linkUsingGET",
                "parameters": [
                    {
                        "collectionFormat": "multi",
                        "description": "conceptMust",
                        "in": "query",
                        "items": {
                            "type": "string"
                        },
                        "name": "conceptMust",
                        "required": false,
                        "type": "array"
                    },
                    {
                        "description": "knowledgebase",
                        "in": "query",
                        "name": "knowledgebase",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "language",
                        "in": "query",
                        "name": "language",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "query",
                        "in": "query",
                        "name": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "text",
                        "in": "query",
                        "name": "text",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "user",
                        "in": "query",
                        "name": "user",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "summary": "link",
                "tags": [
                    "link-controller"
                ],
                "x-codeSamples": [
                    {
                        "lang": "Node + Request",
                        "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://qanswer-core1.univ-st-etienne.fr/api/linkDev/link',\n  qs: {\n    conceptMust: 'SOME_ARRAY_VALUE',\n    knowledgebase: 'SOME_STRING_VALUE',\n    language: 'SOME_STRING_VALUE',\n    query: 'SOME_STRING_VALUE',\n    text: 'SOME_STRING_VALUE',\n    user: 'SOME_STRING_VALUE'\n  },\n  headers: {'content-type': '*/*', Authorization: 'REPLACE_KEY_VALUE'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
                    },
                    {
                        "lang": "Shell + Curl",
                        "source": "curl --request GET \\\n  --url 'http://qanswer-core1.univ-st-etienne.fr/api/linkDev/link?conceptMust=SOME_ARRAY_VALUE&knowledgebase=SOME_STRING_VALUE&language=SOME_STRING_VALUE&query=SOME_STRING_VALUE&text=SOME_STRING_VALUE&user=SOME_STRING_VALUE' \\\n  --header 'Authorization: REPLACE_KEY_VALUE' \\\n  --header 'content-type: */*'"
                    },
                    {
                        "lang": "Shell + Httpie",
                        "source": "http GET 'http://qanswer-core1.univ-st-etienne.fr/api/linkDev/link?conceptMust=SOME_ARRAY_VALUE&knowledgebase=SOME_STRING_VALUE&language=SOME_STRING_VALUE&query=SOME_STRING_VALUE&text=SOME_STRING_VALUE&user=SOME_STRING_VALUE' \\\n  Authorization:REPLACE_KEY_VALUE \\\n  content-type:'*/*'"
                    },
                    {
                        "lang": "Python + Python3",
                        "source": "import http.client\n\nconn = http.client.HTTPConnection(\"qanswer-core1.univ-st-etienne.fr\")\n\nheaders = {\n    'content-type': \"*/*\",\n    'Authorization': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"GET\", \"/api/linkDev/link?conceptMust=SOME_ARRAY_VALUE&knowledgebase=SOME_STRING_VALUE&language=SOME_STRING_VALUE&query=SOME_STRING_VALUE&text=SOME_STRING_VALUE&user=SOME_STRING_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
                    },
                    {
                        "lang": "Php + Curl",
                        "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"http://qanswer-core1.univ-st-etienne.fr/api/linkDev/link?conceptMust=SOME_ARRAY_VALUE&knowledgebase=SOME_STRING_VALUE&language=SOME_STRING_VALUE&query=SOME_STRING_VALUE&text=SOME_STRING_VALUE&user=SOME_STRING_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: REPLACE_KEY_VALUE\",\n    \"content-type: */*\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
                    },
                    {
                        "lang": "php",
                        "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('http://qanswer-core1.univ-st-etienne.fr/api/linkDev/link');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setQueryData([\n  'conceptMust' => 'SOME_ARRAY_VALUE',\n  'knowledgebase' => 'SOME_STRING_VALUE',\n  'language' => 'SOME_STRING_VALUE',\n  'query' => 'SOME_STRING_VALUE',\n  'text' => 'SOME_STRING_VALUE',\n  'user' => 'SOME_STRING_VALUE'\n]);\n\n$request->setHeaders([\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
                    },
                    {
                        "lang": "Php + Http2",
                        "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('http://qanswer-core1.univ-st-etienne.fr/api/linkDev/link');\n$request->setRequestMethod('GET');\n$request->setQuery(new http\\QueryString([\n  'conceptMust' => 'SOME_ARRAY_VALUE',\n  'knowledgebase' => 'SOME_STRING_VALUE',\n  'language' => 'SOME_STRING_VALUE',\n  'query' => 'SOME_STRING_VALUE',\n  'text' => 'SOME_STRING_VALUE',\n  'user' => 'SOME_STRING_VALUE'\n]));\n\n$request->setHeaders([\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
                    }
                ]
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "deprecated": false,
                "operationId": "linkUsingPOST",
                "parameters": [
                    {
                        "description": "linkPayload",
                        "in": "body",
                        "name": "linkPayload",
                        "required": true,
                        "schema": {
                            "properties": {
                                "knowledgebase": {
                                    "type": "string"
                                },
                                "language": {
                                    "type": "string"
                                },
                                "limit": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "texts": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "user": {
                                    "type": "string"
                                }
                            },
                            "title": "LinkPayload",
                            "type": "object"
                        }
                    }
                ],
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "summary": "link",
                "tags": [
                    "link-controller"
                ],
                "x-codeSamples": [
                    {
                        "lang": "Node + Request",
                        "source": "const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'http://qanswer-core1.univ-st-etienne.fr/api/linkDev/link',\n  headers: {\n    accept: 'application/json',\n    'content-type': '*/*',\n    Authorization: 'REPLACE_KEY_VALUE'\n  },\n  body: {\n    knowledgebase: 'string',\n    language: 'string',\n    limit: 0,\n    texts: ['string'],\n    user: 'string'\n  },\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
                    },
                    {
                        "lang": "Shell + Curl",
                        "source": "curl --request POST \\\n  --url http://qanswer-core1.univ-st-etienne.fr/api/linkDev/link \\\n  --header 'Authorization: REPLACE_KEY_VALUE' \\\n  --header 'accept: application/json' \\\n  --header 'content-type: */*' \\\n  --data '{\"knowledgebase\":\"string\",\"language\":\"string\",\"limit\":0,\"texts\":[\"string\"],\"user\":\"string\"}'"
                    },
                    {
                        "lang": "Shell + Httpie",
                        "source": "echo '{\"knowledgebase\":\"string\",\"language\":\"string\",\"limit\":0,\"texts\":[\"string\"],\"user\":\"string\"}' |  \\\n  http POST http://qanswer-core1.univ-st-etienne.fr/api/linkDev/link \\\n  Authorization:REPLACE_KEY_VALUE \\\n  accept:application/json \\\n  content-type:'*/*'"
                    },
                    {
                        "lang": "Python + Python3",
                        "source": "import http.client\n\nconn = http.client.HTTPConnection(\"qanswer-core1.univ-st-etienne.fr\")\n\npayload = \"{\\\"knowledgebase\\\":\\\"string\\\",\\\"language\\\":\\\"string\\\",\\\"limit\\\":0,\\\"texts\\\":[\\\"string\\\"],\\\"user\\\":\\\"string\\\"}\"\n\nheaders = {\n    'accept': \"application/json\",\n    'content-type': \"*/*\",\n    'Authorization': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"POST\", \"/api/linkDev/link\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
                    },
                    {
                        "lang": "Php + Curl",
                        "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"http://qanswer-core1.univ-st-etienne.fr/api/linkDev/link\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_POSTFIELDS => \"{\\\"knowledgebase\\\":\\\"string\\\",\\\"language\\\":\\\"string\\\",\\\"limit\\\":0,\\\"texts\\\":[\\\"string\\\"],\\\"user\\\":\\\"string\\\"}\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: REPLACE_KEY_VALUE\",\n    \"accept: application/json\",\n    \"content-type: */*\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
                    },
                    {
                        "lang": "php",
                        "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('http://qanswer-core1.univ-st-etienne.fr/api/linkDev/link');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setHeaders([\n  'accept' => 'application/json',\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$request->setBody('{\"knowledgebase\":\"string\",\"language\":\"string\",\"limit\":0,\"texts\":[\"string\"],\"user\":\"string\"}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
                    },
                    {
                        "lang": "Php + Http2",
                        "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$body = new http\\Message\\Body;\n$body->append('{\"knowledgebase\":\"string\",\"language\":\"string\",\"limit\":0,\"texts\":[\"string\"],\"user\":\"string\"}');\n\n$request->setRequestUrl('http://qanswer-core1.univ-st-etienne.fr/api/linkDev/link');\n$request->setRequestMethod('POST');\n$request->setBody($body);\n\n$request->setHeaders([\n  'accept' => 'application/json',\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
                    }
                ]
            }
        },
        "/api/linkDev/link/aggregate": {
            "get": {
                "deprecated": false,
                "operationId": "linkAggregateUsingGET",
                "parameters": [
                    {
                        "description": "dataset",
                        "in": "query",
                        "name": "dataset",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/Aggregate"
                            },
                            "type": "array"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "summary": "linkAggregate",
                "tags": [
                    "link-controller"
                ],
                "x-codeSamples": [
                    {
                        "lang": "Node + Request",
                        "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://qanswer-core1.univ-st-etienne.fr/api/linkDev/link/aggregate',\n  qs: {dataset: 'SOME_STRING_VALUE'},\n  headers: {'content-type': '*/*', Authorization: 'REPLACE_KEY_VALUE'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
                    },
                    {
                        "lang": "Shell + Curl",
                        "source": "curl --request GET \\\n  --url 'http://qanswer-core1.univ-st-etienne.fr/api/linkDev/link/aggregate?dataset=SOME_STRING_VALUE' \\\n  --header 'Authorization: REPLACE_KEY_VALUE' \\\n  --header 'content-type: */*'"
                    },
                    {
                        "lang": "Shell + Httpie",
                        "source": "http GET 'http://qanswer-core1.univ-st-etienne.fr/api/linkDev/link/aggregate?dataset=SOME_STRING_VALUE' \\\n  Authorization:REPLACE_KEY_VALUE \\\n  content-type:'*/*'"
                    },
                    {
                        "lang": "Python + Python3",
                        "source": "import http.client\n\nconn = http.client.HTTPConnection(\"qanswer-core1.univ-st-etienne.fr\")\n\nheaders = {\n    'content-type': \"*/*\",\n    'Authorization': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"GET\", \"/api/linkDev/link/aggregate?dataset=SOME_STRING_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
                    },
                    {
                        "lang": "Php + Curl",
                        "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"http://qanswer-core1.univ-st-etienne.fr/api/linkDev/link/aggregate?dataset=SOME_STRING_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: REPLACE_KEY_VALUE\",\n    \"content-type: */*\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
                    },
                    {
                        "lang": "php",
                        "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('http://qanswer-core1.univ-st-etienne.fr/api/linkDev/link/aggregate');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setQueryData([\n  'dataset' => 'SOME_STRING_VALUE'\n]);\n\n$request->setHeaders([\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
                    },
                    {
                        "lang": "Php + Http2",
                        "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('http://qanswer-core1.univ-st-etienne.fr/api/linkDev/link/aggregate');\n$request->setRequestMethod('GET');\n$request->setQuery(new http\\QueryString([\n  'dataset' => 'SOME_STRING_VALUE'\n]));\n\n$request->setHeaders([\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
                    }
                ]
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "deprecated": false,
                "operationId": "linkAggregateUsingPOST",
                "parameters": [
                    {
                        "description": "aggregateList",
                        "in": "body",
                        "name": "aggregateList",
                        "required": true,
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/Aggregate"
                            },
                            "type": "array"
                        }
                    },
                    {
                        "description": "dataset",
                        "in": "query",
                        "name": "dataset",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "summary": "linkAggregate",
                "tags": [
                    "link-controller"
                ],
                "x-codeSamples": [
                    {
                        "lang": "Node + Request",
                        "source": "const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'http://qanswer-core1.univ-st-etienne.fr/api/linkDev/link/aggregate',\n  qs: {dataset: 'SOME_STRING_VALUE'},\n  headers: {\n    accept: 'application/json',\n    'content-type': '*/*',\n    Authorization: 'REPLACE_KEY_VALUE'\n  },\n  body: [\n    {\n      answerContext: {\n        audio: ['string'],\n        description: 'string',\n        disambiguation: 'string',\n        geo: [{latitude: 0, longitude: 0}],\n        geoJson: 'string',\n        images: ['string'],\n        kb: 'string',\n        label: 'string',\n        links: {property1: 'string', property2: 'string'},\n        literal: 'string',\n        optional: {property1: ['string'], property2: ['string']},\n        pageRank: 0,\n        time: 'string',\n        timeSeries: 'string',\n        uri: 'string',\n        user: 'string',\n        video: ['string']\n      },\n      excluded: true,\n      occurance: 0,\n      uri: 'string'\n    }\n  ],\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
                    },
                    {
                        "lang": "Shell + Curl",
                        "source": "curl --request POST \\\n  --url 'http://qanswer-core1.univ-st-etienne.fr/api/linkDev/link/aggregate?dataset=SOME_STRING_VALUE' \\\n  --header 'Authorization: REPLACE_KEY_VALUE' \\\n  --header 'accept: application/json' \\\n  --header 'content-type: */*' \\\n  --data '[{\"answerContext\":{\"audio\":[\"string\"],\"description\":\"string\",\"disambiguation\":\"string\",\"geo\":[{\"latitude\":0,\"longitude\":0}],\"geoJson\":\"string\",\"images\":[\"string\"],\"kb\":\"string\",\"label\":\"string\",\"links\":{\"property1\":\"string\",\"property2\":\"string\"},\"literal\":\"string\",\"optional\":{\"property1\":[\"string\"],\"property2\":[\"string\"]},\"pageRank\":0,\"time\":\"string\",\"timeSeries\":\"string\",\"uri\":\"string\",\"user\":\"string\",\"video\":[\"string\"]},\"excluded\":true,\"occurance\":0,\"uri\":\"string\"}]'"
                    },
                    {
                        "lang": "Shell + Httpie",
                        "source": "echo '[{\"answerContext\":{\"audio\":[\"string\"],\"description\":\"string\",\"disambiguation\":\"string\",\"geo\":[{\"latitude\":0,\"longitude\":0}],\"geoJson\":\"string\",\"images\":[\"string\"],\"kb\":\"string\",\"label\":\"string\",\"links\":{\"property1\":\"string\",\"property2\":\"string\"},\"literal\":\"string\",\"optional\":{\"property1\":[\"string\"],\"property2\":[\"string\"]},\"pageRank\":0,\"time\":\"string\",\"timeSeries\":\"string\",\"uri\":\"string\",\"user\":\"string\",\"video\":[\"string\"]},\"excluded\":true,\"occurance\":0,\"uri\":\"string\"}]' |  \\\n  http POST 'http://qanswer-core1.univ-st-etienne.fr/api/linkDev/link/aggregate?dataset=SOME_STRING_VALUE' \\\n  Authorization:REPLACE_KEY_VALUE \\\n  accept:application/json \\\n  content-type:'*/*'"
                    },
                    {
                        "lang": "Python + Python3",
                        "source": "import http.client\n\nconn = http.client.HTTPConnection(\"qanswer-core1.univ-st-etienne.fr\")\n\npayload = \"[{\\\"answerContext\\\":{\\\"audio\\\":[\\\"string\\\"],\\\"description\\\":\\\"string\\\",\\\"disambiguation\\\":\\\"string\\\",\\\"geo\\\":[{\\\"latitude\\\":0,\\\"longitude\\\":0}],\\\"geoJson\\\":\\\"string\\\",\\\"images\\\":[\\\"string\\\"],\\\"kb\\\":\\\"string\\\",\\\"label\\\":\\\"string\\\",\\\"links\\\":{\\\"property1\\\":\\\"string\\\",\\\"property2\\\":\\\"string\\\"},\\\"literal\\\":\\\"string\\\",\\\"optional\\\":{\\\"property1\\\":[\\\"string\\\"],\\\"property2\\\":[\\\"string\\\"]},\\\"pageRank\\\":0,\\\"time\\\":\\\"string\\\",\\\"timeSeries\\\":\\\"string\\\",\\\"uri\\\":\\\"string\\\",\\\"user\\\":\\\"string\\\",\\\"video\\\":[\\\"string\\\"]},\\\"excluded\\\":true,\\\"occurance\\\":0,\\\"uri\\\":\\\"string\\\"}]\"\n\nheaders = {\n    'accept': \"application/json\",\n    'content-type': \"*/*\",\n    'Authorization': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"POST\", \"/api/linkDev/link/aggregate?dataset=SOME_STRING_VALUE\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
                    },
                    {
                        "lang": "Php + Curl",
                        "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"http://qanswer-core1.univ-st-etienne.fr/api/linkDev/link/aggregate?dataset=SOME_STRING_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_POSTFIELDS => \"[{\\\"answerContext\\\":{\\\"audio\\\":[\\\"string\\\"],\\\"description\\\":\\\"string\\\",\\\"disambiguation\\\":\\\"string\\\",\\\"geo\\\":[{\\\"latitude\\\":0,\\\"longitude\\\":0}],\\\"geoJson\\\":\\\"string\\\",\\\"images\\\":[\\\"string\\\"],\\\"kb\\\":\\\"string\\\",\\\"label\\\":\\\"string\\\",\\\"links\\\":{\\\"property1\\\":\\\"string\\\",\\\"property2\\\":\\\"string\\\"},\\\"literal\\\":\\\"string\\\",\\\"optional\\\":{\\\"property1\\\":[\\\"string\\\"],\\\"property2\\\":[\\\"string\\\"]},\\\"pageRank\\\":0,\\\"time\\\":\\\"string\\\",\\\"timeSeries\\\":\\\"string\\\",\\\"uri\\\":\\\"string\\\",\\\"user\\\":\\\"string\\\",\\\"video\\\":[\\\"string\\\"]},\\\"excluded\\\":true,\\\"occurance\\\":0,\\\"uri\\\":\\\"string\\\"}]\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: REPLACE_KEY_VALUE\",\n    \"accept: application/json\",\n    \"content-type: */*\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
                    },
                    {
                        "lang": "php",
                        "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('http://qanswer-core1.univ-st-etienne.fr/api/linkDev/link/aggregate');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setQueryData([\n  'dataset' => 'SOME_STRING_VALUE'\n]);\n\n$request->setHeaders([\n  'accept' => 'application/json',\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$request->setBody('[{\"answerContext\":{\"audio\":[\"string\"],\"description\":\"string\",\"disambiguation\":\"string\",\"geo\":[{\"latitude\":0,\"longitude\":0}],\"geoJson\":\"string\",\"images\":[\"string\"],\"kb\":\"string\",\"label\":\"string\",\"links\":{\"property1\":\"string\",\"property2\":\"string\"},\"literal\":\"string\",\"optional\":{\"property1\":[\"string\"],\"property2\":[\"string\"]},\"pageRank\":0,\"time\":\"string\",\"timeSeries\":\"string\",\"uri\":\"string\",\"user\":\"string\",\"video\":[\"string\"]},\"excluded\":true,\"occurance\":0,\"uri\":\"string\"}]');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
                    },
                    {
                        "lang": "Php + Http2",
                        "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$body = new http\\Message\\Body;\n$body->append('[{\"answerContext\":{\"audio\":[\"string\"],\"description\":\"string\",\"disambiguation\":\"string\",\"geo\":[{\"latitude\":0,\"longitude\":0}],\"geoJson\":\"string\",\"images\":[\"string\"],\"kb\":\"string\",\"label\":\"string\",\"links\":{\"property1\":\"string\",\"property2\":\"string\"},\"literal\":\"string\",\"optional\":{\"property1\":[\"string\"],\"property2\":[\"string\"]},\"pageRank\":0,\"time\":\"string\",\"timeSeries\":\"string\",\"uri\":\"string\",\"user\":\"string\",\"video\":[\"string\"]},\"excluded\":true,\"occurance\":0,\"uri\":\"string\"}]');\n\n$request->setRequestUrl('http://qanswer-core1.univ-st-etienne.fr/api/linkDev/link/aggregate');\n$request->setRequestMethod('POST');\n$request->setBody($body);\n\n$request->setQuery(new http\\QueryString([\n  'dataset' => 'SOME_STRING_VALUE'\n]));\n\n$request->setHeaders([\n  'accept' => 'application/json',\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
                    }
                ]
            }
        },
        "/api/linkDev/link/analyze": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "deprecated": false,
                "operationId": "linkAnalyzeUsingPOST",
                "parameters": [
                    {
                        "description": "dataset",
                        "in": "query",
                        "name": "dataset",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/LinkingResult"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "summary": "linkAnalyze",
                "tags": [
                    "link-controller"
                ],
                "x-codeSamples": [
                    {
                        "lang": "Node + Request",
                        "source": "const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'http://qanswer-core1.univ-st-etienne.fr/api/linkDev/link/analyze',\n  qs: {dataset: 'SOME_STRING_VALUE'},\n  headers: {\n    accept: 'application/json',\n    'content-type': '*/*',\n    Authorization: 'REPLACE_KEY_VALUE'\n  }\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
                    },
                    {
                        "lang": "Shell + Curl",
                        "source": "curl --request POST \\\n  --url 'http://qanswer-core1.univ-st-etienne.fr/api/linkDev/link/analyze?dataset=SOME_STRING_VALUE' \\\n  --header 'Authorization: REPLACE_KEY_VALUE' \\\n  --header 'accept: application/json' \\\n  --header 'content-type: */*'"
                    },
                    {
                        "lang": "Shell + Httpie",
                        "source": "http POST 'http://qanswer-core1.univ-st-etienne.fr/api/linkDev/link/analyze?dataset=SOME_STRING_VALUE' \\\n  Authorization:REPLACE_KEY_VALUE \\\n  accept:application/json \\\n  content-type:'*/*'"
                    },
                    {
                        "lang": "Python + Python3",
                        "source": "import http.client\n\nconn = http.client.HTTPConnection(\"qanswer-core1.univ-st-etienne.fr\")\n\nheaders = {\n    'accept': \"application/json\",\n    'content-type': \"*/*\",\n    'Authorization': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"POST\", \"/api/linkDev/link/analyze?dataset=SOME_STRING_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
                    },
                    {
                        "lang": "Php + Curl",
                        "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"http://qanswer-core1.univ-st-etienne.fr/api/linkDev/link/analyze?dataset=SOME_STRING_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: REPLACE_KEY_VALUE\",\n    \"accept: application/json\",\n    \"content-type: */*\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
                    },
                    {
                        "lang": "php",
                        "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('http://qanswer-core1.univ-st-etienne.fr/api/linkDev/link/analyze');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setQueryData([\n  'dataset' => 'SOME_STRING_VALUE'\n]);\n\n$request->setHeaders([\n  'accept' => 'application/json',\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
                    },
                    {
                        "lang": "Php + Http2",
                        "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('http://qanswer-core1.univ-st-etienne.fr/api/linkDev/link/analyze');\n$request->setRequestMethod('POST');\n$request->setQuery(new http\\QueryString([\n  'dataset' => 'SOME_STRING_VALUE'\n]));\n\n$request->setHeaders([\n  'accept' => 'application/json',\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
                    }
                ]
            }
        },
        "/api/linkDev/link/delete": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "deprecated": false,
                "operationId": "linkDeleteUsingPOST",
                "parameters": [
                    {
                        "description": "dataset",
                        "in": "query",
                        "name": "dataset",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "summary": "Deletes a dataset for linking. The request contains the dataset name",
                "tags": [
                    "link-controller"
                ],
                "x-codeSamples": [
                    {
                        "lang": "Node + Request",
                        "source": "const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'http://qanswer-core1.univ-st-etienne.fr/api/linkDev/link/delete',\n  qs: {dataset: 'SOME_STRING_VALUE'},\n  headers: {\n    accept: 'application/json',\n    'content-type': '*/*',\n    Authorization: 'REPLACE_KEY_VALUE'\n  }\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
                    },
                    {
                        "lang": "Shell + Curl",
                        "source": "curl --request POST \\\n  --url 'http://qanswer-core1.univ-st-etienne.fr/api/linkDev/link/delete?dataset=SOME_STRING_VALUE' \\\n  --header 'Authorization: REPLACE_KEY_VALUE' \\\n  --header 'accept: application/json' \\\n  --header 'content-type: */*'"
                    },
                    {
                        "lang": "Shell + Httpie",
                        "source": "http POST 'http://qanswer-core1.univ-st-etienne.fr/api/linkDev/link/delete?dataset=SOME_STRING_VALUE' \\\n  Authorization:REPLACE_KEY_VALUE \\\n  accept:application/json \\\n  content-type:'*/*'"
                    },
                    {
                        "lang": "Python + Python3",
                        "source": "import http.client\n\nconn = http.client.HTTPConnection(\"qanswer-core1.univ-st-etienne.fr\")\n\nheaders = {\n    'accept': \"application/json\",\n    'content-type': \"*/*\",\n    'Authorization': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"POST\", \"/api/linkDev/link/delete?dataset=SOME_STRING_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
                    },
                    {
                        "lang": "Php + Curl",
                        "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"http://qanswer-core1.univ-st-etienne.fr/api/linkDev/link/delete?dataset=SOME_STRING_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: REPLACE_KEY_VALUE\",\n    \"accept: application/json\",\n    \"content-type: */*\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
                    },
                    {
                        "lang": "php",
                        "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('http://qanswer-core1.univ-st-etienne.fr/api/linkDev/link/delete');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setQueryData([\n  'dataset' => 'SOME_STRING_VALUE'\n]);\n\n$request->setHeaders([\n  'accept' => 'application/json',\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
                    },
                    {
                        "lang": "Php + Http2",
                        "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('http://qanswer-core1.univ-st-etienne.fr/api/linkDev/link/delete');\n$request->setRequestMethod('POST');\n$request->setQuery(new http\\QueryString([\n  'dataset' => 'SOME_STRING_VALUE'\n]));\n\n$request->setHeaders([\n  'accept' => 'application/json',\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
                    }
                ]
            }
        },
        "/api/linkDev/link/evaluate": {
            "get": {
                "deprecated": false,
                "operationId": "linkEvaluateUsingGET",
                "parameters": [
                    {
                        "description": "dataset",
                        "in": "query",
                        "name": "dataset",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/LinkingResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "summary": "linkEvaluate",
                "tags": [
                    "link-controller"
                ],
                "x-codeSamples": [
                    {
                        "lang": "Node + Request",
                        "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://qanswer-core1.univ-st-etienne.fr/api/linkDev/link/evaluate',\n  qs: {dataset: 'SOME_STRING_VALUE'},\n  headers: {'content-type': '*/*', Authorization: 'REPLACE_KEY_VALUE'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
                    },
                    {
                        "lang": "Shell + Curl",
                        "source": "curl --request GET \\\n  --url 'http://qanswer-core1.univ-st-etienne.fr/api/linkDev/link/evaluate?dataset=SOME_STRING_VALUE' \\\n  --header 'Authorization: REPLACE_KEY_VALUE' \\\n  --header 'content-type: */*'"
                    },
                    {
                        "lang": "Shell + Httpie",
                        "source": "http GET 'http://qanswer-core1.univ-st-etienne.fr/api/linkDev/link/evaluate?dataset=SOME_STRING_VALUE' \\\n  Authorization:REPLACE_KEY_VALUE \\\n  content-type:'*/*'"
                    },
                    {
                        "lang": "Python + Python3",
                        "source": "import http.client\n\nconn = http.client.HTTPConnection(\"qanswer-core1.univ-st-etienne.fr\")\n\nheaders = {\n    'content-type': \"*/*\",\n    'Authorization': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"GET\", \"/api/linkDev/link/evaluate?dataset=SOME_STRING_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
                    },
                    {
                        "lang": "Php + Curl",
                        "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"http://qanswer-core1.univ-st-etienne.fr/api/linkDev/link/evaluate?dataset=SOME_STRING_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: REPLACE_KEY_VALUE\",\n    \"content-type: */*\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
                    },
                    {
                        "lang": "php",
                        "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('http://qanswer-core1.univ-st-etienne.fr/api/linkDev/link/evaluate');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setQueryData([\n  'dataset' => 'SOME_STRING_VALUE'\n]);\n\n$request->setHeaders([\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
                    },
                    {
                        "lang": "Php + Http2",
                        "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('http://qanswer-core1.univ-st-etienne.fr/api/linkDev/link/evaluate');\n$request->setRequestMethod('GET');\n$request->setQuery(new http\\QueryString([\n  'dataset' => 'SOME_STRING_VALUE'\n]));\n\n$request->setHeaders([\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
                    }
                ]
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "deprecated": false,
                "operationId": "linkEvaluateUsingPOST",
                "parameters": [
                    {
                        "description": "dataset",
                        "in": "query",
                        "name": "dataset",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "linkingResult",
                        "in": "body",
                        "name": "linkingResult",
                        "required": true,
                        "schema": {
                            "properties": {
                                "aggregateList": {
                                    "items": {
                                        "$ref": "#/definitions/Aggregate"
                                    },
                                    "type": "array"
                                },
                                "linksList": {
                                    "items": {
                                        "$ref": "#/definitions/Links"
                                    },
                                    "type": "array"
                                }
                            },
                            "title": "LinkingResult",
                            "type": "object"
                        }
                    }
                ],
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "summary": "linkEvaluate",
                "tags": [
                    "link-controller"
                ],
                "x-codeSamples": [
                    {
                        "lang": "Node + Request",
                        "source": "const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'http://qanswer-core1.univ-st-etienne.fr/api/linkDev/link/evaluate',\n  qs: {dataset: 'SOME_STRING_VALUE'},\n  headers: {\n    accept: 'application/json',\n    'content-type': '*/*',\n    Authorization: 'REPLACE_KEY_VALUE'\n  },\n  body: {\n    aggregateList: [\n      {\n        answerContext: {\n          audio: ['string'],\n          description: 'string',\n          disambiguation: 'string',\n          geo: [{latitude: 0, longitude: 0}],\n          geoJson: 'string',\n          images: ['string'],\n          kb: 'string',\n          label: 'string',\n          links: {property1: 'string', property2: 'string'},\n          literal: 'string',\n          optional: {property1: ['string'], property2: ['string']},\n          pageRank: 0,\n          time: 'string',\n          timeSeries: 'string',\n          uri: 'string',\n          user: 'string',\n          video: ['string']\n        },\n        excluded: true,\n        occurance: 0,\n        uri: 'string'\n      }\n    ],\n    linksList: [\n      {\n        links: [\n          {\n            answerContext: {\n              audio: ['string'],\n              description: 'string',\n              disambiguation: 'string',\n              geo: [{latitude: 0, longitude: 0}],\n              geoJson: 'string',\n              images: ['string'],\n              kb: 'string',\n              label: 'string',\n              links: {property1: 'string', property2: 'string'},\n              literal: 'string',\n              optional: {property1: ['string'], property2: ['string']},\n              pageRank: 0,\n              time: 'string',\n              timeSeries: 'string',\n              uri: 'string',\n              user: 'string',\n              video: ['string']\n            },\n            conceptCloud: ['string'],\n            confidence: 0,\n            excluded: true,\n            excludedConcepts: ['string'],\n            match: true,\n            uri: 'string'\n          }\n        ],\n        text: 'string'\n      }\n    ]\n  },\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
                    },
                    {
                        "lang": "Shell + Curl",
                        "source": "curl --request POST \\\n  --url 'http://qanswer-core1.univ-st-etienne.fr/api/linkDev/link/evaluate?dataset=SOME_STRING_VALUE' \\\n  --header 'Authorization: REPLACE_KEY_VALUE' \\\n  --header 'accept: application/json' \\\n  --header 'content-type: */*' \\\n  --data '{\"aggregateList\":[{\"answerContext\":{\"audio\":[\"string\"],\"description\":\"string\",\"disambiguation\":\"string\",\"geo\":[{\"latitude\":0,\"longitude\":0}],\"geoJson\":\"string\",\"images\":[\"string\"],\"kb\":\"string\",\"label\":\"string\",\"links\":{\"property1\":\"string\",\"property2\":\"string\"},\"literal\":\"string\",\"optional\":{\"property1\":[\"string\"],\"property2\":[\"string\"]},\"pageRank\":0,\"time\":\"string\",\"timeSeries\":\"string\",\"uri\":\"string\",\"user\":\"string\",\"video\":[\"string\"]},\"excluded\":true,\"occurance\":0,\"uri\":\"string\"}],\"linksList\":[{\"links\":[{\"answerContext\":{\"audio\":[\"string\"],\"description\":\"string\",\"disambiguation\":\"string\",\"geo\":[{\"latitude\":0,\"longitude\":0}],\"geoJson\":\"string\",\"images\":[\"string\"],\"kb\":\"string\",\"label\":\"string\",\"links\":{\"property1\":\"string\",\"property2\":\"string\"},\"literal\":\"string\",\"optional\":{\"property1\":[\"string\"],\"property2\":[\"string\"]},\"pageRank\":0,\"time\":\"string\",\"timeSeries\":\"string\",\"uri\":\"string\",\"user\":\"string\",\"video\":[\"string\"]},\"conceptCloud\":[\"string\"],\"confidence\":0,\"excluded\":true,\"excludedConcepts\":[\"string\"],\"match\":true,\"uri\":\"string\"}],\"text\":\"string\"}]}'"
                    },
                    {
                        "lang": "Shell + Httpie",
                        "source": "echo '{\"aggregateList\":[{\"answerContext\":{\"audio\":[\"string\"],\"description\":\"string\",\"disambiguation\":\"string\",\"geo\":[{\"latitude\":0,\"longitude\":0}],\"geoJson\":\"string\",\"images\":[\"string\"],\"kb\":\"string\",\"label\":\"string\",\"links\":{\"property1\":\"string\",\"property2\":\"string\"},\"literal\":\"string\",\"optional\":{\"property1\":[\"string\"],\"property2\":[\"string\"]},\"pageRank\":0,\"time\":\"string\",\"timeSeries\":\"string\",\"uri\":\"string\",\"user\":\"string\",\"video\":[\"string\"]},\"excluded\":true,\"occurance\":0,\"uri\":\"string\"}],\"linksList\":[{\"links\":[{\"answerContext\":{\"audio\":[\"string\"],\"description\":\"string\",\"disambiguation\":\"string\",\"geo\":[{\"latitude\":0,\"longitude\":0}],\"geoJson\":\"string\",\"images\":[\"string\"],\"kb\":\"string\",\"label\":\"string\",\"links\":{\"property1\":\"string\",\"property2\":\"string\"},\"literal\":\"string\",\"optional\":{\"property1\":[\"string\"],\"property2\":[\"string\"]},\"pageRank\":0,\"time\":\"string\",\"timeSeries\":\"string\",\"uri\":\"string\",\"user\":\"string\",\"video\":[\"string\"]},\"conceptCloud\":[\"string\"],\"confidence\":0,\"excluded\":true,\"excludedConcepts\":[\"string\"],\"match\":true,\"uri\":\"string\"}],\"text\":\"string\"}]}' |  \\\n  http POST 'http://qanswer-core1.univ-st-etienne.fr/api/linkDev/link/evaluate?dataset=SOME_STRING_VALUE' \\\n  Authorization:REPLACE_KEY_VALUE \\\n  accept:application/json \\\n  content-type:'*/*'"
                    },
                    {
                        "lang": "Python + Python3",
                        "source": "import http.client\n\nconn = http.client.HTTPConnection(\"qanswer-core1.univ-st-etienne.fr\")\n\npayload = \"{\\\"aggregateList\\\":[{\\\"answerContext\\\":{\\\"audio\\\":[\\\"string\\\"],\\\"description\\\":\\\"string\\\",\\\"disambiguation\\\":\\\"string\\\",\\\"geo\\\":[{\\\"latitude\\\":0,\\\"longitude\\\":0}],\\\"geoJson\\\":\\\"string\\\",\\\"images\\\":[\\\"string\\\"],\\\"kb\\\":\\\"string\\\",\\\"label\\\":\\\"string\\\",\\\"links\\\":{\\\"property1\\\":\\\"string\\\",\\\"property2\\\":\\\"string\\\"},\\\"literal\\\":\\\"string\\\",\\\"optional\\\":{\\\"property1\\\":[\\\"string\\\"],\\\"property2\\\":[\\\"string\\\"]},\\\"pageRank\\\":0,\\\"time\\\":\\\"string\\\",\\\"timeSeries\\\":\\\"string\\\",\\\"uri\\\":\\\"string\\\",\\\"user\\\":\\\"string\\\",\\\"video\\\":[\\\"string\\\"]},\\\"excluded\\\":true,\\\"occurance\\\":0,\\\"uri\\\":\\\"string\\\"}],\\\"linksList\\\":[{\\\"links\\\":[{\\\"answerContext\\\":{\\\"audio\\\":[\\\"string\\\"],\\\"description\\\":\\\"string\\\",\\\"disambiguation\\\":\\\"string\\\",\\\"geo\\\":[{\\\"latitude\\\":0,\\\"longitude\\\":0}],\\\"geoJson\\\":\\\"string\\\",\\\"images\\\":[\\\"string\\\"],\\\"kb\\\":\\\"string\\\",\\\"label\\\":\\\"string\\\",\\\"links\\\":{\\\"property1\\\":\\\"string\\\",\\\"property2\\\":\\\"string\\\"},\\\"literal\\\":\\\"string\\\",\\\"optional\\\":{\\\"property1\\\":[\\\"string\\\"],\\\"property2\\\":[\\\"string\\\"]},\\\"pageRank\\\":0,\\\"time\\\":\\\"string\\\",\\\"timeSeries\\\":\\\"string\\\",\\\"uri\\\":\\\"string\\\",\\\"user\\\":\\\"string\\\",\\\"video\\\":[\\\"string\\\"]},\\\"conceptCloud\\\":[\\\"string\\\"],\\\"confidence\\\":0,\\\"excluded\\\":true,\\\"excludedConcepts\\\":[\\\"string\\\"],\\\"match\\\":true,\\\"uri\\\":\\\"string\\\"}],\\\"text\\\":\\\"string\\\"}]}\"\n\nheaders = {\n    'accept': \"application/json\",\n    'content-type': \"*/*\",\n    'Authorization': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"POST\", \"/api/linkDev/link/evaluate?dataset=SOME_STRING_VALUE\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
                    },
                    {
                        "lang": "Php + Curl",
                        "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"http://qanswer-core1.univ-st-etienne.fr/api/linkDev/link/evaluate?dataset=SOME_STRING_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_POSTFIELDS => \"{\\\"aggregateList\\\":[{\\\"answerContext\\\":{\\\"audio\\\":[\\\"string\\\"],\\\"description\\\":\\\"string\\\",\\\"disambiguation\\\":\\\"string\\\",\\\"geo\\\":[{\\\"latitude\\\":0,\\\"longitude\\\":0}],\\\"geoJson\\\":\\\"string\\\",\\\"images\\\":[\\\"string\\\"],\\\"kb\\\":\\\"string\\\",\\\"label\\\":\\\"string\\\",\\\"links\\\":{\\\"property1\\\":\\\"string\\\",\\\"property2\\\":\\\"string\\\"},\\\"literal\\\":\\\"string\\\",\\\"optional\\\":{\\\"property1\\\":[\\\"string\\\"],\\\"property2\\\":[\\\"string\\\"]},\\\"pageRank\\\":0,\\\"time\\\":\\\"string\\\",\\\"timeSeries\\\":\\\"string\\\",\\\"uri\\\":\\\"string\\\",\\\"user\\\":\\\"string\\\",\\\"video\\\":[\\\"string\\\"]},\\\"excluded\\\":true,\\\"occurance\\\":0,\\\"uri\\\":\\\"string\\\"}],\\\"linksList\\\":[{\\\"links\\\":[{\\\"answerContext\\\":{\\\"audio\\\":[\\\"string\\\"],\\\"description\\\":\\\"string\\\",\\\"disambiguation\\\":\\\"string\\\",\\\"geo\\\":[{\\\"latitude\\\":0,\\\"longitude\\\":0}],\\\"geoJson\\\":\\\"string\\\",\\\"images\\\":[\\\"string\\\"],\\\"kb\\\":\\\"string\\\",\\\"label\\\":\\\"string\\\",\\\"links\\\":{\\\"property1\\\":\\\"string\\\",\\\"property2\\\":\\\"string\\\"},\\\"literal\\\":\\\"string\\\",\\\"optional\\\":{\\\"property1\\\":[\\\"string\\\"],\\\"property2\\\":[\\\"string\\\"]},\\\"pageRank\\\":0,\\\"time\\\":\\\"string\\\",\\\"timeSeries\\\":\\\"string\\\",\\\"uri\\\":\\\"string\\\",\\\"user\\\":\\\"string\\\",\\\"video\\\":[\\\"string\\\"]},\\\"conceptCloud\\\":[\\\"string\\\"],\\\"confidence\\\":0,\\\"excluded\\\":true,\\\"excludedConcepts\\\":[\\\"string\\\"],\\\"match\\\":true,\\\"uri\\\":\\\"string\\\"}],\\\"text\\\":\\\"string\\\"}]}\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: REPLACE_KEY_VALUE\",\n    \"accept: application/json\",\n    \"content-type: */*\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
                    },
                    {
                        "lang": "php",
                        "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('http://qanswer-core1.univ-st-etienne.fr/api/linkDev/link/evaluate');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setQueryData([\n  'dataset' => 'SOME_STRING_VALUE'\n]);\n\n$request->setHeaders([\n  'accept' => 'application/json',\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$request->setBody('{\"aggregateList\":[{\"answerContext\":{\"audio\":[\"string\"],\"description\":\"string\",\"disambiguation\":\"string\",\"geo\":[{\"latitude\":0,\"longitude\":0}],\"geoJson\":\"string\",\"images\":[\"string\"],\"kb\":\"string\",\"label\":\"string\",\"links\":{\"property1\":\"string\",\"property2\":\"string\"},\"literal\":\"string\",\"optional\":{\"property1\":[\"string\"],\"property2\":[\"string\"]},\"pageRank\":0,\"time\":\"string\",\"timeSeries\":\"string\",\"uri\":\"string\",\"user\":\"string\",\"video\":[\"string\"]},\"excluded\":true,\"occurance\":0,\"uri\":\"string\"}],\"linksList\":[{\"links\":[{\"answerContext\":{\"audio\":[\"string\"],\"description\":\"string\",\"disambiguation\":\"string\",\"geo\":[{\"latitude\":0,\"longitude\":0}],\"geoJson\":\"string\",\"images\":[\"string\"],\"kb\":\"string\",\"label\":\"string\",\"links\":{\"property1\":\"string\",\"property2\":\"string\"},\"literal\":\"string\",\"optional\":{\"property1\":[\"string\"],\"property2\":[\"string\"]},\"pageRank\":0,\"time\":\"string\",\"timeSeries\":\"string\",\"uri\":\"string\",\"user\":\"string\",\"video\":[\"string\"]},\"conceptCloud\":[\"string\"],\"confidence\":0,\"excluded\":true,\"excludedConcepts\":[\"string\"],\"match\":true,\"uri\":\"string\"}],\"text\":\"string\"}]}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
                    },
                    {
                        "lang": "Php + Http2",
                        "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$body = new http\\Message\\Body;\n$body->append('{\"aggregateList\":[{\"answerContext\":{\"audio\":[\"string\"],\"description\":\"string\",\"disambiguation\":\"string\",\"geo\":[{\"latitude\":0,\"longitude\":0}],\"geoJson\":\"string\",\"images\":[\"string\"],\"kb\":\"string\",\"label\":\"string\",\"links\":{\"property1\":\"string\",\"property2\":\"string\"},\"literal\":\"string\",\"optional\":{\"property1\":[\"string\"],\"property2\":[\"string\"]},\"pageRank\":0,\"time\":\"string\",\"timeSeries\":\"string\",\"uri\":\"string\",\"user\":\"string\",\"video\":[\"string\"]},\"excluded\":true,\"occurance\":0,\"uri\":\"string\"}],\"linksList\":[{\"links\":[{\"answerContext\":{\"audio\":[\"string\"],\"description\":\"string\",\"disambiguation\":\"string\",\"geo\":[{\"latitude\":0,\"longitude\":0}],\"geoJson\":\"string\",\"images\":[\"string\"],\"kb\":\"string\",\"label\":\"string\",\"links\":{\"property1\":\"string\",\"property2\":\"string\"},\"literal\":\"string\",\"optional\":{\"property1\":[\"string\"],\"property2\":[\"string\"]},\"pageRank\":0,\"time\":\"string\",\"timeSeries\":\"string\",\"uri\":\"string\",\"user\":\"string\",\"video\":[\"string\"]},\"conceptCloud\":[\"string\"],\"confidence\":0,\"excluded\":true,\"excludedConcepts\":[\"string\"],\"match\":true,\"uri\":\"string\"}],\"text\":\"string\"}]}');\n\n$request->setRequestUrl('http://qanswer-core1.univ-st-etienne.fr/api/linkDev/link/evaluate');\n$request->setRequestMethod('POST');\n$request->setBody($body);\n\n$request->setQuery(new http\\QueryString([\n  'dataset' => 'SOME_STRING_VALUE'\n]));\n\n$request->setHeaders([\n  'accept' => 'application/json',\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
                    }
                ]
            }
        },
        "/api/linkDev/link/list": {
            "get": {
                "deprecated": false,
                "operationId": "linkListUsingGET",
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "summary": "Loads a new dataset to link. The request contains the dataset name, the Knowledgegraph to link to, the languages and the text,uri pairs",
                "tags": [
                    "link-controller"
                ],
                "x-codeSamples": [
                    {
                        "lang": "Node + Request",
                        "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://qanswer-core1.univ-st-etienne.fr/api/linkDev/link/list',\n  headers: {'content-type': '*/*', Authorization: 'REPLACE_KEY_VALUE'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
                    },
                    {
                        "lang": "Shell + Curl",
                        "source": "curl --request GET \\\n  --url http://qanswer-core1.univ-st-etienne.fr/api/linkDev/link/list \\\n  --header 'Authorization: REPLACE_KEY_VALUE' \\\n  --header 'content-type: */*'"
                    },
                    {
                        "lang": "Shell + Httpie",
                        "source": "http GET http://qanswer-core1.univ-st-etienne.fr/api/linkDev/link/list \\\n  Authorization:REPLACE_KEY_VALUE \\\n  content-type:'*/*'"
                    },
                    {
                        "lang": "Python + Python3",
                        "source": "import http.client\n\nconn = http.client.HTTPConnection(\"qanswer-core1.univ-st-etienne.fr\")\n\nheaders = {\n    'content-type': \"*/*\",\n    'Authorization': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"GET\", \"/api/linkDev/link/list\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
                    },
                    {
                        "lang": "Php + Curl",
                        "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"http://qanswer-core1.univ-st-etienne.fr/api/linkDev/link/list\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: REPLACE_KEY_VALUE\",\n    \"content-type: */*\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
                    },
                    {
                        "lang": "php",
                        "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('http://qanswer-core1.univ-st-etienne.fr/api/linkDev/link/list');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setHeaders([\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
                    },
                    {
                        "lang": "Php + Http2",
                        "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('http://qanswer-core1.univ-st-etienne.fr/api/linkDev/link/list');\n$request->setRequestMethod('GET');\n$request->setHeaders([\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
                    }
                ]
            }
        },
        "/api/linkDev/link/result": {
            "get": {
                "deprecated": false,
                "operationId": "linkResultUsingGET",
                "parameters": [
                    {
                        "description": "dataset",
                        "in": "query",
                        "name": "dataset",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "summary": "linkResult",
                "tags": [
                    "link-controller"
                ],
                "x-codeSamples": [
                    {
                        "lang": "Node + Request",
                        "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://qanswer-core1.univ-st-etienne.fr/api/linkDev/link/result',\n  qs: {dataset: 'SOME_STRING_VALUE'},\n  headers: {'content-type': '*/*', Authorization: 'REPLACE_KEY_VALUE'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
                    },
                    {
                        "lang": "Shell + Curl",
                        "source": "curl --request GET \\\n  --url 'http://qanswer-core1.univ-st-etienne.fr/api/linkDev/link/result?dataset=SOME_STRING_VALUE' \\\n  --header 'Authorization: REPLACE_KEY_VALUE' \\\n  --header 'content-type: */*'"
                    },
                    {
                        "lang": "Shell + Httpie",
                        "source": "http GET 'http://qanswer-core1.univ-st-etienne.fr/api/linkDev/link/result?dataset=SOME_STRING_VALUE' \\\n  Authorization:REPLACE_KEY_VALUE \\\n  content-type:'*/*'"
                    },
                    {
                        "lang": "Python + Python3",
                        "source": "import http.client\n\nconn = http.client.HTTPConnection(\"qanswer-core1.univ-st-etienne.fr\")\n\nheaders = {\n    'content-type': \"*/*\",\n    'Authorization': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"GET\", \"/api/linkDev/link/result?dataset=SOME_STRING_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
                    },
                    {
                        "lang": "Php + Curl",
                        "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"http://qanswer-core1.univ-st-etienne.fr/api/linkDev/link/result?dataset=SOME_STRING_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: REPLACE_KEY_VALUE\",\n    \"content-type: */*\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
                    },
                    {
                        "lang": "php",
                        "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('http://qanswer-core1.univ-st-etienne.fr/api/linkDev/link/result');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setQueryData([\n  'dataset' => 'SOME_STRING_VALUE'\n]);\n\n$request->setHeaders([\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
                    },
                    {
                        "lang": "Php + Http2",
                        "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('http://qanswer-core1.univ-st-etienne.fr/api/linkDev/link/result');\n$request->setRequestMethod('GET');\n$request->setQuery(new http\\QueryString([\n  'dataset' => 'SOME_STRING_VALUE'\n]));\n\n$request->setHeaders([\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
                    }
                ]
            }
        },
        "/api/linkDev/link/train": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "deprecated": false,
                "operationId": "linkTrainUsingPOST",
                "parameters": [
                    {
                        "description": "dataset",
                        "in": "query",
                        "name": "dataset",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "summary": "linkTrain",
                "tags": [
                    "link-controller"
                ],
                "x-codeSamples": [
                    {
                        "lang": "Node + Request",
                        "source": "const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'http://qanswer-core1.univ-st-etienne.fr/api/linkDev/link/train',\n  qs: {dataset: 'SOME_STRING_VALUE'},\n  headers: {\n    accept: 'application/json',\n    'content-type': '*/*',\n    Authorization: 'REPLACE_KEY_VALUE'\n  }\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
                    },
                    {
                        "lang": "Shell + Curl",
                        "source": "curl --request POST \\\n  --url 'http://qanswer-core1.univ-st-etienne.fr/api/linkDev/link/train?dataset=SOME_STRING_VALUE' \\\n  --header 'Authorization: REPLACE_KEY_VALUE' \\\n  --header 'accept: application/json' \\\n  --header 'content-type: */*'"
                    },
                    {
                        "lang": "Shell + Httpie",
                        "source": "http POST 'http://qanswer-core1.univ-st-etienne.fr/api/linkDev/link/train?dataset=SOME_STRING_VALUE' \\\n  Authorization:REPLACE_KEY_VALUE \\\n  accept:application/json \\\n  content-type:'*/*'"
                    },
                    {
                        "lang": "Python + Python3",
                        "source": "import http.client\n\nconn = http.client.HTTPConnection(\"qanswer-core1.univ-st-etienne.fr\")\n\nheaders = {\n    'accept': \"application/json\",\n    'content-type': \"*/*\",\n    'Authorization': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"POST\", \"/api/linkDev/link/train?dataset=SOME_STRING_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
                    },
                    {
                        "lang": "Php + Curl",
                        "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"http://qanswer-core1.univ-st-etienne.fr/api/linkDev/link/train?dataset=SOME_STRING_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: REPLACE_KEY_VALUE\",\n    \"accept: application/json\",\n    \"content-type: */*\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
                    },
                    {
                        "lang": "php",
                        "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('http://qanswer-core1.univ-st-etienne.fr/api/linkDev/link/train');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setQueryData([\n  'dataset' => 'SOME_STRING_VALUE'\n]);\n\n$request->setHeaders([\n  'accept' => 'application/json',\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
                    },
                    {
                        "lang": "Php + Http2",
                        "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('http://qanswer-core1.univ-st-etienne.fr/api/linkDev/link/train');\n$request->setRequestMethod('POST');\n$request->setQuery(new http\\QueryString([\n  'dataset' => 'SOME_STRING_VALUE'\n]));\n\n$request->setHeaders([\n  'accept' => 'application/json',\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
                    }
                ]
            }
        },
        "/api/linkDev/link/upload": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "deprecated": false,
                "operationId": "linkLoadUsingPOST",
                "parameters": [
                    {
                        "description": "datasetPairs",
                        "in": "body",
                        "name": "datasetPairs",
                        "required": true,
                        "schema": {
                            "properties": {
                                "dataset": {
                                    "type": "string"
                                },
                                "knowledgebase": {
                                    "type": "string"
                                },
                                "language": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "pairs": {
                                    "items": {
                                        "$ref": "#/definitions/Pair"
                                    },
                                    "type": "array"
                                },
                                "user": {
                                    "type": "string"
                                }
                            },
                            "title": "DatasetPairs",
                            "type": "object"
                        }
                    }
                ],
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "summary": "Loads a new dataset to link. The request contains the dataset name, the Knowledgegraph to link to, the languages and the text,uri pairs",
                "tags": [
                    "link-controller"
                ],
                "x-codeSamples": [
                    {
                        "lang": "Node + Request",
                        "source": "const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'http://qanswer-core1.univ-st-etienne.fr/api/linkDev/link/upload',\n  headers: {\n    accept: 'application/json',\n    'content-type': '*/*',\n    Authorization: 'REPLACE_KEY_VALUE'\n  },\n  body: {\n    dataset: 'string',\n    knowledgebase: 'string',\n    language: ['string'],\n    pairs: [{text: 'string', uris: ['string']}],\n    user: 'string'\n  },\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
                    },
                    {
                        "lang": "Shell + Curl",
                        "source": "curl --request POST \\\n  --url http://qanswer-core1.univ-st-etienne.fr/api/linkDev/link/upload \\\n  --header 'Authorization: REPLACE_KEY_VALUE' \\\n  --header 'accept: application/json' \\\n  --header 'content-type: */*' \\\n  --data '{\"dataset\":\"string\",\"knowledgebase\":\"string\",\"language\":[\"string\"],\"pairs\":[{\"text\":\"string\",\"uris\":[\"string\"]}],\"user\":\"string\"}'"
                    },
                    {
                        "lang": "Shell + Httpie",
                        "source": "echo '{\"dataset\":\"string\",\"knowledgebase\":\"string\",\"language\":[\"string\"],\"pairs\":[{\"text\":\"string\",\"uris\":[\"string\"]}],\"user\":\"string\"}' |  \\\n  http POST http://qanswer-core1.univ-st-etienne.fr/api/linkDev/link/upload \\\n  Authorization:REPLACE_KEY_VALUE \\\n  accept:application/json \\\n  content-type:'*/*'"
                    },
                    {
                        "lang": "Python + Python3",
                        "source": "import http.client\n\nconn = http.client.HTTPConnection(\"qanswer-core1.univ-st-etienne.fr\")\n\npayload = \"{\\\"dataset\\\":\\\"string\\\",\\\"knowledgebase\\\":\\\"string\\\",\\\"language\\\":[\\\"string\\\"],\\\"pairs\\\":[{\\\"text\\\":\\\"string\\\",\\\"uris\\\":[\\\"string\\\"]}],\\\"user\\\":\\\"string\\\"}\"\n\nheaders = {\n    'accept': \"application/json\",\n    'content-type': \"*/*\",\n    'Authorization': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"POST\", \"/api/linkDev/link/upload\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
                    },
                    {
                        "lang": "Php + Curl",
                        "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"http://qanswer-core1.univ-st-etienne.fr/api/linkDev/link/upload\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_POSTFIELDS => \"{\\\"dataset\\\":\\\"string\\\",\\\"knowledgebase\\\":\\\"string\\\",\\\"language\\\":[\\\"string\\\"],\\\"pairs\\\":[{\\\"text\\\":\\\"string\\\",\\\"uris\\\":[\\\"string\\\"]}],\\\"user\\\":\\\"string\\\"}\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: REPLACE_KEY_VALUE\",\n    \"accept: application/json\",\n    \"content-type: */*\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
                    },
                    {
                        "lang": "php",
                        "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('http://qanswer-core1.univ-st-etienne.fr/api/linkDev/link/upload');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setHeaders([\n  'accept' => 'application/json',\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$request->setBody('{\"dataset\":\"string\",\"knowledgebase\":\"string\",\"language\":[\"string\"],\"pairs\":[{\"text\":\"string\",\"uris\":[\"string\"]}],\"user\":\"string\"}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
                    },
                    {
                        "lang": "Php + Http2",
                        "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$body = new http\\Message\\Body;\n$body->append('{\"dataset\":\"string\",\"knowledgebase\":\"string\",\"language\":[\"string\"],\"pairs\":[{\"text\":\"string\",\"uris\":[\"string\"]}],\"user\":\"string\"}');\n\n$request->setRequestUrl('http://qanswer-core1.univ-st-etienne.fr/api/linkDev/link/upload');\n$request->setRequestMethod('POST');\n$request->setBody($body);\n\n$request->setHeaders([\n  'accept' => 'application/json',\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
                    }
                ]
            }
        },
        "/api/linkDev/link2": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "deprecated": false,
                "operationId": "link2UsingPOST",
                "parameters": [
                    {
                        "description": "link",
                        "in": "body",
                        "name": "link",
                        "required": true,
                        "schema": {
                            "properties": {
                                "knowledgebase": {
                                    "type": "string"
                                },
                                "language": {
                                    "type": "string"
                                },
                                "limit": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "range": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "texts": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "user": {
                                    "type": "string"
                                }
                            },
                            "title": "LinkRange",
                            "type": "object"
                        }
                    }
                ],
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "summary": "link2",
                "tags": [
                    "link-controller"
                ],
                "x-codeSamples": [
                    {
                        "lang": "Node + Request",
                        "source": "const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'http://qanswer-core1.univ-st-etienne.fr/api/linkDev/link2',\n  headers: {\n    accept: 'application/json',\n    'content-type': '*/*',\n    Authorization: 'REPLACE_KEY_VALUE'\n  },\n  body: {\n    knowledgebase: 'string',\n    language: 'string',\n    limit: 0,\n    range: ['string'],\n    texts: ['string'],\n    user: 'string'\n  },\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
                    },
                    {
                        "lang": "Shell + Curl",
                        "source": "curl --request POST \\\n  --url http://qanswer-core1.univ-st-etienne.fr/api/linkDev/link2 \\\n  --header 'Authorization: REPLACE_KEY_VALUE' \\\n  --header 'accept: application/json' \\\n  --header 'content-type: */*' \\\n  --data '{\"knowledgebase\":\"string\",\"language\":\"string\",\"limit\":0,\"range\":[\"string\"],\"texts\":[\"string\"],\"user\":\"string\"}'"
                    },
                    {
                        "lang": "Shell + Httpie",
                        "source": "echo '{\"knowledgebase\":\"string\",\"language\":\"string\",\"limit\":0,\"range\":[\"string\"],\"texts\":[\"string\"],\"user\":\"string\"}' |  \\\n  http POST http://qanswer-core1.univ-st-etienne.fr/api/linkDev/link2 \\\n  Authorization:REPLACE_KEY_VALUE \\\n  accept:application/json \\\n  content-type:'*/*'"
                    },
                    {
                        "lang": "Python + Python3",
                        "source": "import http.client\n\nconn = http.client.HTTPConnection(\"qanswer-core1.univ-st-etienne.fr\")\n\npayload = \"{\\\"knowledgebase\\\":\\\"string\\\",\\\"language\\\":\\\"string\\\",\\\"limit\\\":0,\\\"range\\\":[\\\"string\\\"],\\\"texts\\\":[\\\"string\\\"],\\\"user\\\":\\\"string\\\"}\"\n\nheaders = {\n    'accept': \"application/json\",\n    'content-type': \"*/*\",\n    'Authorization': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"POST\", \"/api/linkDev/link2\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
                    },
                    {
                        "lang": "Php + Curl",
                        "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"http://qanswer-core1.univ-st-etienne.fr/api/linkDev/link2\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_POSTFIELDS => \"{\\\"knowledgebase\\\":\\\"string\\\",\\\"language\\\":\\\"string\\\",\\\"limit\\\":0,\\\"range\\\":[\\\"string\\\"],\\\"texts\\\":[\\\"string\\\"],\\\"user\\\":\\\"string\\\"}\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: REPLACE_KEY_VALUE\",\n    \"accept: application/json\",\n    \"content-type: */*\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
                    },
                    {
                        "lang": "php",
                        "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('http://qanswer-core1.univ-st-etienne.fr/api/linkDev/link2');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setHeaders([\n  'accept' => 'application/json',\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$request->setBody('{\"knowledgebase\":\"string\",\"language\":\"string\",\"limit\":0,\"range\":[\"string\"],\"texts\":[\"string\"],\"user\":\"string\"}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
                    },
                    {
                        "lang": "Php + Http2",
                        "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$body = new http\\Message\\Body;\n$body->append('{\"knowledgebase\":\"string\",\"language\":\"string\",\"limit\":0,\"range\":[\"string\"],\"texts\":[\"string\"],\"user\":\"string\"}');\n\n$request->setRequestUrl('http://qanswer-core1.univ-st-etienne.fr/api/linkDev/link2');\n$request->setRequestMethod('POST');\n$request->setBody($body);\n\n$request->setHeaders([\n  'accept' => 'application/json',\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
                    }
                ]
            }
        },
        "/api/linkDev/link3": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "deprecated": false,
                "operationId": "link3UsingPOST",
                "parameters": [
                    {
                        "description": "link",
                        "in": "body",
                        "name": "link",
                        "required": true,
                        "schema": {
                            "properties": {
                                "dataset": {
                                    "type": "string"
                                },
                                "limit": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "texts": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            },
                            "title": "LinkEnchanced",
                            "type": "object"
                        }
                    }
                ],
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "summary": "link3",
                "tags": [
                    "link-controller"
                ],
                "x-codeSamples": [
                    {
                        "lang": "Node + Request",
                        "source": "const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'http://qanswer-core1.univ-st-etienne.fr/api/linkDev/link3',\n  headers: {\n    accept: 'application/json',\n    'content-type': '*/*',\n    Authorization: 'REPLACE_KEY_VALUE'\n  },\n  body: {dataset: 'string', limit: 0, texts: ['string']},\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
                    },
                    {
                        "lang": "Shell + Curl",
                        "source": "curl --request POST \\\n  --url http://qanswer-core1.univ-st-etienne.fr/api/linkDev/link3 \\\n  --header 'Authorization: REPLACE_KEY_VALUE' \\\n  --header 'accept: application/json' \\\n  --header 'content-type: */*' \\\n  --data '{\"dataset\":\"string\",\"limit\":0,\"texts\":[\"string\"]}'"
                    },
                    {
                        "lang": "Shell + Httpie",
                        "source": "echo '{\"dataset\":\"string\",\"limit\":0,\"texts\":[\"string\"]}' |  \\\n  http POST http://qanswer-core1.univ-st-etienne.fr/api/linkDev/link3 \\\n  Authorization:REPLACE_KEY_VALUE \\\n  accept:application/json \\\n  content-type:'*/*'"
                    },
                    {
                        "lang": "Python + Python3",
                        "source": "import http.client\n\nconn = http.client.HTTPConnection(\"qanswer-core1.univ-st-etienne.fr\")\n\npayload = \"{\\\"dataset\\\":\\\"string\\\",\\\"limit\\\":0,\\\"texts\\\":[\\\"string\\\"]}\"\n\nheaders = {\n    'accept': \"application/json\",\n    'content-type': \"*/*\",\n    'Authorization': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"POST\", \"/api/linkDev/link3\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
                    },
                    {
                        "lang": "Php + Curl",
                        "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"http://qanswer-core1.univ-st-etienne.fr/api/linkDev/link3\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_POSTFIELDS => \"{\\\"dataset\\\":\\\"string\\\",\\\"limit\\\":0,\\\"texts\\\":[\\\"string\\\"]}\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: REPLACE_KEY_VALUE\",\n    \"accept: application/json\",\n    \"content-type: */*\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
                    },
                    {
                        "lang": "php",
                        "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('http://qanswer-core1.univ-st-etienne.fr/api/linkDev/link3');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setHeaders([\n  'accept' => 'application/json',\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$request->setBody('{\"dataset\":\"string\",\"limit\":0,\"texts\":[\"string\"]}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
                    },
                    {
                        "lang": "Php + Http2",
                        "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$body = new http\\Message\\Body;\n$body->append('{\"dataset\":\"string\",\"limit\":0,\"texts\":[\"string\"]}');\n\n$request->setRequestUrl('http://qanswer-core1.univ-st-etienne.fr/api/linkDev/link3');\n$request->setRequestMethod('POST');\n$request->setBody($body);\n\n$request->setHeaders([\n  'accept' => 'application/json',\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
                    }
                ]
            }
        },
        "/api/linkDev/link3/generate_features": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "deprecated": false,
                "operationId": "link3generateFeaturesUsingPOST",
                "parameters": [
                    {
                        "description": "dataset",
                        "in": "query",
                        "name": "dataset",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "summary": "link3generateFeatures",
                "tags": [
                    "link-controller"
                ],
                "x-codeSamples": [
                    {
                        "lang": "Node + Request",
                        "source": "const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'http://qanswer-core1.univ-st-etienne.fr/api/linkDev/link3/generate_features',\n  qs: {dataset: 'SOME_STRING_VALUE'},\n  headers: {\n    accept: 'application/json',\n    'content-type': '*/*',\n    Authorization: 'REPLACE_KEY_VALUE'\n  }\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
                    },
                    {
                        "lang": "Shell + Curl",
                        "source": "curl --request POST \\\n  --url 'http://qanswer-core1.univ-st-etienne.fr/api/linkDev/link3/generate_features?dataset=SOME_STRING_VALUE' \\\n  --header 'Authorization: REPLACE_KEY_VALUE' \\\n  --header 'accept: application/json' \\\n  --header 'content-type: */*'"
                    },
                    {
                        "lang": "Shell + Httpie",
                        "source": "http POST 'http://qanswer-core1.univ-st-etienne.fr/api/linkDev/link3/generate_features?dataset=SOME_STRING_VALUE' \\\n  Authorization:REPLACE_KEY_VALUE \\\n  accept:application/json \\\n  content-type:'*/*'"
                    },
                    {
                        "lang": "Python + Python3",
                        "source": "import http.client\n\nconn = http.client.HTTPConnection(\"qanswer-core1.univ-st-etienne.fr\")\n\nheaders = {\n    'accept': \"application/json\",\n    'content-type': \"*/*\",\n    'Authorization': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"POST\", \"/api/linkDev/link3/generate_features?dataset=SOME_STRING_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
                    },
                    {
                        "lang": "Php + Curl",
                        "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"http://qanswer-core1.univ-st-etienne.fr/api/linkDev/link3/generate_features?dataset=SOME_STRING_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: REPLACE_KEY_VALUE\",\n    \"accept: application/json\",\n    \"content-type: */*\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
                    },
                    {
                        "lang": "php",
                        "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('http://qanswer-core1.univ-st-etienne.fr/api/linkDev/link3/generate_features');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setQueryData([\n  'dataset' => 'SOME_STRING_VALUE'\n]);\n\n$request->setHeaders([\n  'accept' => 'application/json',\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
                    },
                    {
                        "lang": "Php + Http2",
                        "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('http://qanswer-core1.univ-st-etienne.fr/api/linkDev/link3/generate_features');\n$request->setRequestMethod('POST');\n$request->setQuery(new http\\QueryString([\n  'dataset' => 'SOME_STRING_VALUE'\n]));\n\n$request->setHeaders([\n  'accept' => 'application/json',\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
                    }
                ]
            }
        },
        "/api/linkDev/link3/train": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "deprecated": false,
                "operationId": "link3TrainUsingPOST",
                "parameters": [
                    {
                        "description": "dataset",
                        "in": "query",
                        "name": "dataset",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "summary": "link3Train",
                "tags": [
                    "link-controller"
                ],
                "x-codeSamples": [
                    {
                        "lang": "Node + Request",
                        "source": "const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'http://qanswer-core1.univ-st-etienne.fr/api/linkDev/link3/train',\n  qs: {dataset: 'SOME_STRING_VALUE'},\n  headers: {\n    accept: 'application/json',\n    'content-type': '*/*',\n    Authorization: 'REPLACE_KEY_VALUE'\n  }\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
                    },
                    {
                        "lang": "Shell + Curl",
                        "source": "curl --request POST \\\n  --url 'http://qanswer-core1.univ-st-etienne.fr/api/linkDev/link3/train?dataset=SOME_STRING_VALUE' \\\n  --header 'Authorization: REPLACE_KEY_VALUE' \\\n  --header 'accept: application/json' \\\n  --header 'content-type: */*'"
                    },
                    {
                        "lang": "Shell + Httpie",
                        "source": "http POST 'http://qanswer-core1.univ-st-etienne.fr/api/linkDev/link3/train?dataset=SOME_STRING_VALUE' \\\n  Authorization:REPLACE_KEY_VALUE \\\n  accept:application/json \\\n  content-type:'*/*'"
                    },
                    {
                        "lang": "Python + Python3",
                        "source": "import http.client\n\nconn = http.client.HTTPConnection(\"qanswer-core1.univ-st-etienne.fr\")\n\nheaders = {\n    'accept': \"application/json\",\n    'content-type': \"*/*\",\n    'Authorization': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"POST\", \"/api/linkDev/link3/train?dataset=SOME_STRING_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
                    },
                    {
                        "lang": "Php + Curl",
                        "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"http://qanswer-core1.univ-st-etienne.fr/api/linkDev/link3/train?dataset=SOME_STRING_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: REPLACE_KEY_VALUE\",\n    \"accept: application/json\",\n    \"content-type: */*\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
                    },
                    {
                        "lang": "php",
                        "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('http://qanswer-core1.univ-st-etienne.fr/api/linkDev/link3/train');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setQueryData([\n  'dataset' => 'SOME_STRING_VALUE'\n]);\n\n$request->setHeaders([\n  'accept' => 'application/json',\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
                    },
                    {
                        "lang": "Php + Http2",
                        "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('http://qanswer-core1.univ-st-etienne.fr/api/linkDev/link3/train');\n$request->setRequestMethod('POST');\n$request->setQuery(new http\\QueryString([\n  'dataset' => 'SOME_STRING_VALUE'\n]));\n\n$request->setHeaders([\n  'accept' => 'application/json',\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
                    }
                ]
            }
        },
        "/api/linkDev/link3/upload": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "deprecated": false,
                "operationId": "link3UploadUsingPOST",
                "parameters": [
                    {
                        "description": "datasetPairs",
                        "in": "body",
                        "name": "datasetPairs",
                        "required": true,
                        "schema": {
                            "properties": {
                                "dataset": {
                                    "type": "string"
                                },
                                "knowledgebase": {
                                    "type": "string"
                                },
                                "language": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "pairs": {
                                    "items": {
                                        "$ref": "#/definitions/Pair"
                                    },
                                    "type": "array"
                                },
                                "user": {
                                    "type": "string"
                                }
                            },
                            "title": "DatasetPairs",
                            "type": "object"
                        }
                    }
                ],
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "summary": "link3Upload",
                "tags": [
                    "link-controller"
                ],
                "x-codeSamples": [
                    {
                        "lang": "Node + Request",
                        "source": "const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'http://qanswer-core1.univ-st-etienne.fr/api/linkDev/link3/upload',\n  headers: {\n    accept: 'application/json',\n    'content-type': '*/*',\n    Authorization: 'REPLACE_KEY_VALUE'\n  },\n  body: {\n    dataset: 'string',\n    knowledgebase: 'string',\n    language: ['string'],\n    pairs: [{text: 'string', uris: ['string']}],\n    user: 'string'\n  },\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
                    },
                    {
                        "lang": "Shell + Curl",
                        "source": "curl --request POST \\\n  --url http://qanswer-core1.univ-st-etienne.fr/api/linkDev/link3/upload \\\n  --header 'Authorization: REPLACE_KEY_VALUE' \\\n  --header 'accept: application/json' \\\n  --header 'content-type: */*' \\\n  --data '{\"dataset\":\"string\",\"knowledgebase\":\"string\",\"language\":[\"string\"],\"pairs\":[{\"text\":\"string\",\"uris\":[\"string\"]}],\"user\":\"string\"}'"
                    },
                    {
                        "lang": "Shell + Httpie",
                        "source": "echo '{\"dataset\":\"string\",\"knowledgebase\":\"string\",\"language\":[\"string\"],\"pairs\":[{\"text\":\"string\",\"uris\":[\"string\"]}],\"user\":\"string\"}' |  \\\n  http POST http://qanswer-core1.univ-st-etienne.fr/api/linkDev/link3/upload \\\n  Authorization:REPLACE_KEY_VALUE \\\n  accept:application/json \\\n  content-type:'*/*'"
                    },
                    {
                        "lang": "Python + Python3",
                        "source": "import http.client\n\nconn = http.client.HTTPConnection(\"qanswer-core1.univ-st-etienne.fr\")\n\npayload = \"{\\\"dataset\\\":\\\"string\\\",\\\"knowledgebase\\\":\\\"string\\\",\\\"language\\\":[\\\"string\\\"],\\\"pairs\\\":[{\\\"text\\\":\\\"string\\\",\\\"uris\\\":[\\\"string\\\"]}],\\\"user\\\":\\\"string\\\"}\"\n\nheaders = {\n    'accept': \"application/json\",\n    'content-type': \"*/*\",\n    'Authorization': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"POST\", \"/api/linkDev/link3/upload\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
                    },
                    {
                        "lang": "Php + Curl",
                        "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"http://qanswer-core1.univ-st-etienne.fr/api/linkDev/link3/upload\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_POSTFIELDS => \"{\\\"dataset\\\":\\\"string\\\",\\\"knowledgebase\\\":\\\"string\\\",\\\"language\\\":[\\\"string\\\"],\\\"pairs\\\":[{\\\"text\\\":\\\"string\\\",\\\"uris\\\":[\\\"string\\\"]}],\\\"user\\\":\\\"string\\\"}\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: REPLACE_KEY_VALUE\",\n    \"accept: application/json\",\n    \"content-type: */*\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
                    },
                    {
                        "lang": "php",
                        "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('http://qanswer-core1.univ-st-etienne.fr/api/linkDev/link3/upload');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setHeaders([\n  'accept' => 'application/json',\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$request->setBody('{\"dataset\":\"string\",\"knowledgebase\":\"string\",\"language\":[\"string\"],\"pairs\":[{\"text\":\"string\",\"uris\":[\"string\"]}],\"user\":\"string\"}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
                    },
                    {
                        "lang": "Php + Http2",
                        "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$body = new http\\Message\\Body;\n$body->append('{\"dataset\":\"string\",\"knowledgebase\":\"string\",\"language\":[\"string\"],\"pairs\":[{\"text\":\"string\",\"uris\":[\"string\"]}],\"user\":\"string\"}');\n\n$request->setRequestUrl('http://qanswer-core1.univ-st-etienne.fr/api/linkDev/link3/upload');\n$request->setRequestMethod('POST');\n$request->setBody($body);\n\n$request->setHeaders([\n  'accept' => 'application/json',\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
                    }
                ]
            }
        },
        "/api/linkDev/link_kohesio": {
            "get": {
                "deprecated": false,
                "operationId": "linkKohesioUsingGET",
                "parameters": [
                    {
                        "description": "dataset",
                        "in": "query",
                        "name": "dataset",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "text",
                        "in": "query",
                        "name": "text",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/Link"
                            },
                            "type": "array"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "summary": "linkKohesio",
                "tags": [
                    "link-controller"
                ],
                "x-codeSamples": [
                    {
                        "lang": "Node + Request",
                        "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://qanswer-core1.univ-st-etienne.fr/api/linkDev/link_kohesio',\n  qs: {dataset: 'SOME_STRING_VALUE', text: 'SOME_STRING_VALUE'},\n  headers: {'content-type': '*/*', Authorization: 'REPLACE_KEY_VALUE'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
                    },
                    {
                        "lang": "Shell + Curl",
                        "source": "curl --request GET \\\n  --url 'http://qanswer-core1.univ-st-etienne.fr/api/linkDev/link_kohesio?dataset=SOME_STRING_VALUE&text=SOME_STRING_VALUE' \\\n  --header 'Authorization: REPLACE_KEY_VALUE' \\\n  --header 'content-type: */*'"
                    },
                    {
                        "lang": "Shell + Httpie",
                        "source": "http GET 'http://qanswer-core1.univ-st-etienne.fr/api/linkDev/link_kohesio?dataset=SOME_STRING_VALUE&text=SOME_STRING_VALUE' \\\n  Authorization:REPLACE_KEY_VALUE \\\n  content-type:'*/*'"
                    },
                    {
                        "lang": "Python + Python3",
                        "source": "import http.client\n\nconn = http.client.HTTPConnection(\"qanswer-core1.univ-st-etienne.fr\")\n\nheaders = {\n    'content-type': \"*/*\",\n    'Authorization': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"GET\", \"/api/linkDev/link_kohesio?dataset=SOME_STRING_VALUE&text=SOME_STRING_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
                    },
                    {
                        "lang": "Php + Curl",
                        "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"http://qanswer-core1.univ-st-etienne.fr/api/linkDev/link_kohesio?dataset=SOME_STRING_VALUE&text=SOME_STRING_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: REPLACE_KEY_VALUE\",\n    \"content-type: */*\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
                    },
                    {
                        "lang": "php",
                        "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('http://qanswer-core1.univ-st-etienne.fr/api/linkDev/link_kohesio');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setQueryData([\n  'dataset' => 'SOME_STRING_VALUE',\n  'text' => 'SOME_STRING_VALUE'\n]);\n\n$request->setHeaders([\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
                    },
                    {
                        "lang": "Php + Http2",
                        "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('http://qanswer-core1.univ-st-etienne.fr/api/linkDev/link_kohesio');\n$request->setRequestMethod('GET');\n$request->setQuery(new http\\QueryString([\n  'dataset' => 'SOME_STRING_VALUE',\n  'text' => 'SOME_STRING_VALUE'\n]));\n\n$request->setHeaders([\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
                    }
                ]
            }
        },
        "/api/loader/csv": {
            "post": {
                "consumes": [
                    "multipart/form-data"
                ],
                "deprecated": false,
                "operationId": "uploadCsvUsingPOST",
                "parameters": [
                    {
                        "description": "columnLabel",
                        "in": "query",
                        "name": "columnLabel",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "dataset",
                        "in": "query",
                        "name": "dataset",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "datatypes",
                        "in": "query",
                        "name": "datatypes",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "file",
                        "in": "formData",
                        "name": "file",
                        "required": true,
                        "type": "file"
                    },
                    {
                        "description": "headerSynonym",
                        "in": "query",
                        "name": "headerSynonym",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "collectionFormat": "multi",
                        "default": "en,de,it,fr",
                        "description": "languages",
                        "in": "query",
                        "items": {
                            "type": "string"
                        },
                        "name": "languages",
                        "required": false,
                        "type": "array"
                    },
                    {
                        "description": "logo",
                        "in": "formData",
                        "name": "logo",
                        "required": false,
                        "type": "file"
                    },
                    {
                        "default": ",",
                        "description": "separator",
                        "in": "query",
                        "name": "separator",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "collectionFormat": "multi",
                        "description": "splitColumns",
                        "in": "query",
                        "items": {
                            "type": "string"
                        },
                        "name": "splitColumns",
                        "required": false,
                        "type": "array"
                    },
                    {
                        "default": ",",
                        "description": "splitSeparator",
                        "in": "query",
                        "name": "splitSeparator",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "summary": "Loads a CSV and creates out of it a knowledge graph",
                "tags": [
                    "csv-loader-controller"
                ],
                "x-codeSamples": [
                    {
                        "lang": "Node + Request",
                        "source": "const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'http://qanswer-core1.univ-st-etienne.fr/api/loader/csv',\n  qs: {\n    columnLabel: 'SOME_STRING_VALUE',\n    dataset: 'SOME_STRING_VALUE',\n    datatypes: 'SOME_STRING_VALUE',\n    headerSynonym: 'SOME_STRING_VALUE',\n    languages: 'en,de,it,fr',\n    separator: ',',\n    splitColumns: 'SOME_ARRAY_VALUE',\n    splitSeparator: ','\n  },\n  headers: {\n    accept: 'multipart/form-data',\n    'content-type': 'application/json',\n    Authorization: 'REPLACE_KEY_VALUE'\n  }\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
                    },
                    {
                        "lang": "Shell + Curl",
                        "source": "curl --request POST \\\n  --url 'http://qanswer-core1.univ-st-etienne.fr/api/loader/csv?columnLabel=SOME_STRING_VALUE&dataset=SOME_STRING_VALUE&datatypes=SOME_STRING_VALUE&headerSynonym=SOME_STRING_VALUE&languages=en%2Cde%2Cit%2Cfr&separator=%2C&splitColumns=SOME_ARRAY_VALUE&splitSeparator=%2C' \\\n  --header 'Authorization: REPLACE_KEY_VALUE' \\\n  --header 'accept: multipart/form-data' \\\n  --header 'content-type: application/json'"
                    },
                    {
                        "lang": "Shell + Httpie",
                        "source": "http POST 'http://qanswer-core1.univ-st-etienne.fr/api/loader/csv?columnLabel=SOME_STRING_VALUE&dataset=SOME_STRING_VALUE&datatypes=SOME_STRING_VALUE&headerSynonym=SOME_STRING_VALUE&languages=en%2Cde%2Cit%2Cfr&separator=%2C&splitColumns=SOME_ARRAY_VALUE&splitSeparator=%2C' \\\n  Authorization:REPLACE_KEY_VALUE \\\n  accept:multipart/form-data \\\n  content-type:application/json"
                    },
                    {
                        "lang": "Python + Python3",
                        "source": "import http.client\n\nconn = http.client.HTTPConnection(\"qanswer-core1.univ-st-etienne.fr\")\n\nheaders = {\n    'accept': \"multipart/form-data\",\n    'content-type': \"application/json\",\n    'Authorization': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"POST\", \"/api/loader/csv?columnLabel=SOME_STRING_VALUE&dataset=SOME_STRING_VALUE&datatypes=SOME_STRING_VALUE&headerSynonym=SOME_STRING_VALUE&languages=en%2Cde%2Cit%2Cfr&separator=%2C&splitColumns=SOME_ARRAY_VALUE&splitSeparator=%2C\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
                    },
                    {
                        "lang": "Php + Curl",
                        "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"http://qanswer-core1.univ-st-etienne.fr/api/loader/csv?columnLabel=SOME_STRING_VALUE&dataset=SOME_STRING_VALUE&datatypes=SOME_STRING_VALUE&headerSynonym=SOME_STRING_VALUE&languages=en%2Cde%2Cit%2Cfr&separator=%2C&splitColumns=SOME_ARRAY_VALUE&splitSeparator=%2C\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: REPLACE_KEY_VALUE\",\n    \"accept: multipart/form-data\",\n    \"content-type: application/json\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
                    },
                    {
                        "lang": "php",
                        "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('http://qanswer-core1.univ-st-etienne.fr/api/loader/csv');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setQueryData([\n  'columnLabel' => 'SOME_STRING_VALUE',\n  'dataset' => 'SOME_STRING_VALUE',\n  'datatypes' => 'SOME_STRING_VALUE',\n  'headerSynonym' => 'SOME_STRING_VALUE',\n  'languages' => 'en,de,it,fr',\n  'separator' => ',',\n  'splitColumns' => 'SOME_ARRAY_VALUE',\n  'splitSeparator' => ','\n]);\n\n$request->setHeaders([\n  'accept' => 'multipart/form-data',\n  'content-type' => 'application/json',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
                    },
                    {
                        "lang": "Php + Http2",
                        "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('http://qanswer-core1.univ-st-etienne.fr/api/loader/csv');\n$request->setRequestMethod('POST');\n$request->setQuery(new http\\QueryString([\n  'columnLabel' => 'SOME_STRING_VALUE',\n  'dataset' => 'SOME_STRING_VALUE',\n  'datatypes' => 'SOME_STRING_VALUE',\n  'headerSynonym' => 'SOME_STRING_VALUE',\n  'languages' => 'en,de,it,fr',\n  'separator' => ',',\n  'splitColumns' => 'SOME_ARRAY_VALUE',\n  'splitSeparator' => ','\n]));\n\n$request->setHeaders([\n  'accept' => 'multipart/form-data',\n  'content-type' => 'application/json',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
                    }
                ]
            }
        },
        "/api/loader/csv-datatype": {
            "post": {
                "consumes": [
                    "multipart/form-data"
                ],
                "deprecated": false,
                "operationId": "getCsvDatatypeUsingPOST",
                "parameters": [
                    {
                        "description": "file",
                        "in": "formData",
                        "name": "file",
                        "required": true,
                        "type": "file"
                    },
                    {
                        "default": ",",
                        "description": "separator",
                        "in": "query",
                        "name": "separator",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "collectionFormat": "multi",
                        "description": "splitColumns",
                        "in": "query",
                        "items": {
                            "type": "string"
                        },
                        "name": "splitColumns",
                        "required": false,
                        "type": "array"
                    },
                    {
                        "default": ",",
                        "description": "splitSeparator",
                        "in": "query",
                        "name": "splitSeparator",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "additionalProperties": {
                                "type": "string"
                            },
                            "type": "object"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "summary": "Loads a CSV and resolve datatype of the columns",
                "tags": [
                    "csv-loader-controller"
                ],
                "x-codeSamples": [
                    {
                        "lang": "Node + Request",
                        "source": "const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'http://qanswer-core1.univ-st-etienne.fr/api/loader/csv-datatype',\n  qs: {separator: ',', splitColumns: 'SOME_ARRAY_VALUE', splitSeparator: ','},\n  headers: {\n    accept: 'multipart/form-data',\n    'content-type': 'application/json',\n    Authorization: 'REPLACE_KEY_VALUE'\n  }\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
                    },
                    {
                        "lang": "Shell + Curl",
                        "source": "curl --request POST \\\n  --url 'http://qanswer-core1.univ-st-etienne.fr/api/loader/csv-datatype?separator=%2C&splitColumns=SOME_ARRAY_VALUE&splitSeparator=%2C' \\\n  --header 'Authorization: REPLACE_KEY_VALUE' \\\n  --header 'accept: multipart/form-data' \\\n  --header 'content-type: application/json'"
                    },
                    {
                        "lang": "Shell + Httpie",
                        "source": "http POST 'http://qanswer-core1.univ-st-etienne.fr/api/loader/csv-datatype?separator=%2C&splitColumns=SOME_ARRAY_VALUE&splitSeparator=%2C' \\\n  Authorization:REPLACE_KEY_VALUE \\\n  accept:multipart/form-data \\\n  content-type:application/json"
                    },
                    {
                        "lang": "Python + Python3",
                        "source": "import http.client\n\nconn = http.client.HTTPConnection(\"qanswer-core1.univ-st-etienne.fr\")\n\nheaders = {\n    'accept': \"multipart/form-data\",\n    'content-type': \"application/json\",\n    'Authorization': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"POST\", \"/api/loader/csv-datatype?separator=%2C&splitColumns=SOME_ARRAY_VALUE&splitSeparator=%2C\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
                    },
                    {
                        "lang": "Php + Curl",
                        "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"http://qanswer-core1.univ-st-etienne.fr/api/loader/csv-datatype?separator=%2C&splitColumns=SOME_ARRAY_VALUE&splitSeparator=%2C\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: REPLACE_KEY_VALUE\",\n    \"accept: multipart/form-data\",\n    \"content-type: application/json\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
                    },
                    {
                        "lang": "php",
                        "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('http://qanswer-core1.univ-st-etienne.fr/api/loader/csv-datatype');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setQueryData([\n  'separator' => ',',\n  'splitColumns' => 'SOME_ARRAY_VALUE',\n  'splitSeparator' => ','\n]);\n\n$request->setHeaders([\n  'accept' => 'multipart/form-data',\n  'content-type' => 'application/json',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
                    },
                    {
                        "lang": "Php + Http2",
                        "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('http://qanswer-core1.univ-st-etienne.fr/api/loader/csv-datatype');\n$request->setRequestMethod('POST');\n$request->setQuery(new http\\QueryString([\n  'separator' => ',',\n  'splitColumns' => 'SOME_ARRAY_VALUE',\n  'splitSeparator' => ','\n]));\n\n$request->setHeaders([\n  'accept' => 'multipart/form-data',\n  'content-type' => 'application/json',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
                    }
                ]
            }
        },
        "/api/qa/ask": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "deprecated": false,
                "operationId": "qaCombinedUsingPOST",
                "parameters": [
                    {
                        "description": "question",
                        "in": "body",
                        "name": "question",
                        "required": true,
                        "schema": {
                            "properties": {
                                "datasets": {
                                    "items": {
                                        "$ref": "#/definitions/Dataset"
                                    },
                                    "type": "array"
                                },
                                "language": {
                                    "type": "string"
                                },
                                "question": {
                                    "type": "string"
                                },
                                "timeout": {
                                    "format": "int32",
                                    "type": "integer"
                                }
                            },
                            "title": "Question",
                            "type": "object"
                        }
                    }
                ],
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Answer"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "summary": "qaCombined",
                "tags": [
                    "qa-controller-combined"
                ],
                "x-codeSamples": [
                    {
                        "lang": "Node + Request",
                        "source": "const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'http://qanswer-core1.univ-st-etienne.fr/api/qa/ask',\n  headers: {\n    accept: 'application/json',\n    'content-type': '*/*',\n    Authorization: 'REPLACE_KEY_VALUE'\n  },\n  body: {\n    datasets: [{name: 'string', type: 'GRAPH', user: 'string'}],\n    language: 'string',\n    question: 'string',\n    timeout: 0\n  },\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
                    },
                    {
                        "lang": "Shell + Curl",
                        "source": "curl --request POST \\\n  --url http://qanswer-core1.univ-st-etienne.fr/api/qa/ask \\\n  --header 'Authorization: REPLACE_KEY_VALUE' \\\n  --header 'accept: application/json' \\\n  --header 'content-type: */*' \\\n  --data '{\"datasets\":[{\"name\":\"string\",\"type\":\"GRAPH\",\"user\":\"string\"}],\"language\":\"string\",\"question\":\"string\",\"timeout\":0}'"
                    },
                    {
                        "lang": "Shell + Httpie",
                        "source": "echo '{\"datasets\":[{\"name\":\"string\",\"type\":\"GRAPH\",\"user\":\"string\"}],\"language\":\"string\",\"question\":\"string\",\"timeout\":0}' |  \\\n  http POST http://qanswer-core1.univ-st-etienne.fr/api/qa/ask \\\n  Authorization:REPLACE_KEY_VALUE \\\n  accept:application/json \\\n  content-type:'*/*'"
                    },
                    {
                        "lang": "Python + Python3",
                        "source": "import http.client\n\nconn = http.client.HTTPConnection(\"qanswer-core1.univ-st-etienne.fr\")\n\npayload = \"{\\\"datasets\\\":[{\\\"name\\\":\\\"string\\\",\\\"type\\\":\\\"GRAPH\\\",\\\"user\\\":\\\"string\\\"}],\\\"language\\\":\\\"string\\\",\\\"question\\\":\\\"string\\\",\\\"timeout\\\":0}\"\n\nheaders = {\n    'accept': \"application/json\",\n    'content-type': \"*/*\",\n    'Authorization': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"POST\", \"/api/qa/ask\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
                    },
                    {
                        "lang": "Php + Curl",
                        "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"http://qanswer-core1.univ-st-etienne.fr/api/qa/ask\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_POSTFIELDS => \"{\\\"datasets\\\":[{\\\"name\\\":\\\"string\\\",\\\"type\\\":\\\"GRAPH\\\",\\\"user\\\":\\\"string\\\"}],\\\"language\\\":\\\"string\\\",\\\"question\\\":\\\"string\\\",\\\"timeout\\\":0}\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: REPLACE_KEY_VALUE\",\n    \"accept: application/json\",\n    \"content-type: */*\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
                    },
                    {
                        "lang": "php",
                        "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('http://qanswer-core1.univ-st-etienne.fr/api/qa/ask');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setHeaders([\n  'accept' => 'application/json',\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$request->setBody('{\"datasets\":[{\"name\":\"string\",\"type\":\"GRAPH\",\"user\":\"string\"}],\"language\":\"string\",\"question\":\"string\",\"timeout\":0}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
                    },
                    {
                        "lang": "Php + Http2",
                        "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$body = new http\\Message\\Body;\n$body->append('{\"datasets\":[{\"name\":\"string\",\"type\":\"GRAPH\",\"user\":\"string\"}],\"language\":\"string\",\"question\":\"string\",\"timeout\":0}');\n\n$request->setRequestUrl('http://qanswer-core1.univ-st-etienne.fr/api/qa/ask');\n$request->setRequestMethod('POST');\n$request->setBody($body);\n\n$request->setHeaders([\n  'accept' => 'application/json',\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
                    }
                ]
            }
        },
        "/api/qa/full": {
            "get": {
                "deprecated": false,
                "operationId": "qaFullUsingGET",
                "parameters": [
                    {
                        "description": "id",
                        "format": "int32",
                        "in": "query",
                        "name": "id",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "collectionFormat": "multi",
                        "default": "wikidata",
                        "description": "kb",
                        "in": "query",
                        "items": {
                            "type": "string"
                        },
                        "name": "kb",
                        "required": false,
                        "type": "array"
                    },
                    {
                        "collectionFormat": "multi",
                        "default": "en",
                        "description": "lang",
                        "in": "query",
                        "items": {
                            "type": "string"
                        },
                        "name": "lang",
                        "required": false,
                        "type": "array"
                    },
                    {
                        "description": "question",
                        "in": "query",
                        "name": "question",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": 5,
                        "description": "timeout",
                        "format": "int32",
                        "in": "query",
                        "name": "timeout",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "collectionFormat": "multi",
                        "description": "user",
                        "in": "query",
                        "items": {
                            "type": "string"
                        },
                        "name": "user",
                        "required": false,
                        "type": "array"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/QaResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "summary": "Takes a question and returns the SPARQL query, the answer and contextual information about the answer.",
                "tags": [
                    "qa-controller-kb"
                ],
                "x-codeSamples": [
                    {
                        "lang": "Node + Request",
                        "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://qanswer-core1.univ-st-etienne.fr/api/qa/full',\n  qs: {\n    id: 'SOME_INTEGER_VALUE',\n    kb: 'wikidata',\n    lang: 'en',\n    question: 'SOME_STRING_VALUE',\n    timeout: '5',\n    user: 'SOME_ARRAY_VALUE'\n  },\n  headers: {'content-type': 'application/json', Authorization: 'REPLACE_KEY_VALUE'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
                    },
                    {
                        "lang": "Shell + Curl",
                        "source": "curl --request GET \\\n  --url 'http://qanswer-core1.univ-st-etienne.fr/api/qa/full?id=SOME_INTEGER_VALUE&kb=wikidata&lang=en&question=SOME_STRING_VALUE&timeout=5&user=SOME_ARRAY_VALUE' \\\n  --header 'Authorization: REPLACE_KEY_VALUE' \\\n  --header 'content-type: application/json'"
                    },
                    {
                        "lang": "Shell + Httpie",
                        "source": "http GET 'http://qanswer-core1.univ-st-etienne.fr/api/qa/full?id=SOME_INTEGER_VALUE&kb=wikidata&lang=en&question=SOME_STRING_VALUE&timeout=5&user=SOME_ARRAY_VALUE' \\\n  Authorization:REPLACE_KEY_VALUE \\\n  content-type:application/json"
                    },
                    {
                        "lang": "Python + Python3",
                        "source": "import http.client\n\nconn = http.client.HTTPConnection(\"qanswer-core1.univ-st-etienne.fr\")\n\nheaders = {\n    'content-type': \"application/json\",\n    'Authorization': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"GET\", \"/api/qa/full?id=SOME_INTEGER_VALUE&kb=wikidata&lang=en&question=SOME_STRING_VALUE&timeout=5&user=SOME_ARRAY_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
                    },
                    {
                        "lang": "Php + Curl",
                        "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"http://qanswer-core1.univ-st-etienne.fr/api/qa/full?id=SOME_INTEGER_VALUE&kb=wikidata&lang=en&question=SOME_STRING_VALUE&timeout=5&user=SOME_ARRAY_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: REPLACE_KEY_VALUE\",\n    \"content-type: application/json\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
                    },
                    {
                        "lang": "php",
                        "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('http://qanswer-core1.univ-st-etienne.fr/api/qa/full');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setQueryData([\n  'id' => 'SOME_INTEGER_VALUE',\n  'kb' => 'wikidata',\n  'lang' => 'en',\n  'question' => 'SOME_STRING_VALUE',\n  'timeout' => '5',\n  'user' => 'SOME_ARRAY_VALUE'\n]);\n\n$request->setHeaders([\n  'content-type' => 'application/json',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
                    },
                    {
                        "lang": "Php + Http2",
                        "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('http://qanswer-core1.univ-st-etienne.fr/api/qa/full');\n$request->setRequestMethod('GET');\n$request->setQuery(new http\\QueryString([\n  'id' => 'SOME_INTEGER_VALUE',\n  'kb' => 'wikidata',\n  'lang' => 'en',\n  'question' => 'SOME_STRING_VALUE',\n  'timeout' => '5',\n  'user' => 'SOME_ARRAY_VALUE'\n]));\n\n$request->setHeaders([\n  'content-type' => 'application/json',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
                    }
                ]
            }
        },
        "/api/qa/fullInterpretation": {
            "get": {
                "deprecated": false,
                "operationId": "qaFullInterpretationUsingGET",
                "parameters": [
                    {
                        "description": "id",
                        "format": "int32",
                        "in": "query",
                        "name": "id",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "collectionFormat": "multi",
                        "default": "wikidata",
                        "description": "kb",
                        "in": "query",
                        "items": {
                            "type": "string"
                        },
                        "name": "kb",
                        "required": false,
                        "type": "array"
                    },
                    {
                        "collectionFormat": "multi",
                        "default": "en",
                        "description": "lang",
                        "in": "query",
                        "items": {
                            "type": "string"
                        },
                        "name": "lang",
                        "required": false,
                        "type": "array"
                    },
                    {
                        "description": "question",
                        "in": "query",
                        "name": "question",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": 5,
                        "description": "timeout",
                        "format": "int32",
                        "in": "query",
                        "name": "timeout",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "collectionFormat": "multi",
                        "description": "user",
                        "in": "query",
                        "items": {
                            "type": "string"
                        },
                        "name": "user",
                        "required": false,
                        "type": "array"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/QaResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "summary": "Takes a question and returns the SPARQL query, the answer, contextual information about the answer and the interpretation.",
                "tags": [
                    "qa-controller-kb"
                ],
                "x-codeSamples": [
                    {
                        "lang": "Node + Request",
                        "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://qanswer-core1.univ-st-etienne.fr/api/qa/fullInterpretation',\n  qs: {\n    id: 'SOME_INTEGER_VALUE',\n    kb: 'wikidata',\n    lang: 'en',\n    question: 'SOME_STRING_VALUE',\n    timeout: '5',\n    user: 'SOME_ARRAY_VALUE'\n  },\n  headers: {'content-type': 'application/json', Authorization: 'REPLACE_KEY_VALUE'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
                    },
                    {
                        "lang": "Shell + Curl",
                        "source": "curl --request GET \\\n  --url 'http://qanswer-core1.univ-st-etienne.fr/api/qa/fullInterpretation?id=SOME_INTEGER_VALUE&kb=wikidata&lang=en&question=SOME_STRING_VALUE&timeout=5&user=SOME_ARRAY_VALUE' \\\n  --header 'Authorization: REPLACE_KEY_VALUE' \\\n  --header 'content-type: application/json'"
                    },
                    {
                        "lang": "Shell + Httpie",
                        "source": "http GET 'http://qanswer-core1.univ-st-etienne.fr/api/qa/fullInterpretation?id=SOME_INTEGER_VALUE&kb=wikidata&lang=en&question=SOME_STRING_VALUE&timeout=5&user=SOME_ARRAY_VALUE' \\\n  Authorization:REPLACE_KEY_VALUE \\\n  content-type:application/json"
                    },
                    {
                        "lang": "Python + Python3",
                        "source": "import http.client\n\nconn = http.client.HTTPConnection(\"qanswer-core1.univ-st-etienne.fr\")\n\nheaders = {\n    'content-type': \"application/json\",\n    'Authorization': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"GET\", \"/api/qa/fullInterpretation?id=SOME_INTEGER_VALUE&kb=wikidata&lang=en&question=SOME_STRING_VALUE&timeout=5&user=SOME_ARRAY_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
                    },
                    {
                        "lang": "Php + Curl",
                        "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"http://qanswer-core1.univ-st-etienne.fr/api/qa/fullInterpretation?id=SOME_INTEGER_VALUE&kb=wikidata&lang=en&question=SOME_STRING_VALUE&timeout=5&user=SOME_ARRAY_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: REPLACE_KEY_VALUE\",\n    \"content-type: application/json\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
                    },
                    {
                        "lang": "php",
                        "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('http://qanswer-core1.univ-st-etienne.fr/api/qa/fullInterpretation');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setQueryData([\n  'id' => 'SOME_INTEGER_VALUE',\n  'kb' => 'wikidata',\n  'lang' => 'en',\n  'question' => 'SOME_STRING_VALUE',\n  'timeout' => '5',\n  'user' => 'SOME_ARRAY_VALUE'\n]);\n\n$request->setHeaders([\n  'content-type' => 'application/json',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
                    },
                    {
                        "lang": "Php + Http2",
                        "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('http://qanswer-core1.univ-st-etienne.fr/api/qa/fullInterpretation');\n$request->setRequestMethod('GET');\n$request->setQuery(new http\\QueryString([\n  'id' => 'SOME_INTEGER_VALUE',\n  'kb' => 'wikidata',\n  'lang' => 'en',\n  'question' => 'SOME_STRING_VALUE',\n  'timeout' => '5',\n  'user' => 'SOME_ARRAY_VALUE'\n]));\n\n$request->setHeaders([\n  'content-type' => 'application/json',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
                    }
                ]
            }
        },
        "/api/qa/sparql": {
            "get": {
                "deprecated": false,
                "operationId": "qaSparqlUsingGET",
                "parameters": [
                    {
                        "description": "id",
                        "format": "int32",
                        "in": "query",
                        "name": "id",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "collectionFormat": "multi",
                        "default": "[wikidata]",
                        "description": "kb",
                        "in": "query",
                        "items": {
                            "type": "string"
                        },
                        "name": "kb",
                        "required": false,
                        "type": "array"
                    },
                    {
                        "collectionFormat": "multi",
                        "default": "en",
                        "description": "lang",
                        "in": "query",
                        "items": {
                            "type": "string"
                        },
                        "name": "lang",
                        "required": false,
                        "type": "array"
                    },
                    {
                        "description": "question",
                        "in": "query",
                        "name": "question",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "collectionFormat": "multi",
                        "description": "user",
                        "in": "query",
                        "items": {
                            "type": "string"
                        },
                        "name": "user",
                        "required": false,
                        "type": "array"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/QaResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "summary": "Takes a question and returns the corresponding SPARQL query.",
                "tags": [
                    "qa-controller-kb"
                ],
                "x-codeSamples": [
                    {
                        "lang": "Node + Request",
                        "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://qanswer-core1.univ-st-etienne.fr/api/qa/sparql',\n  qs: {\n    id: 'SOME_INTEGER_VALUE',\n    kb: '[wikidata]',\n    lang: 'en',\n    question: 'SOME_STRING_VALUE',\n    user: 'SOME_ARRAY_VALUE'\n  },\n  headers: {'content-type': 'application/json', Authorization: 'REPLACE_KEY_VALUE'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
                    },
                    {
                        "lang": "Shell + Curl",
                        "source": "curl --request GET \\\n  --url 'http://qanswer-core1.univ-st-etienne.fr/api/qa/sparql?id=SOME_INTEGER_VALUE&kb=%5Bwikidata%5D&lang=en&question=SOME_STRING_VALUE&user=SOME_ARRAY_VALUE' \\\n  --header 'Authorization: REPLACE_KEY_VALUE' \\\n  --header 'content-type: application/json'"
                    },
                    {
                        "lang": "Shell + Httpie",
                        "source": "http GET 'http://qanswer-core1.univ-st-etienne.fr/api/qa/sparql?id=SOME_INTEGER_VALUE&kb=%5Bwikidata%5D&lang=en&question=SOME_STRING_VALUE&user=SOME_ARRAY_VALUE' \\\n  Authorization:REPLACE_KEY_VALUE \\\n  content-type:application/json"
                    },
                    {
                        "lang": "Python + Python3",
                        "source": "import http.client\n\nconn = http.client.HTTPConnection(\"qanswer-core1.univ-st-etienne.fr\")\n\nheaders = {\n    'content-type': \"application/json\",\n    'Authorization': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"GET\", \"/api/qa/sparql?id=SOME_INTEGER_VALUE&kb=%5Bwikidata%5D&lang=en&question=SOME_STRING_VALUE&user=SOME_ARRAY_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
                    },
                    {
                        "lang": "Php + Curl",
                        "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"http://qanswer-core1.univ-st-etienne.fr/api/qa/sparql?id=SOME_INTEGER_VALUE&kb=%5Bwikidata%5D&lang=en&question=SOME_STRING_VALUE&user=SOME_ARRAY_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: REPLACE_KEY_VALUE\",\n    \"content-type: application/json\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
                    },
                    {
                        "lang": "php",
                        "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('http://qanswer-core1.univ-st-etienne.fr/api/qa/sparql');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setQueryData([\n  'id' => 'SOME_INTEGER_VALUE',\n  'kb' => '[wikidata]',\n  'lang' => 'en',\n  'question' => 'SOME_STRING_VALUE',\n  'user' => 'SOME_ARRAY_VALUE'\n]);\n\n$request->setHeaders([\n  'content-type' => 'application/json',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
                    },
                    {
                        "lang": "Php + Http2",
                        "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('http://qanswer-core1.univ-st-etienne.fr/api/qa/sparql');\n$request->setRequestMethod('GET');\n$request->setQuery(new http\\QueryString([\n  'id' => 'SOME_INTEGER_VALUE',\n  'kb' => '[wikidata]',\n  'lang' => 'en',\n  'question' => 'SOME_STRING_VALUE',\n  'user' => 'SOME_ARRAY_VALUE'\n]));\n\n$request->setHeaders([\n  'content-type' => 'application/json',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
                    }
                ]
            }
        },
        "/api/question/log/create": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "deprecated": false,
                "operationId": "logQuestionUsingPOST",
                "parameters": [
                    {
                        "description": "question",
                        "in": "body",
                        "name": "question",
                        "required": true,
                        "schema": {
                            "properties": {
                                "answers": {
                                    "type": "string"
                                },
                                "confidence": {
                                    "format": "double",
                                    "type": "number"
                                },
                                "context": {
                                    "type": "string"
                                },
                                "correct": {
                                    "type": "boolean"
                                },
                                "currentModelRight": {
                                    "type": "boolean"
                                },
                                "id": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "kb": {
                                    "type": "string"
                                },
                                "label": {
                                    "format": "double",
                                    "type": "number"
                                },
                                "language": {
                                    "type": "string"
                                },
                                "question": {
                                    "type": "string"
                                },
                                "sparql": {
                                    "type": "string"
                                },
                                "sparqlKB": {
                                    "type": "string"
                                },
                                "userId": {
                                    "format": "int64",
                                    "type": "integer"
                                },
                                "userName": {
                                    "type": "string"
                                },
                                "validated": {
                                    "type": "boolean"
                                }
                            },
                            "title": "QuestionLog",
                            "type": "object"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "summary": "Give new question",
                "tags": [
                    "question-log-controller"
                ],
                "x-codeSamples": [
                    {
                        "lang": "Node + Request",
                        "source": "const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'http://qanswer-core1.univ-st-etienne.fr/api/question/log/create',\n  headers: {\n    accept: 'application/json',\n    'content-type': 'application/json',\n    Authorization: 'REPLACE_KEY_VALUE'\n  },\n  body: {\n    answers: 'string',\n    confidence: 0,\n    context: 'string',\n    correct: true,\n    currentModelRight: true,\n    id: 0,\n    kb: 'string',\n    label: 0,\n    language: 'string',\n    question: 'string',\n    sparql: 'string',\n    sparqlKB: 'string',\n    userId: 0,\n    userName: 'string',\n    validated: true\n  },\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
                    },
                    {
                        "lang": "Shell + Curl",
                        "source": "curl --request POST \\\n  --url http://qanswer-core1.univ-st-etienne.fr/api/question/log/create \\\n  --header 'Authorization: REPLACE_KEY_VALUE' \\\n  --header 'accept: application/json' \\\n  --header 'content-type: application/json' \\\n  --data '{\"answers\":\"string\",\"confidence\":0,\"context\":\"string\",\"correct\":true,\"currentModelRight\":true,\"id\":0,\"kb\":\"string\",\"label\":0,\"language\":\"string\",\"question\":\"string\",\"sparql\":\"string\",\"sparqlKB\":\"string\",\"userId\":0,\"userName\":\"string\",\"validated\":true}'"
                    },
                    {
                        "lang": "Shell + Httpie",
                        "source": "echo '{\"answers\":\"string\",\"confidence\":0,\"context\":\"string\",\"correct\":true,\"currentModelRight\":true,\"id\":0,\"kb\":\"string\",\"label\":0,\"language\":\"string\",\"question\":\"string\",\"sparql\":\"string\",\"sparqlKB\":\"string\",\"userId\":0,\"userName\":\"string\",\"validated\":true}' |  \\\n  http POST http://qanswer-core1.univ-st-etienne.fr/api/question/log/create \\\n  Authorization:REPLACE_KEY_VALUE \\\n  accept:application/json \\\n  content-type:application/json"
                    },
                    {
                        "lang": "Python + Python3",
                        "source": "import http.client\n\nconn = http.client.HTTPConnection(\"qanswer-core1.univ-st-etienne.fr\")\n\npayload = \"{\\\"answers\\\":\\\"string\\\",\\\"confidence\\\":0,\\\"context\\\":\\\"string\\\",\\\"correct\\\":true,\\\"currentModelRight\\\":true,\\\"id\\\":0,\\\"kb\\\":\\\"string\\\",\\\"label\\\":0,\\\"language\\\":\\\"string\\\",\\\"question\\\":\\\"string\\\",\\\"sparql\\\":\\\"string\\\",\\\"sparqlKB\\\":\\\"string\\\",\\\"userId\\\":0,\\\"userName\\\":\\\"string\\\",\\\"validated\\\":true}\"\n\nheaders = {\n    'accept': \"application/json\",\n    'content-type': \"application/json\",\n    'Authorization': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"POST\", \"/api/question/log/create\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
                    },
                    {
                        "lang": "Php + Curl",
                        "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"http://qanswer-core1.univ-st-etienne.fr/api/question/log/create\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_POSTFIELDS => \"{\\\"answers\\\":\\\"string\\\",\\\"confidence\\\":0,\\\"context\\\":\\\"string\\\",\\\"correct\\\":true,\\\"currentModelRight\\\":true,\\\"id\\\":0,\\\"kb\\\":\\\"string\\\",\\\"label\\\":0,\\\"language\\\":\\\"string\\\",\\\"question\\\":\\\"string\\\",\\\"sparql\\\":\\\"string\\\",\\\"sparqlKB\\\":\\\"string\\\",\\\"userId\\\":0,\\\"userName\\\":\\\"string\\\",\\\"validated\\\":true}\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: REPLACE_KEY_VALUE\",\n    \"accept: application/json\",\n    \"content-type: application/json\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
                    },
                    {
                        "lang": "php",
                        "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('http://qanswer-core1.univ-st-etienne.fr/api/question/log/create');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setHeaders([\n  'accept' => 'application/json',\n  'content-type' => 'application/json',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$request->setBody('{\"answers\":\"string\",\"confidence\":0,\"context\":\"string\",\"correct\":true,\"currentModelRight\":true,\"id\":0,\"kb\":\"string\",\"label\":0,\"language\":\"string\",\"question\":\"string\",\"sparql\":\"string\",\"sparqlKB\":\"string\",\"userId\":0,\"userName\":\"string\",\"validated\":true}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
                    },
                    {
                        "lang": "Php + Http2",
                        "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$body = new http\\Message\\Body;\n$body->append('{\"answers\":\"string\",\"confidence\":0,\"context\":\"string\",\"correct\":true,\"currentModelRight\":true,\"id\":0,\"kb\":\"string\",\"label\":0,\"language\":\"string\",\"question\":\"string\",\"sparql\":\"string\",\"sparqlKB\":\"string\",\"userId\":0,\"userName\":\"string\",\"validated\":true}');\n\n$request->setRequestUrl('http://qanswer-core1.univ-st-etienne.fr/api/question/log/create');\n$request->setRequestMethod('POST');\n$request->setBody($body);\n\n$request->setHeaders([\n  'accept' => 'application/json',\n  'content-type' => 'application/json',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
                    }
                ]
            }
        },
        "/api/question/log/get": {
            "get": {
                "deprecated": false,
                "operationId": "evaluateUsingGET_2",
                "parameters": [
                    {
                        "collectionFormat": "multi",
                        "description": "kbs",
                        "in": "query",
                        "items": {
                            "type": "string"
                        },
                        "name": "kbs",
                        "required": false,
                        "type": "array"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/QuestionLog"
                            },
                            "type": "array"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "summary": "Evaluate the current model on the uploaded question-answer pairs",
                "tags": [
                    "question-log-controller"
                ],
                "x-codeSamples": [
                    {
                        "lang": "Node + Request",
                        "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://qanswer-core1.univ-st-etienne.fr/api/question/log/get',\n  qs: {kbs: 'SOME_ARRAY_VALUE'},\n  headers: {'content-type': 'application/json', Authorization: 'REPLACE_KEY_VALUE'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
                    },
                    {
                        "lang": "Shell + Curl",
                        "source": "curl --request GET \\\n  --url 'http://qanswer-core1.univ-st-etienne.fr/api/question/log/get?kbs=SOME_ARRAY_VALUE' \\\n  --header 'Authorization: REPLACE_KEY_VALUE' \\\n  --header 'content-type: application/json'"
                    },
                    {
                        "lang": "Shell + Httpie",
                        "source": "http GET 'http://qanswer-core1.univ-st-etienne.fr/api/question/log/get?kbs=SOME_ARRAY_VALUE' \\\n  Authorization:REPLACE_KEY_VALUE \\\n  content-type:application/json"
                    },
                    {
                        "lang": "Python + Python3",
                        "source": "import http.client\n\nconn = http.client.HTTPConnection(\"qanswer-core1.univ-st-etienne.fr\")\n\nheaders = {\n    'content-type': \"application/json\",\n    'Authorization': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"GET\", \"/api/question/log/get?kbs=SOME_ARRAY_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
                    },
                    {
                        "lang": "Php + Curl",
                        "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"http://qanswer-core1.univ-st-etienne.fr/api/question/log/get?kbs=SOME_ARRAY_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: REPLACE_KEY_VALUE\",\n    \"content-type: application/json\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
                    },
                    {
                        "lang": "php",
                        "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('http://qanswer-core1.univ-st-etienne.fr/api/question/log/get');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setQueryData([\n  'kbs' => 'SOME_ARRAY_VALUE'\n]);\n\n$request->setHeaders([\n  'content-type' => 'application/json',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
                    },
                    {
                        "lang": "Php + Http2",
                        "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('http://qanswer-core1.univ-st-etienne.fr/api/question/log/get');\n$request->setRequestMethod('GET');\n$request->setQuery(new http\\QueryString([\n  'kbs' => 'SOME_ARRAY_VALUE'\n]));\n\n$request->setHeaders([\n  'content-type' => 'application/json',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
                    }
                ]
            }
        },
        "/api/question/log/remove": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "deprecated": false,
                "operationId": "questionLogRemoveUsingPOST",
                "parameters": [
                    {
                        "description": "questionIds",
                        "in": "body",
                        "name": "questionIds",
                        "required": true,
                        "schema": {
                            "properties": {
                                "questionIds": {
                                    "items": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "type": "array"
                                }
                            },
                            "title": "RemoveRequest",
                            "type": "object"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "summary": "Remove one question-answer pair",
                "tags": [
                    "question-log-controller"
                ],
                "x-codeSamples": [
                    {
                        "lang": "Node + Request",
                        "source": "const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'http://qanswer-core1.univ-st-etienne.fr/api/question/log/remove',\n  headers: {\n    accept: 'application/json',\n    'content-type': 'application/json',\n    Authorization: 'REPLACE_KEY_VALUE'\n  },\n  body: {questionIds: [0]},\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
                    },
                    {
                        "lang": "Shell + Curl",
                        "source": "curl --request POST \\\n  --url http://qanswer-core1.univ-st-etienne.fr/api/question/log/remove \\\n  --header 'Authorization: REPLACE_KEY_VALUE' \\\n  --header 'accept: application/json' \\\n  --header 'content-type: application/json' \\\n  --data '{\"questionIds\":[0]}'"
                    },
                    {
                        "lang": "Shell + Httpie",
                        "source": "echo '{\"questionIds\":[0]}' |  \\\n  http POST http://qanswer-core1.univ-st-etienne.fr/api/question/log/remove \\\n  Authorization:REPLACE_KEY_VALUE \\\n  accept:application/json \\\n  content-type:application/json"
                    },
                    {
                        "lang": "Python + Python3",
                        "source": "import http.client\n\nconn = http.client.HTTPConnection(\"qanswer-core1.univ-st-etienne.fr\")\n\npayload = \"{\\\"questionIds\\\":[0]}\"\n\nheaders = {\n    'accept': \"application/json\",\n    'content-type': \"application/json\",\n    'Authorization': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"POST\", \"/api/question/log/remove\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
                    },
                    {
                        "lang": "Php + Curl",
                        "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"http://qanswer-core1.univ-st-etienne.fr/api/question/log/remove\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_POSTFIELDS => \"{\\\"questionIds\\\":[0]}\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: REPLACE_KEY_VALUE\",\n    \"accept: application/json\",\n    \"content-type: application/json\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
                    },
                    {
                        "lang": "php",
                        "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('http://qanswer-core1.univ-st-etienne.fr/api/question/log/remove');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setHeaders([\n  'accept' => 'application/json',\n  'content-type' => 'application/json',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$request->setBody('{\"questionIds\":[0]}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
                    },
                    {
                        "lang": "Php + Http2",
                        "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$body = new http\\Message\\Body;\n$body->append('{\"questionIds\":[0]}');\n\n$request->setRequestUrl('http://qanswer-core1.univ-st-etienne.fr/api/question/log/remove');\n$request->setRequestMethod('POST');\n$request->setBody($body);\n\n$request->setHeaders([\n  'accept' => 'application/json',\n  'content-type' => 'application/json',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
                    }
                ]
            }
        },
        "/api/question/log/removeall": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "deprecated": false,
                "operationId": "questionLogRemoveAllUsingPOST",
                "parameters": [
                    {
                        "collectionFormat": "multi",
                        "description": "kb",
                        "in": "query",
                        "items": {
                            "type": "string"
                        },
                        "name": "kb",
                        "required": false,
                        "type": "array"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "summary": "Remove all the feedback given",
                "tags": [
                    "question-log-controller"
                ],
                "x-codeSamples": [
                    {
                        "lang": "Node + Request",
                        "source": "const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'http://qanswer-core1.univ-st-etienne.fr/api/question/log/removeall',\n  qs: {kb: 'SOME_ARRAY_VALUE'},\n  headers: {\n    accept: 'application/json',\n    'content-type': 'application/json',\n    Authorization: 'REPLACE_KEY_VALUE'\n  }\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
                    },
                    {
                        "lang": "Shell + Curl",
                        "source": "curl --request POST \\\n  --url 'http://qanswer-core1.univ-st-etienne.fr/api/question/log/removeall?kb=SOME_ARRAY_VALUE' \\\n  --header 'Authorization: REPLACE_KEY_VALUE' \\\n  --header 'accept: application/json' \\\n  --header 'content-type: application/json'"
                    },
                    {
                        "lang": "Shell + Httpie",
                        "source": "http POST 'http://qanswer-core1.univ-st-etienne.fr/api/question/log/removeall?kb=SOME_ARRAY_VALUE' \\\n  Authorization:REPLACE_KEY_VALUE \\\n  accept:application/json \\\n  content-type:application/json"
                    },
                    {
                        "lang": "Python + Python3",
                        "source": "import http.client\n\nconn = http.client.HTTPConnection(\"qanswer-core1.univ-st-etienne.fr\")\n\nheaders = {\n    'accept': \"application/json\",\n    'content-type': \"application/json\",\n    'Authorization': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"POST\", \"/api/question/log/removeall?kb=SOME_ARRAY_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
                    },
                    {
                        "lang": "Php + Curl",
                        "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"http://qanswer-core1.univ-st-etienne.fr/api/question/log/removeall?kb=SOME_ARRAY_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: REPLACE_KEY_VALUE\",\n    \"accept: application/json\",\n    \"content-type: application/json\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
                    },
                    {
                        "lang": "php",
                        "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('http://qanswer-core1.univ-st-etienne.fr/api/question/log/removeall');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setQueryData([\n  'kb' => 'SOME_ARRAY_VALUE'\n]);\n\n$request->setHeaders([\n  'accept' => 'application/json',\n  'content-type' => 'application/json',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
                    },
                    {
                        "lang": "Php + Http2",
                        "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('http://qanswer-core1.univ-st-etienne.fr/api/question/log/removeall');\n$request->setRequestMethod('POST');\n$request->setQuery(new http\\QueryString([\n  'kb' => 'SOME_ARRAY_VALUE'\n]));\n\n$request->setHeaders([\n  'accept' => 'application/json',\n  'content-type' => 'application/json',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
                    }
                ]
            }
        },
        "/api/sparql/sparqlCompare": {
            "get": {
                "deprecated": false,
                "operationId": "sparqlCompareSparqlUsingGET",
                "parameters": [
                    {
                        "description": "kb1",
                        "in": "query",
                        "name": "kb1",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "kb2",
                        "in": "query",
                        "name": "kb2",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "sparql1",
                        "in": "query",
                        "name": "sparql1",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "sparql2",
                        "in": "query",
                        "name": "sparql2",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "collectionFormat": "multi",
                        "description": "user",
                        "in": "query",
                        "items": {
                            "type": "string"
                        },
                        "name": "user",
                        "required": false,
                        "type": "array"
                    }
                ],
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "summary": "Compares two sparql query based on the structure",
                "tags": [
                    "sparql-controller"
                ],
                "x-codeSamples": [
                    {
                        "lang": "Node + Request",
                        "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://qanswer-core1.univ-st-etienne.fr/api/sparql/sparqlCompare',\n  qs: {\n    kb1: 'SOME_STRING_VALUE',\n    kb2: 'SOME_STRING_VALUE',\n    sparql1: 'SOME_STRING_VALUE',\n    sparql2: 'SOME_STRING_VALUE',\n    user: 'SOME_ARRAY_VALUE'\n  },\n  headers: {'content-type': '*/*', Authorization: 'REPLACE_KEY_VALUE'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
                    },
                    {
                        "lang": "Shell + Curl",
                        "source": "curl --request GET \\\n  --url 'http://qanswer-core1.univ-st-etienne.fr/api/sparql/sparqlCompare?kb1=SOME_STRING_VALUE&kb2=SOME_STRING_VALUE&sparql1=SOME_STRING_VALUE&sparql2=SOME_STRING_VALUE&user=SOME_ARRAY_VALUE' \\\n  --header 'Authorization: REPLACE_KEY_VALUE' \\\n  --header 'content-type: */*'"
                    },
                    {
                        "lang": "Shell + Httpie",
                        "source": "http GET 'http://qanswer-core1.univ-st-etienne.fr/api/sparql/sparqlCompare?kb1=SOME_STRING_VALUE&kb2=SOME_STRING_VALUE&sparql1=SOME_STRING_VALUE&sparql2=SOME_STRING_VALUE&user=SOME_ARRAY_VALUE' \\\n  Authorization:REPLACE_KEY_VALUE \\\n  content-type:'*/*'"
                    },
                    {
                        "lang": "Python + Python3",
                        "source": "import http.client\n\nconn = http.client.HTTPConnection(\"qanswer-core1.univ-st-etienne.fr\")\n\nheaders = {\n    'content-type': \"*/*\",\n    'Authorization': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"GET\", \"/api/sparql/sparqlCompare?kb1=SOME_STRING_VALUE&kb2=SOME_STRING_VALUE&sparql1=SOME_STRING_VALUE&sparql2=SOME_STRING_VALUE&user=SOME_ARRAY_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
                    },
                    {
                        "lang": "Php + Curl",
                        "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"http://qanswer-core1.univ-st-etienne.fr/api/sparql/sparqlCompare?kb1=SOME_STRING_VALUE&kb2=SOME_STRING_VALUE&sparql1=SOME_STRING_VALUE&sparql2=SOME_STRING_VALUE&user=SOME_ARRAY_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: REPLACE_KEY_VALUE\",\n    \"content-type: */*\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
                    },
                    {
                        "lang": "php",
                        "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('http://qanswer-core1.univ-st-etienne.fr/api/sparql/sparqlCompare');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setQueryData([\n  'kb1' => 'SOME_STRING_VALUE',\n  'kb2' => 'SOME_STRING_VALUE',\n  'sparql1' => 'SOME_STRING_VALUE',\n  'sparql2' => 'SOME_STRING_VALUE',\n  'user' => 'SOME_ARRAY_VALUE'\n]);\n\n$request->setHeaders([\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
                    },
                    {
                        "lang": "Php + Http2",
                        "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('http://qanswer-core1.univ-st-etienne.fr/api/sparql/sparqlCompare');\n$request->setRequestMethod('GET');\n$request->setQuery(new http\\QueryString([\n  'kb1' => 'SOME_STRING_VALUE',\n  'kb2' => 'SOME_STRING_VALUE',\n  'sparql1' => 'SOME_STRING_VALUE',\n  'sparql2' => 'SOME_STRING_VALUE',\n  'user' => 'SOME_ARRAY_VALUE'\n]));\n\n$request->setHeaders([\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
                    }
                ]
            }
        },
        "/api/sparql/sparqlCompareAnswers": {
            "get": {
                "deprecated": false,
                "operationId": "sparqlCompareAnswersUsingGET",
                "parameters": [
                    {
                        "description": "kb1",
                        "in": "query",
                        "name": "kb1",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "kb2",
                        "in": "query",
                        "name": "kb2",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "sparql1",
                        "in": "query",
                        "name": "sparql1",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "sparql2",
                        "in": "query",
                        "name": "sparql2",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "collectionFormat": "multi",
                        "description": "user",
                        "in": "query",
                        "items": {
                            "type": "string"
                        },
                        "name": "user",
                        "required": false,
                        "type": "array"
                    }
                ],
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "summary": "Compares two sparql query based on the answer set",
                "tags": [
                    "sparql-controller"
                ],
                "x-codeSamples": [
                    {
                        "lang": "Node + Request",
                        "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://qanswer-core1.univ-st-etienne.fr/api/sparql/sparqlCompareAnswers',\n  qs: {\n    kb1: 'SOME_STRING_VALUE',\n    kb2: 'SOME_STRING_VALUE',\n    sparql1: 'SOME_STRING_VALUE',\n    sparql2: 'SOME_STRING_VALUE',\n    user: 'SOME_ARRAY_VALUE'\n  },\n  headers: {'content-type': '*/*', Authorization: 'REPLACE_KEY_VALUE'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
                    },
                    {
                        "lang": "Shell + Curl",
                        "source": "curl --request GET \\\n  --url 'http://qanswer-core1.univ-st-etienne.fr/api/sparql/sparqlCompareAnswers?kb1=SOME_STRING_VALUE&kb2=SOME_STRING_VALUE&sparql1=SOME_STRING_VALUE&sparql2=SOME_STRING_VALUE&user=SOME_ARRAY_VALUE' \\\n  --header 'Authorization: REPLACE_KEY_VALUE' \\\n  --header 'content-type: */*'"
                    },
                    {
                        "lang": "Shell + Httpie",
                        "source": "http GET 'http://qanswer-core1.univ-st-etienne.fr/api/sparql/sparqlCompareAnswers?kb1=SOME_STRING_VALUE&kb2=SOME_STRING_VALUE&sparql1=SOME_STRING_VALUE&sparql2=SOME_STRING_VALUE&user=SOME_ARRAY_VALUE' \\\n  Authorization:REPLACE_KEY_VALUE \\\n  content-type:'*/*'"
                    },
                    {
                        "lang": "Python + Python3",
                        "source": "import http.client\n\nconn = http.client.HTTPConnection(\"qanswer-core1.univ-st-etienne.fr\")\n\nheaders = {\n    'content-type': \"*/*\",\n    'Authorization': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"GET\", \"/api/sparql/sparqlCompareAnswers?kb1=SOME_STRING_VALUE&kb2=SOME_STRING_VALUE&sparql1=SOME_STRING_VALUE&sparql2=SOME_STRING_VALUE&user=SOME_ARRAY_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
                    },
                    {
                        "lang": "Php + Curl",
                        "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"http://qanswer-core1.univ-st-etienne.fr/api/sparql/sparqlCompareAnswers?kb1=SOME_STRING_VALUE&kb2=SOME_STRING_VALUE&sparql1=SOME_STRING_VALUE&sparql2=SOME_STRING_VALUE&user=SOME_ARRAY_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: REPLACE_KEY_VALUE\",\n    \"content-type: */*\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
                    },
                    {
                        "lang": "php",
                        "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('http://qanswer-core1.univ-st-etienne.fr/api/sparql/sparqlCompareAnswers');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setQueryData([\n  'kb1' => 'SOME_STRING_VALUE',\n  'kb2' => 'SOME_STRING_VALUE',\n  'sparql1' => 'SOME_STRING_VALUE',\n  'sparql2' => 'SOME_STRING_VALUE',\n  'user' => 'SOME_ARRAY_VALUE'\n]);\n\n$request->setHeaders([\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
                    },
                    {
                        "lang": "Php + Http2",
                        "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('http://qanswer-core1.univ-st-etienne.fr/api/sparql/sparqlCompareAnswers');\n$request->setRequestMethod('GET');\n$request->setQuery(new http\\QueryString([\n  'kb1' => 'SOME_STRING_VALUE',\n  'kb2' => 'SOME_STRING_VALUE',\n  'sparql1' => 'SOME_STRING_VALUE',\n  'sparql2' => 'SOME_STRING_VALUE',\n  'user' => 'SOME_ARRAY_VALUE'\n]));\n\n$request->setHeaders([\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
                    }
                ]
            }
        },
        "/api/sparql/sparqlToUser": {
            "get": {
                "deprecated": false,
                "operationId": "sparqlToUserUsingGET",
                "parameters": [
                    {
                        "description": "dataset",
                        "in": "query",
                        "name": "dataset",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": "en",
                        "description": "lang",
                        "in": "query",
                        "name": "lang",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "sparql",
                        "in": "query",
                        "name": "sparql",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "user",
                        "in": "query",
                        "name": "user",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SPARQLToUser"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "summary": "Convertes a SPARQL query in a human readable interpretation",
                "tags": [
                    "sparql-controller"
                ],
                "x-codeSamples": [
                    {
                        "lang": "Node + Request",
                        "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://qanswer-core1.univ-st-etienne.fr/api/sparql/sparqlToUser',\n  qs: {\n    dataset: 'SOME_STRING_VALUE',\n    lang: 'en',\n    sparql: 'SOME_STRING_VALUE',\n    user: 'SOME_STRING_VALUE'\n  },\n  headers: {'content-type': '*/*', Authorization: 'REPLACE_KEY_VALUE'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
                    },
                    {
                        "lang": "Shell + Curl",
                        "source": "curl --request GET \\\n  --url 'http://qanswer-core1.univ-st-etienne.fr/api/sparql/sparqlToUser?dataset=SOME_STRING_VALUE&lang=en&sparql=SOME_STRING_VALUE&user=SOME_STRING_VALUE' \\\n  --header 'Authorization: REPLACE_KEY_VALUE' \\\n  --header 'content-type: */*'"
                    },
                    {
                        "lang": "Shell + Httpie",
                        "source": "http GET 'http://qanswer-core1.univ-st-etienne.fr/api/sparql/sparqlToUser?dataset=SOME_STRING_VALUE&lang=en&sparql=SOME_STRING_VALUE&user=SOME_STRING_VALUE' \\\n  Authorization:REPLACE_KEY_VALUE \\\n  content-type:'*/*'"
                    },
                    {
                        "lang": "Python + Python3",
                        "source": "import http.client\n\nconn = http.client.HTTPConnection(\"qanswer-core1.univ-st-etienne.fr\")\n\nheaders = {\n    'content-type': \"*/*\",\n    'Authorization': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"GET\", \"/api/sparql/sparqlToUser?dataset=SOME_STRING_VALUE&lang=en&sparql=SOME_STRING_VALUE&user=SOME_STRING_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
                    },
                    {
                        "lang": "Php + Curl",
                        "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"http://qanswer-core1.univ-st-etienne.fr/api/sparql/sparqlToUser?dataset=SOME_STRING_VALUE&lang=en&sparql=SOME_STRING_VALUE&user=SOME_STRING_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: REPLACE_KEY_VALUE\",\n    \"content-type: */*\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
                    },
                    {
                        "lang": "php",
                        "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('http://qanswer-core1.univ-st-etienne.fr/api/sparql/sparqlToUser');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setQueryData([\n  'dataset' => 'SOME_STRING_VALUE',\n  'lang' => 'en',\n  'sparql' => 'SOME_STRING_VALUE',\n  'user' => 'SOME_STRING_VALUE'\n]);\n\n$request->setHeaders([\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
                    },
                    {
                        "lang": "Php + Http2",
                        "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('http://qanswer-core1.univ-st-etienne.fr/api/sparql/sparqlToUser');\n$request->setRequestMethod('GET');\n$request->setQuery(new http\\QueryString([\n  'dataset' => 'SOME_STRING_VALUE',\n  'lang' => 'en',\n  'sparql' => 'SOME_STRING_VALUE',\n  'user' => 'SOME_STRING_VALUE'\n]));\n\n$request->setHeaders([\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
                    }
                ]
            }
        },
        "/api/suggestor/get": {
            "get": {
                "deprecated": false,
                "operationId": "example_questionsUsingGET",
                "parameters": [
                    {
                        "collectionFormat": "multi",
                        "description": "kb",
                        "in": "query",
                        "items": {
                            "type": "string"
                        },
                        "name": "kb",
                        "required": true,
                        "type": "array"
                    },
                    {
                        "collectionFormat": "multi",
                        "description": "lang",
                        "in": "query",
                        "items": {
                            "type": "string"
                        },
                        "name": "lang",
                        "required": true,
                        "type": "array"
                    },
                    {
                        "collectionFormat": "multi",
                        "description": "user",
                        "in": "query",
                        "items": {
                            "type": "string"
                        },
                        "name": "user",
                        "required": true,
                        "type": "array"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/Suggestion"
                            },
                            "type": "array"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "summary": "Returns example questions based on the questions that are approved in the training dataset",
                "tags": [
                    "suggestor-controller"
                ],
                "x-codeSamples": [
                    {
                        "lang": "Node + Request",
                        "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://qanswer-core1.univ-st-etienne.fr/api/suggestor/get',\n  qs: {kb: 'SOME_ARRAY_VALUE', lang: 'SOME_ARRAY_VALUE', user: 'SOME_ARRAY_VALUE'},\n  headers: {'content-type': 'application/json', Authorization: 'REPLACE_KEY_VALUE'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
                    },
                    {
                        "lang": "Shell + Curl",
                        "source": "curl --request GET \\\n  --url 'http://qanswer-core1.univ-st-etienne.fr/api/suggestor/get?kb=SOME_ARRAY_VALUE&lang=SOME_ARRAY_VALUE&user=SOME_ARRAY_VALUE' \\\n  --header 'Authorization: REPLACE_KEY_VALUE' \\\n  --header 'content-type: application/json'"
                    },
                    {
                        "lang": "Shell + Httpie",
                        "source": "http GET 'http://qanswer-core1.univ-st-etienne.fr/api/suggestor/get?kb=SOME_ARRAY_VALUE&lang=SOME_ARRAY_VALUE&user=SOME_ARRAY_VALUE' \\\n  Authorization:REPLACE_KEY_VALUE \\\n  content-type:application/json"
                    },
                    {
                        "lang": "Python + Python3",
                        "source": "import http.client\n\nconn = http.client.HTTPConnection(\"qanswer-core1.univ-st-etienne.fr\")\n\nheaders = {\n    'content-type': \"application/json\",\n    'Authorization': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"GET\", \"/api/suggestor/get?kb=SOME_ARRAY_VALUE&lang=SOME_ARRAY_VALUE&user=SOME_ARRAY_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
                    },
                    {
                        "lang": "Php + Curl",
                        "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"http://qanswer-core1.univ-st-etienne.fr/api/suggestor/get?kb=SOME_ARRAY_VALUE&lang=SOME_ARRAY_VALUE&user=SOME_ARRAY_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: REPLACE_KEY_VALUE\",\n    \"content-type: application/json\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
                    },
                    {
                        "lang": "php",
                        "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('http://qanswer-core1.univ-st-etienne.fr/api/suggestor/get');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setQueryData([\n  'kb' => 'SOME_ARRAY_VALUE',\n  'lang' => 'SOME_ARRAY_VALUE',\n  'user' => 'SOME_ARRAY_VALUE'\n]);\n\n$request->setHeaders([\n  'content-type' => 'application/json',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
                    },
                    {
                        "lang": "Php + Http2",
                        "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('http://qanswer-core1.univ-st-etienne.fr/api/suggestor/get');\n$request->setRequestMethod('GET');\n$request->setQuery(new http\\QueryString([\n  'kb' => 'SOME_ARRAY_VALUE',\n  'lang' => 'SOME_ARRAY_VALUE',\n  'user' => 'SOME_ARRAY_VALUE'\n]));\n\n$request->setHeaders([\n  'content-type' => 'application/json',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
                    }
                ]
            }
        },
        "/api/summaserver/{dataset}": {
            "get": {
                "deprecated": false,
                "operationId": "summaUsingGET",
                "parameters": [
                    {
                        "description": "dataset",
                        "in": "path",
                        "name": "dataset",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "entity",
                        "in": "query",
                        "name": "entity",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": "en",
                        "description": "language",
                        "in": "query",
                        "name": "language",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "default": 5,
                        "description": "topK",
                        "format": "int32",
                        "in": "query",
                        "name": "topK",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "collectionFormat": "multi",
                        "description": "user",
                        "in": "query",
                        "items": {
                            "type": "string"
                        },
                        "name": "user",
                        "required": true,
                        "type": "array"
                    }
                ],
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SummaServer"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "summary": "Generates summaries, i.e. most relevant top-k properties, for an item in a dataset",
                "tags": [
                    "summa-server-controller"
                ],
                "x-codeSamples": [
                    {
                        "lang": "Node + Request",
                        "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://qanswer-core1.univ-st-etienne.fr/api/summaserver/%7Bdataset%7D',\n  qs: {\n    entity: 'SOME_STRING_VALUE',\n    language: 'en',\n    topK: '5',\n    user: 'SOME_ARRAY_VALUE'\n  },\n  headers: {'content-type': '*/*', Authorization: 'REPLACE_KEY_VALUE'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
                    },
                    {
                        "lang": "Shell + Curl",
                        "source": "curl --request GET \\\n  --url 'http://qanswer-core1.univ-st-etienne.fr/api/summaserver/%7Bdataset%7D?entity=SOME_STRING_VALUE&language=en&topK=5&user=SOME_ARRAY_VALUE' \\\n  --header 'Authorization: REPLACE_KEY_VALUE' \\\n  --header 'content-type: */*'"
                    },
                    {
                        "lang": "Shell + Httpie",
                        "source": "http GET 'http://qanswer-core1.univ-st-etienne.fr/api/summaserver/%7Bdataset%7D?entity=SOME_STRING_VALUE&language=en&topK=5&user=SOME_ARRAY_VALUE' \\\n  Authorization:REPLACE_KEY_VALUE \\\n  content-type:'*/*'"
                    },
                    {
                        "lang": "Python + Python3",
                        "source": "import http.client\n\nconn = http.client.HTTPConnection(\"qanswer-core1.univ-st-etienne.fr\")\n\nheaders = {\n    'content-type': \"*/*\",\n    'Authorization': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"GET\", \"/api/summaserver/%7Bdataset%7D?entity=SOME_STRING_VALUE&language=en&topK=5&user=SOME_ARRAY_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
                    },
                    {
                        "lang": "Php + Curl",
                        "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"http://qanswer-core1.univ-st-etienne.fr/api/summaserver/%7Bdataset%7D?entity=SOME_STRING_VALUE&language=en&topK=5&user=SOME_ARRAY_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: REPLACE_KEY_VALUE\",\n    \"content-type: */*\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
                    },
                    {
                        "lang": "php",
                        "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('http://qanswer-core1.univ-st-etienne.fr/api/summaserver/%7Bdataset%7D');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setQueryData([\n  'entity' => 'SOME_STRING_VALUE',\n  'language' => 'en',\n  'topK' => '5',\n  'user' => 'SOME_ARRAY_VALUE'\n]);\n\n$request->setHeaders([\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
                    },
                    {
                        "lang": "Php + Http2",
                        "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('http://qanswer-core1.univ-st-etienne.fr/api/summaserver/%7Bdataset%7D');\n$request->setRequestMethod('GET');\n$request->setQuery(new http\\QueryString([\n  'entity' => 'SOME_STRING_VALUE',\n  'language' => 'en',\n  'topK' => '5',\n  'user' => 'SOME_ARRAY_VALUE'\n]));\n\n$request->setHeaders([\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
                    }
                ]
            }
        },
        "/api/time/annotate": {
            "get": {
                "deprecated": false,
                "operationId": "timeUsingGET",
                "parameters": [
                    {
                        "default": "en",
                        "description": "lang",
                        "in": "query",
                        "name": "lang",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "sentence",
                        "in": "query",
                        "name": "sentence",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/Time"
                            },
                            "type": "array"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "summary": "Identifies dates in a sentence",
                "tags": [
                    "time-controller"
                ],
                "x-codeSamples": [
                    {
                        "lang": "Node + Request",
                        "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://qanswer-core1.univ-st-etienne.fr/api/time/annotate',\n  qs: {lang: 'en', sentence: 'SOME_STRING_VALUE'},\n  headers: {'content-type': '*/*', Authorization: 'REPLACE_KEY_VALUE'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
                    },
                    {
                        "lang": "Shell + Curl",
                        "source": "curl --request GET \\\n  --url 'http://qanswer-core1.univ-st-etienne.fr/api/time/annotate?lang=en&sentence=SOME_STRING_VALUE' \\\n  --header 'Authorization: REPLACE_KEY_VALUE' \\\n  --header 'content-type: */*'"
                    },
                    {
                        "lang": "Shell + Httpie",
                        "source": "http GET 'http://qanswer-core1.univ-st-etienne.fr/api/time/annotate?lang=en&sentence=SOME_STRING_VALUE' \\\n  Authorization:REPLACE_KEY_VALUE \\\n  content-type:'*/*'"
                    },
                    {
                        "lang": "Python + Python3",
                        "source": "import http.client\n\nconn = http.client.HTTPConnection(\"qanswer-core1.univ-st-etienne.fr\")\n\nheaders = {\n    'content-type': \"*/*\",\n    'Authorization': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"GET\", \"/api/time/annotate?lang=en&sentence=SOME_STRING_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
                    },
                    {
                        "lang": "Php + Curl",
                        "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"http://qanswer-core1.univ-st-etienne.fr/api/time/annotate?lang=en&sentence=SOME_STRING_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: REPLACE_KEY_VALUE\",\n    \"content-type: */*\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
                    },
                    {
                        "lang": "php",
                        "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('http://qanswer-core1.univ-st-etienne.fr/api/time/annotate');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setQueryData([\n  'lang' => 'en',\n  'sentence' => 'SOME_STRING_VALUE'\n]);\n\n$request->setHeaders([\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
                    },
                    {
                        "lang": "Php + Http2",
                        "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('http://qanswer-core1.univ-st-etienne.fr/api/time/annotate');\n$request->setRequestMethod('GET');\n$request->setQuery(new http\\QueryString([\n  'lang' => 'en',\n  'sentence' => 'SOME_STRING_VALUE'\n]));\n\n$request->setHeaders([\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
                    }
                ]
            }
        },
        "/api/user/admin/all": {
            "get": {
                "deprecated": false,
                "operationId": "adminAllUsingGET",
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/UserProfile"
                            },
                            "type": "array"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "summary": "Get a list of all users",
                "tags": [
                    "user-controller"
                ],
                "x-codeSamples": [
                    {
                        "lang": "Node + Request",
                        "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://qanswer-core1.univ-st-etienne.fr/api/user/admin/all',\n  headers: {'content-type': '*/*', Authorization: 'REPLACE_KEY_VALUE'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
                    },
                    {
                        "lang": "Shell + Curl",
                        "source": "curl --request GET \\\n  --url http://qanswer-core1.univ-st-etienne.fr/api/user/admin/all \\\n  --header 'Authorization: REPLACE_KEY_VALUE' \\\n  --header 'content-type: */*'"
                    },
                    {
                        "lang": "Shell + Httpie",
                        "source": "http GET http://qanswer-core1.univ-st-etienne.fr/api/user/admin/all \\\n  Authorization:REPLACE_KEY_VALUE \\\n  content-type:'*/*'"
                    },
                    {
                        "lang": "Python + Python3",
                        "source": "import http.client\n\nconn = http.client.HTTPConnection(\"qanswer-core1.univ-st-etienne.fr\")\n\nheaders = {\n    'content-type': \"*/*\",\n    'Authorization': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"GET\", \"/api/user/admin/all\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
                    },
                    {
                        "lang": "Php + Curl",
                        "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"http://qanswer-core1.univ-st-etienne.fr/api/user/admin/all\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: REPLACE_KEY_VALUE\",\n    \"content-type: */*\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
                    },
                    {
                        "lang": "php",
                        "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('http://qanswer-core1.univ-st-etienne.fr/api/user/admin/all');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setHeaders([\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
                    },
                    {
                        "lang": "Php + Http2",
                        "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('http://qanswer-core1.univ-st-etienne.fr/api/user/admin/all');\n$request->setRequestMethod('GET');\n$request->setHeaders([\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
                    }
                ]
            }
        },
        "/api/user/admin/changePassword": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "deprecated": false,
                "operationId": "changePasswordAdminUsingPOST",
                "parameters": [
                    {
                        "description": "changePassword",
                        "in": "body",
                        "name": "changePassword",
                        "required": true,
                        "schema": {
                            "properties": {
                                "password": {
                                    "type": "string"
                                },
                                "username": {
                                    "type": "string"
                                }
                            },
                            "title": "ChangePasswordAdmin",
                            "type": "object"
                        }
                    }
                ],
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "summary": "Change the password for a user",
                "tags": [
                    "user-controller"
                ],
                "x-codeSamples": [
                    {
                        "lang": "Node + Request",
                        "source": "const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'http://qanswer-core1.univ-st-etienne.fr/api/user/admin/changePassword',\n  headers: {\n    accept: 'application/json',\n    'content-type': '*/*',\n    Authorization: 'REPLACE_KEY_VALUE'\n  },\n  body: {password: 'string', username: 'string'},\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
                    },
                    {
                        "lang": "Shell + Curl",
                        "source": "curl --request POST \\\n  --url http://qanswer-core1.univ-st-etienne.fr/api/user/admin/changePassword \\\n  --header 'Authorization: REPLACE_KEY_VALUE' \\\n  --header 'accept: application/json' \\\n  --header 'content-type: */*' \\\n  --data '{\"password\":\"string\",\"username\":\"string\"}'"
                    },
                    {
                        "lang": "Shell + Httpie",
                        "source": "echo '{\"password\":\"string\",\"username\":\"string\"}' |  \\\n  http POST http://qanswer-core1.univ-st-etienne.fr/api/user/admin/changePassword \\\n  Authorization:REPLACE_KEY_VALUE \\\n  accept:application/json \\\n  content-type:'*/*'"
                    },
                    {
                        "lang": "Python + Python3",
                        "source": "import http.client\n\nconn = http.client.HTTPConnection(\"qanswer-core1.univ-st-etienne.fr\")\n\npayload = \"{\\\"password\\\":\\\"string\\\",\\\"username\\\":\\\"string\\\"}\"\n\nheaders = {\n    'accept': \"application/json\",\n    'content-type': \"*/*\",\n    'Authorization': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"POST\", \"/api/user/admin/changePassword\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
                    },
                    {
                        "lang": "Php + Curl",
                        "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"http://qanswer-core1.univ-st-etienne.fr/api/user/admin/changePassword\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_POSTFIELDS => \"{\\\"password\\\":\\\"string\\\",\\\"username\\\":\\\"string\\\"}\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: REPLACE_KEY_VALUE\",\n    \"accept: application/json\",\n    \"content-type: */*\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
                    },
                    {
                        "lang": "php",
                        "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('http://qanswer-core1.univ-st-etienne.fr/api/user/admin/changePassword');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setHeaders([\n  'accept' => 'application/json',\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$request->setBody('{\"password\":\"string\",\"username\":\"string\"}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
                    },
                    {
                        "lang": "Php + Http2",
                        "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$body = new http\\Message\\Body;\n$body->append('{\"password\":\"string\",\"username\":\"string\"}');\n\n$request->setRequestUrl('http://qanswer-core1.univ-st-etienne.fr/api/user/admin/changePassword');\n$request->setRequestMethod('POST');\n$request->setBody($body);\n\n$request->setHeaders([\n  'accept' => 'application/json',\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
                    }
                ]
            }
        },
        "/api/user/admin/change_quota_kg": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "deprecated": false,
                "operationId": "changeQuotaUsingPOST",
                "parameters": [
                    {
                        "description": "quotaNumber",
                        "format": "int32",
                        "in": "query",
                        "name": "quotaNumber",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "description": "quotaSize",
                        "format": "int64",
                        "in": "query",
                        "name": "quotaSize",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "description": "username",
                        "in": "query",
                        "name": "username",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "summary": "Change the quota for a KG dataset",
                "tags": [
                    "user-controller"
                ],
                "x-codeSamples": [
                    {
                        "lang": "Node + Request",
                        "source": "const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'http://qanswer-core1.univ-st-etienne.fr/api/user/admin/change_quota_kg',\n  qs: {\n    quotaNumber: 'SOME_INTEGER_VALUE',\n    quotaSize: 'SOME_INTEGER_VALUE',\n    username: 'SOME_STRING_VALUE'\n  },\n  headers: {\n    accept: 'application/json',\n    'content-type': '*/*',\n    Authorization: 'REPLACE_KEY_VALUE'\n  }\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
                    },
                    {
                        "lang": "Shell + Curl",
                        "source": "curl --request POST \\\n  --url 'http://qanswer-core1.univ-st-etienne.fr/api/user/admin/change_quota_kg?quotaNumber=SOME_INTEGER_VALUE&quotaSize=SOME_INTEGER_VALUE&username=SOME_STRING_VALUE' \\\n  --header 'Authorization: REPLACE_KEY_VALUE' \\\n  --header 'accept: application/json' \\\n  --header 'content-type: */*'"
                    },
                    {
                        "lang": "Shell + Httpie",
                        "source": "http POST 'http://qanswer-core1.univ-st-etienne.fr/api/user/admin/change_quota_kg?quotaNumber=SOME_INTEGER_VALUE&quotaSize=SOME_INTEGER_VALUE&username=SOME_STRING_VALUE' \\\n  Authorization:REPLACE_KEY_VALUE \\\n  accept:application/json \\\n  content-type:'*/*'"
                    },
                    {
                        "lang": "Python + Python3",
                        "source": "import http.client\n\nconn = http.client.HTTPConnection(\"qanswer-core1.univ-st-etienne.fr\")\n\nheaders = {\n    'accept': \"application/json\",\n    'content-type': \"*/*\",\n    'Authorization': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"POST\", \"/api/user/admin/change_quota_kg?quotaNumber=SOME_INTEGER_VALUE&quotaSize=SOME_INTEGER_VALUE&username=SOME_STRING_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
                    },
                    {
                        "lang": "Php + Curl",
                        "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"http://qanswer-core1.univ-st-etienne.fr/api/user/admin/change_quota_kg?quotaNumber=SOME_INTEGER_VALUE&quotaSize=SOME_INTEGER_VALUE&username=SOME_STRING_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: REPLACE_KEY_VALUE\",\n    \"accept: application/json\",\n    \"content-type: */*\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
                    },
                    {
                        "lang": "php",
                        "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('http://qanswer-core1.univ-st-etienne.fr/api/user/admin/change_quota_kg');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setQueryData([\n  'quotaNumber' => 'SOME_INTEGER_VALUE',\n  'quotaSize' => 'SOME_INTEGER_VALUE',\n  'username' => 'SOME_STRING_VALUE'\n]);\n\n$request->setHeaders([\n  'accept' => 'application/json',\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
                    },
                    {
                        "lang": "Php + Http2",
                        "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('http://qanswer-core1.univ-st-etienne.fr/api/user/admin/change_quota_kg');\n$request->setRequestMethod('POST');\n$request->setQuery(new http\\QueryString([\n  'quotaNumber' => 'SOME_INTEGER_VALUE',\n  'quotaSize' => 'SOME_INTEGER_VALUE',\n  'username' => 'SOME_STRING_VALUE'\n]));\n\n$request->setHeaders([\n  'accept' => 'application/json',\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
                    }
                ]
            }
        },
        "/api/user/admin/remove": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "deprecated": false,
                "operationId": "adminRemoveUsingPOST",
                "parameters": [
                    {
                        "description": "username",
                        "in": "query",
                        "name": "username",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "summary": "Remove a user",
                "tags": [
                    "user-controller"
                ],
                "x-codeSamples": [
                    {
                        "lang": "Node + Request",
                        "source": "const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'http://qanswer-core1.univ-st-etienne.fr/api/user/admin/remove',\n  qs: {username: 'SOME_STRING_VALUE'},\n  headers: {\n    accept: 'application/json',\n    'content-type': '*/*',\n    Authorization: 'REPLACE_KEY_VALUE'\n  }\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
                    },
                    {
                        "lang": "Shell + Curl",
                        "source": "curl --request POST \\\n  --url 'http://qanswer-core1.univ-st-etienne.fr/api/user/admin/remove?username=SOME_STRING_VALUE' \\\n  --header 'Authorization: REPLACE_KEY_VALUE' \\\n  --header 'accept: application/json' \\\n  --header 'content-type: */*'"
                    },
                    {
                        "lang": "Shell + Httpie",
                        "source": "http POST 'http://qanswer-core1.univ-st-etienne.fr/api/user/admin/remove?username=SOME_STRING_VALUE' \\\n  Authorization:REPLACE_KEY_VALUE \\\n  accept:application/json \\\n  content-type:'*/*'"
                    },
                    {
                        "lang": "Python + Python3",
                        "source": "import http.client\n\nconn = http.client.HTTPConnection(\"qanswer-core1.univ-st-etienne.fr\")\n\nheaders = {\n    'accept': \"application/json\",\n    'content-type': \"*/*\",\n    'Authorization': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"POST\", \"/api/user/admin/remove?username=SOME_STRING_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
                    },
                    {
                        "lang": "Php + Curl",
                        "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"http://qanswer-core1.univ-st-etienne.fr/api/user/admin/remove?username=SOME_STRING_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: REPLACE_KEY_VALUE\",\n    \"accept: application/json\",\n    \"content-type: */*\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
                    },
                    {
                        "lang": "php",
                        "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('http://qanswer-core1.univ-st-etienne.fr/api/user/admin/remove');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setQueryData([\n  'username' => 'SOME_STRING_VALUE'\n]);\n\n$request->setHeaders([\n  'accept' => 'application/json',\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
                    },
                    {
                        "lang": "Php + Http2",
                        "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('http://qanswer-core1.univ-st-etienne.fr/api/user/admin/remove');\n$request->setRequestMethod('POST');\n$request->setQuery(new http\\QueryString([\n  'username' => 'SOME_STRING_VALUE'\n]));\n\n$request->setHeaders([\n  'accept' => 'application/json',\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
                    }
                ]
            }
        },
        "/api/user/admin/signup": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "deprecated": false,
                "operationId": "adminSignupUsingPOST",
                "parameters": [
                    {
                        "collectionFormat": "multi",
                        "in": "query",
                        "items": {
                            "type": "object"
                        },
                        "name": "allErrors[0].arguments",
                        "required": false,
                        "type": "array"
                    },
                    {
                        "in": "query",
                        "name": "allErrors[0].code",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "collectionFormat": "multi",
                        "in": "query",
                        "items": {
                            "type": "string"
                        },
                        "name": "allErrors[0].codes",
                        "required": false,
                        "type": "array"
                    },
                    {
                        "in": "query",
                        "name": "allErrors[0].defaultMessage",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "allErrors[0].objectName",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "int32",
                        "in": "query",
                        "name": "errorCount",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "collectionFormat": "multi",
                        "in": "query",
                        "items": {
                            "type": "object"
                        },
                        "name": "fieldError.arguments",
                        "required": false,
                        "type": "array"
                    },
                    {
                        "in": "query",
                        "name": "fieldError.bindingFailure",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "in": "query",
                        "name": "fieldError.code",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "collectionFormat": "multi",
                        "in": "query",
                        "items": {
                            "type": "string"
                        },
                        "name": "fieldError.codes",
                        "required": false,
                        "type": "array"
                    },
                    {
                        "in": "query",
                        "name": "fieldError.defaultMessage",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fieldError.field",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fieldError.objectName",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fieldError.rejectedValue",
                        "required": false,
                        "type": "object"
                    },
                    {
                        "format": "int32",
                        "in": "query",
                        "name": "fieldErrorCount",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "collectionFormat": "multi",
                        "in": "query",
                        "items": {
                            "type": "object"
                        },
                        "name": "fieldErrors[0].arguments",
                        "required": false,
                        "type": "array"
                    },
                    {
                        "in": "query",
                        "name": "fieldErrors[0].bindingFailure",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "in": "query",
                        "name": "fieldErrors[0].code",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "collectionFormat": "multi",
                        "in": "query",
                        "items": {
                            "type": "string"
                        },
                        "name": "fieldErrors[0].codes",
                        "required": false,
                        "type": "array"
                    },
                    {
                        "in": "query",
                        "name": "fieldErrors[0].defaultMessage",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fieldErrors[0].field",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fieldErrors[0].objectName",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fieldErrors[0].rejectedValue",
                        "required": false,
                        "type": "object"
                    },
                    {
                        "collectionFormat": "multi",
                        "in": "query",
                        "items": {
                            "type": "object"
                        },
                        "name": "globalError.arguments",
                        "required": false,
                        "type": "array"
                    },
                    {
                        "in": "query",
                        "name": "globalError.code",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "collectionFormat": "multi",
                        "in": "query",
                        "items": {
                            "type": "string"
                        },
                        "name": "globalError.codes",
                        "required": false,
                        "type": "array"
                    },
                    {
                        "in": "query",
                        "name": "globalError.defaultMessage",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "globalError.objectName",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "int32",
                        "in": "query",
                        "name": "globalErrorCount",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "collectionFormat": "multi",
                        "in": "query",
                        "items": {
                            "type": "object"
                        },
                        "name": "globalErrors[0].arguments",
                        "required": false,
                        "type": "array"
                    },
                    {
                        "in": "query",
                        "name": "globalErrors[0].code",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "collectionFormat": "multi",
                        "in": "query",
                        "items": {
                            "type": "string"
                        },
                        "name": "globalErrors[0].codes",
                        "required": false,
                        "type": "array"
                    },
                    {
                        "in": "query",
                        "name": "globalErrors[0].defaultMessage",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "globalErrors[0].objectName",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "nestedPath",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "objectName",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "signUpRequest",
                        "in": "body",
                        "name": "signUpRequest",
                        "required": true,
                        "schema": {
                            "properties": {
                                "email": {
                                    "type": "string"
                                },
                                "name": {
                                    "type": "string"
                                },
                                "password": {
                                    "type": "string"
                                },
                                "username": {
                                    "type": "string"
                                }
                            },
                            "title": "SignUpRequest",
                            "type": "object"
                        }
                    }
                ],
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "summary": "Create a new user",
                "tags": [
                    "user-controller"
                ],
                "x-codeSamples": [
                    {
                        "lang": "Node + Request",
                        "source": "const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'http://qanswer-core1.univ-st-etienne.fr/api/user/admin/signup',\n  qs: {\n    'allErrors[0].arguments': 'SOME_ARRAY_VALUE',\n    'allErrors[0].code': 'SOME_STRING_VALUE',\n    'allErrors[0].codes': 'SOME_ARRAY_VALUE',\n    'allErrors[0].defaultMessage': 'SOME_STRING_VALUE',\n    'allErrors[0].objectName': 'SOME_STRING_VALUE',\n    errorCount: 'SOME_INTEGER_VALUE',\n    'fieldError.arguments': 'SOME_ARRAY_VALUE',\n    'fieldError.bindingFailure': 'SOME_BOOLEAN_VALUE',\n    'fieldError.code': 'SOME_STRING_VALUE',\n    'fieldError.codes': 'SOME_ARRAY_VALUE',\n    'fieldError.defaultMessage': 'SOME_STRING_VALUE',\n    'fieldError.field': 'SOME_STRING_VALUE',\n    'fieldError.objectName': 'SOME_STRING_VALUE',\n    'fieldError.rejectedValue': 'SOME_OBJECT_VALUE',\n    fieldErrorCount: 'SOME_INTEGER_VALUE',\n    'fieldErrors[0].arguments': 'SOME_ARRAY_VALUE',\n    'fieldErrors[0].bindingFailure': 'SOME_BOOLEAN_VALUE',\n    'fieldErrors[0].code': 'SOME_STRING_VALUE',\n    'fieldErrors[0].codes': 'SOME_ARRAY_VALUE',\n    'fieldErrors[0].defaultMessage': 'SOME_STRING_VALUE',\n    'fieldErrors[0].field': 'SOME_STRING_VALUE',\n    'fieldErrors[0].objectName': 'SOME_STRING_VALUE',\n    'fieldErrors[0].rejectedValue': 'SOME_OBJECT_VALUE',\n    'globalError.arguments': 'SOME_ARRAY_VALUE',\n    'globalError.code': 'SOME_STRING_VALUE',\n    'globalError.codes': 'SOME_ARRAY_VALUE',\n    'globalError.defaultMessage': 'SOME_STRING_VALUE',\n    'globalError.objectName': 'SOME_STRING_VALUE',\n    globalErrorCount: 'SOME_INTEGER_VALUE',\n    'globalErrors[0].arguments': 'SOME_ARRAY_VALUE',\n    'globalErrors[0].code': 'SOME_STRING_VALUE',\n    'globalErrors[0].codes': 'SOME_ARRAY_VALUE',\n    'globalErrors[0].defaultMessage': 'SOME_STRING_VALUE',\n    'globalErrors[0].objectName': 'SOME_STRING_VALUE',\n    nestedPath: 'SOME_STRING_VALUE',\n    objectName: 'SOME_STRING_VALUE'\n  },\n  headers: {\n    accept: 'application/json',\n    'content-type': '*/*',\n    Authorization: 'REPLACE_KEY_VALUE'\n  },\n  body: {email: 'string', name: 'string', password: 'string', username: 'string'},\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
                    },
                    {
                        "lang": "Shell + Curl",
                        "source": "curl --request POST \\\n  --url 'http://qanswer-core1.univ-st-etienne.fr/api/user/admin/signup?allErrors%5B0%5D.arguments=SOME_ARRAY_VALUE&allErrors%5B0%5D.code=SOME_STRING_VALUE&allErrors%5B0%5D.codes=SOME_ARRAY_VALUE&allErrors%5B0%5D.defaultMessage=SOME_STRING_VALUE&allErrors%5B0%5D.objectName=SOME_STRING_VALUE&errorCount=SOME_INTEGER_VALUE&fieldError.arguments=SOME_ARRAY_VALUE&fieldError.bindingFailure=SOME_BOOLEAN_VALUE&fieldError.code=SOME_STRING_VALUE&fieldError.codes=SOME_ARRAY_VALUE&fieldError.defaultMessage=SOME_STRING_VALUE&fieldError.field=SOME_STRING_VALUE&fieldError.objectName=SOME_STRING_VALUE&fieldError.rejectedValue=SOME_OBJECT_VALUE&fieldErrorCount=SOME_INTEGER_VALUE&fieldErrors%5B0%5D.arguments=SOME_ARRAY_VALUE&fieldErrors%5B0%5D.bindingFailure=SOME_BOOLEAN_VALUE&fieldErrors%5B0%5D.code=SOME_STRING_VALUE&fieldErrors%5B0%5D.codes=SOME_ARRAY_VALUE&fieldErrors%5B0%5D.defaultMessage=SOME_STRING_VALUE&fieldErrors%5B0%5D.field=SOME_STRING_VALUE&fieldErrors%5B0%5D.objectName=SOME_STRING_VALUE&fieldErrors%5B0%5D.rejectedValue=SOME_OBJECT_VALUE&globalError.arguments=SOME_ARRAY_VALUE&globalError.code=SOME_STRING_VALUE&globalError.codes=SOME_ARRAY_VALUE&globalError.defaultMessage=SOME_STRING_VALUE&globalError.objectName=SOME_STRING_VALUE&globalErrorCount=SOME_INTEGER_VALUE&globalErrors%5B0%5D.arguments=SOME_ARRAY_VALUE&globalErrors%5B0%5D.code=SOME_STRING_VALUE&globalErrors%5B0%5D.codes=SOME_ARRAY_VALUE&globalErrors%5B0%5D.defaultMessage=SOME_STRING_VALUE&globalErrors%5B0%5D.objectName=SOME_STRING_VALUE&nestedPath=SOME_STRING_VALUE&objectName=SOME_STRING_VALUE' \\\n  --header 'Authorization: REPLACE_KEY_VALUE' \\\n  --header 'accept: application/json' \\\n  --header 'content-type: */*' \\\n  --data '{\"email\":\"string\",\"name\":\"string\",\"password\":\"string\",\"username\":\"string\"}'"
                    },
                    {
                        "lang": "Shell + Httpie",
                        "source": "echo '{\"email\":\"string\",\"name\":\"string\",\"password\":\"string\",\"username\":\"string\"}' |  \\\n  http POST 'http://qanswer-core1.univ-st-etienne.fr/api/user/admin/signup?allErrors%5B0%5D.arguments=SOME_ARRAY_VALUE&allErrors%5B0%5D.code=SOME_STRING_VALUE&allErrors%5B0%5D.codes=SOME_ARRAY_VALUE&allErrors%5B0%5D.defaultMessage=SOME_STRING_VALUE&allErrors%5B0%5D.objectName=SOME_STRING_VALUE&errorCount=SOME_INTEGER_VALUE&fieldError.arguments=SOME_ARRAY_VALUE&fieldError.bindingFailure=SOME_BOOLEAN_VALUE&fieldError.code=SOME_STRING_VALUE&fieldError.codes=SOME_ARRAY_VALUE&fieldError.defaultMessage=SOME_STRING_VALUE&fieldError.field=SOME_STRING_VALUE&fieldError.objectName=SOME_STRING_VALUE&fieldError.rejectedValue=SOME_OBJECT_VALUE&fieldErrorCount=SOME_INTEGER_VALUE&fieldErrors%5B0%5D.arguments=SOME_ARRAY_VALUE&fieldErrors%5B0%5D.bindingFailure=SOME_BOOLEAN_VALUE&fieldErrors%5B0%5D.code=SOME_STRING_VALUE&fieldErrors%5B0%5D.codes=SOME_ARRAY_VALUE&fieldErrors%5B0%5D.defaultMessage=SOME_STRING_VALUE&fieldErrors%5B0%5D.field=SOME_STRING_VALUE&fieldErrors%5B0%5D.objectName=SOME_STRING_VALUE&fieldErrors%5B0%5D.rejectedValue=SOME_OBJECT_VALUE&globalError.arguments=SOME_ARRAY_VALUE&globalError.code=SOME_STRING_VALUE&globalError.codes=SOME_ARRAY_VALUE&globalError.defaultMessage=SOME_STRING_VALUE&globalError.objectName=SOME_STRING_VALUE&globalErrorCount=SOME_INTEGER_VALUE&globalErrors%5B0%5D.arguments=SOME_ARRAY_VALUE&globalErrors%5B0%5D.code=SOME_STRING_VALUE&globalErrors%5B0%5D.codes=SOME_ARRAY_VALUE&globalErrors%5B0%5D.defaultMessage=SOME_STRING_VALUE&globalErrors%5B0%5D.objectName=SOME_STRING_VALUE&nestedPath=SOME_STRING_VALUE&objectName=SOME_STRING_VALUE' \\\n  Authorization:REPLACE_KEY_VALUE \\\n  accept:application/json \\\n  content-type:'*/*'"
                    },
                    {
                        "lang": "Python + Python3",
                        "source": "import http.client\n\nconn = http.client.HTTPConnection(\"qanswer-core1.univ-st-etienne.fr\")\n\npayload = \"{\\\"email\\\":\\\"string\\\",\\\"name\\\":\\\"string\\\",\\\"password\\\":\\\"string\\\",\\\"username\\\":\\\"string\\\"}\"\n\nheaders = {\n    'accept': \"application/json\",\n    'content-type': \"*/*\",\n    'Authorization': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"POST\", \"/api/user/admin/signup?allErrors%5B0%5D.arguments=SOME_ARRAY_VALUE&allErrors%5B0%5D.code=SOME_STRING_VALUE&allErrors%5B0%5D.codes=SOME_ARRAY_VALUE&allErrors%5B0%5D.defaultMessage=SOME_STRING_VALUE&allErrors%5B0%5D.objectName=SOME_STRING_VALUE&errorCount=SOME_INTEGER_VALUE&fieldError.arguments=SOME_ARRAY_VALUE&fieldError.bindingFailure=SOME_BOOLEAN_VALUE&fieldError.code=SOME_STRING_VALUE&fieldError.codes=SOME_ARRAY_VALUE&fieldError.defaultMessage=SOME_STRING_VALUE&fieldError.field=SOME_STRING_VALUE&fieldError.objectName=SOME_STRING_VALUE&fieldError.rejectedValue=SOME_OBJECT_VALUE&fieldErrorCount=SOME_INTEGER_VALUE&fieldErrors%5B0%5D.arguments=SOME_ARRAY_VALUE&fieldErrors%5B0%5D.bindingFailure=SOME_BOOLEAN_VALUE&fieldErrors%5B0%5D.code=SOME_STRING_VALUE&fieldErrors%5B0%5D.codes=SOME_ARRAY_VALUE&fieldErrors%5B0%5D.defaultMessage=SOME_STRING_VALUE&fieldErrors%5B0%5D.field=SOME_STRING_VALUE&fieldErrors%5B0%5D.objectName=SOME_STRING_VALUE&fieldErrors%5B0%5D.rejectedValue=SOME_OBJECT_VALUE&globalError.arguments=SOME_ARRAY_VALUE&globalError.code=SOME_STRING_VALUE&globalError.codes=SOME_ARRAY_VALUE&globalError.defaultMessage=SOME_STRING_VALUE&globalError.objectName=SOME_STRING_VALUE&globalErrorCount=SOME_INTEGER_VALUE&globalErrors%5B0%5D.arguments=SOME_ARRAY_VALUE&globalErrors%5B0%5D.code=SOME_STRING_VALUE&globalErrors%5B0%5D.codes=SOME_ARRAY_VALUE&globalErrors%5B0%5D.defaultMessage=SOME_STRING_VALUE&globalErrors%5B0%5D.objectName=SOME_STRING_VALUE&nestedPath=SOME_STRING_VALUE&objectName=SOME_STRING_VALUE\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
                    },
                    {
                        "lang": "Php + Curl",
                        "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"http://qanswer-core1.univ-st-etienne.fr/api/user/admin/signup?allErrors%5B0%5D.arguments=SOME_ARRAY_VALUE&allErrors%5B0%5D.code=SOME_STRING_VALUE&allErrors%5B0%5D.codes=SOME_ARRAY_VALUE&allErrors%5B0%5D.defaultMessage=SOME_STRING_VALUE&allErrors%5B0%5D.objectName=SOME_STRING_VALUE&errorCount=SOME_INTEGER_VALUE&fieldError.arguments=SOME_ARRAY_VALUE&fieldError.bindingFailure=SOME_BOOLEAN_VALUE&fieldError.code=SOME_STRING_VALUE&fieldError.codes=SOME_ARRAY_VALUE&fieldError.defaultMessage=SOME_STRING_VALUE&fieldError.field=SOME_STRING_VALUE&fieldError.objectName=SOME_STRING_VALUE&fieldError.rejectedValue=SOME_OBJECT_VALUE&fieldErrorCount=SOME_INTEGER_VALUE&fieldErrors%5B0%5D.arguments=SOME_ARRAY_VALUE&fieldErrors%5B0%5D.bindingFailure=SOME_BOOLEAN_VALUE&fieldErrors%5B0%5D.code=SOME_STRING_VALUE&fieldErrors%5B0%5D.codes=SOME_ARRAY_VALUE&fieldErrors%5B0%5D.defaultMessage=SOME_STRING_VALUE&fieldErrors%5B0%5D.field=SOME_STRING_VALUE&fieldErrors%5B0%5D.objectName=SOME_STRING_VALUE&fieldErrors%5B0%5D.rejectedValue=SOME_OBJECT_VALUE&globalError.arguments=SOME_ARRAY_VALUE&globalError.code=SOME_STRING_VALUE&globalError.codes=SOME_ARRAY_VALUE&globalError.defaultMessage=SOME_STRING_VALUE&globalError.objectName=SOME_STRING_VALUE&globalErrorCount=SOME_INTEGER_VALUE&globalErrors%5B0%5D.arguments=SOME_ARRAY_VALUE&globalErrors%5B0%5D.code=SOME_STRING_VALUE&globalErrors%5B0%5D.codes=SOME_ARRAY_VALUE&globalErrors%5B0%5D.defaultMessage=SOME_STRING_VALUE&globalErrors%5B0%5D.objectName=SOME_STRING_VALUE&nestedPath=SOME_STRING_VALUE&objectName=SOME_STRING_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_POSTFIELDS => \"{\\\"email\\\":\\\"string\\\",\\\"name\\\":\\\"string\\\",\\\"password\\\":\\\"string\\\",\\\"username\\\":\\\"string\\\"}\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: REPLACE_KEY_VALUE\",\n    \"accept: application/json\",\n    \"content-type: */*\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
                    },
                    {
                        "lang": "php",
                        "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('http://qanswer-core1.univ-st-etienne.fr/api/user/admin/signup');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setQueryData([\n  'allErrors[0].arguments' => 'SOME_ARRAY_VALUE',\n  'allErrors[0].code' => 'SOME_STRING_VALUE',\n  'allErrors[0].codes' => 'SOME_ARRAY_VALUE',\n  'allErrors[0].defaultMessage' => 'SOME_STRING_VALUE',\n  'allErrors[0].objectName' => 'SOME_STRING_VALUE',\n  'errorCount' => 'SOME_INTEGER_VALUE',\n  'fieldError.arguments' => 'SOME_ARRAY_VALUE',\n  'fieldError.bindingFailure' => 'SOME_BOOLEAN_VALUE',\n  'fieldError.code' => 'SOME_STRING_VALUE',\n  'fieldError.codes' => 'SOME_ARRAY_VALUE',\n  'fieldError.defaultMessage' => 'SOME_STRING_VALUE',\n  'fieldError.field' => 'SOME_STRING_VALUE',\n  'fieldError.objectName' => 'SOME_STRING_VALUE',\n  'fieldError.rejectedValue' => 'SOME_OBJECT_VALUE',\n  'fieldErrorCount' => 'SOME_INTEGER_VALUE',\n  'fieldErrors[0].arguments' => 'SOME_ARRAY_VALUE',\n  'fieldErrors[0].bindingFailure' => 'SOME_BOOLEAN_VALUE',\n  'fieldErrors[0].code' => 'SOME_STRING_VALUE',\n  'fieldErrors[0].codes' => 'SOME_ARRAY_VALUE',\n  'fieldErrors[0].defaultMessage' => 'SOME_STRING_VALUE',\n  'fieldErrors[0].field' => 'SOME_STRING_VALUE',\n  'fieldErrors[0].objectName' => 'SOME_STRING_VALUE',\n  'fieldErrors[0].rejectedValue' => 'SOME_OBJECT_VALUE',\n  'globalError.arguments' => 'SOME_ARRAY_VALUE',\n  'globalError.code' => 'SOME_STRING_VALUE',\n  'globalError.codes' => 'SOME_ARRAY_VALUE',\n  'globalError.defaultMessage' => 'SOME_STRING_VALUE',\n  'globalError.objectName' => 'SOME_STRING_VALUE',\n  'globalErrorCount' => 'SOME_INTEGER_VALUE',\n  'globalErrors[0].arguments' => 'SOME_ARRAY_VALUE',\n  'globalErrors[0].code' => 'SOME_STRING_VALUE',\n  'globalErrors[0].codes' => 'SOME_ARRAY_VALUE',\n  'globalErrors[0].defaultMessage' => 'SOME_STRING_VALUE',\n  'globalErrors[0].objectName' => 'SOME_STRING_VALUE',\n  'nestedPath' => 'SOME_STRING_VALUE',\n  'objectName' => 'SOME_STRING_VALUE'\n]);\n\n$request->setHeaders([\n  'accept' => 'application/json',\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$request->setBody('{\"email\":\"string\",\"name\":\"string\",\"password\":\"string\",\"username\":\"string\"}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
                    },
                    {
                        "lang": "Php + Http2",
                        "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$body = new http\\Message\\Body;\n$body->append('{\"email\":\"string\",\"name\":\"string\",\"password\":\"string\",\"username\":\"string\"}');\n\n$request->setRequestUrl('http://qanswer-core1.univ-st-etienne.fr/api/user/admin/signup');\n$request->setRequestMethod('POST');\n$request->setBody($body);\n\n$request->setQuery(new http\\QueryString([\n  'allErrors[0].arguments' => 'SOME_ARRAY_VALUE',\n  'allErrors[0].code' => 'SOME_STRING_VALUE',\n  'allErrors[0].codes' => 'SOME_ARRAY_VALUE',\n  'allErrors[0].defaultMessage' => 'SOME_STRING_VALUE',\n  'allErrors[0].objectName' => 'SOME_STRING_VALUE',\n  'errorCount' => 'SOME_INTEGER_VALUE',\n  'fieldError.arguments' => 'SOME_ARRAY_VALUE',\n  'fieldError.bindingFailure' => 'SOME_BOOLEAN_VALUE',\n  'fieldError.code' => 'SOME_STRING_VALUE',\n  'fieldError.codes' => 'SOME_ARRAY_VALUE',\n  'fieldError.defaultMessage' => 'SOME_STRING_VALUE',\n  'fieldError.field' => 'SOME_STRING_VALUE',\n  'fieldError.objectName' => 'SOME_STRING_VALUE',\n  'fieldError.rejectedValue' => 'SOME_OBJECT_VALUE',\n  'fieldErrorCount' => 'SOME_INTEGER_VALUE',\n  'fieldErrors[0].arguments' => 'SOME_ARRAY_VALUE',\n  'fieldErrors[0].bindingFailure' => 'SOME_BOOLEAN_VALUE',\n  'fieldErrors[0].code' => 'SOME_STRING_VALUE',\n  'fieldErrors[0].codes' => 'SOME_ARRAY_VALUE',\n  'fieldErrors[0].defaultMessage' => 'SOME_STRING_VALUE',\n  'fieldErrors[0].field' => 'SOME_STRING_VALUE',\n  'fieldErrors[0].objectName' => 'SOME_STRING_VALUE',\n  'fieldErrors[0].rejectedValue' => 'SOME_OBJECT_VALUE',\n  'globalError.arguments' => 'SOME_ARRAY_VALUE',\n  'globalError.code' => 'SOME_STRING_VALUE',\n  'globalError.codes' => 'SOME_ARRAY_VALUE',\n  'globalError.defaultMessage' => 'SOME_STRING_VALUE',\n  'globalError.objectName' => 'SOME_STRING_VALUE',\n  'globalErrorCount' => 'SOME_INTEGER_VALUE',\n  'globalErrors[0].arguments' => 'SOME_ARRAY_VALUE',\n  'globalErrors[0].code' => 'SOME_STRING_VALUE',\n  'globalErrors[0].codes' => 'SOME_ARRAY_VALUE',\n  'globalErrors[0].defaultMessage' => 'SOME_STRING_VALUE',\n  'globalErrors[0].objectName' => 'SOME_STRING_VALUE',\n  'nestedPath' => 'SOME_STRING_VALUE',\n  'objectName' => 'SOME_STRING_VALUE'\n]));\n\n$request->setHeaders([\n  'accept' => 'application/json',\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
                    }
                ]
            }
        },
        "/api/user/changePassword": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "deprecated": false,
                "operationId": "changePasswordUsingPOST",
                "parameters": [
                    {
                        "description": "changePassword",
                        "in": "body",
                        "name": "changePassword",
                        "required": true,
                        "schema": {
                            "properties": {
                                "password": {
                                    "type": "string"
                                },
                                "token": {
                                    "type": "string"
                                }
                            },
                            "title": "ChangePassword",
                            "type": "object"
                        }
                    }
                ],
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "summary": "Change the password for a user using the key send by email",
                "tags": [
                    "user-controller"
                ],
                "x-codeSamples": [
                    {
                        "lang": "Node + Request",
                        "source": "const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'http://qanswer-core1.univ-st-etienne.fr/api/user/changePassword',\n  headers: {\n    accept: 'application/json',\n    'content-type': '*/*',\n    Authorization: 'REPLACE_KEY_VALUE'\n  },\n  body: {password: 'string', token: 'string'},\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
                    },
                    {
                        "lang": "Shell + Curl",
                        "source": "curl --request POST \\\n  --url http://qanswer-core1.univ-st-etienne.fr/api/user/changePassword \\\n  --header 'Authorization: REPLACE_KEY_VALUE' \\\n  --header 'accept: application/json' \\\n  --header 'content-type: */*' \\\n  --data '{\"password\":\"string\",\"token\":\"string\"}'"
                    },
                    {
                        "lang": "Shell + Httpie",
                        "source": "echo '{\"password\":\"string\",\"token\":\"string\"}' |  \\\n  http POST http://qanswer-core1.univ-st-etienne.fr/api/user/changePassword \\\n  Authorization:REPLACE_KEY_VALUE \\\n  accept:application/json \\\n  content-type:'*/*'"
                    },
                    {
                        "lang": "Python + Python3",
                        "source": "import http.client\n\nconn = http.client.HTTPConnection(\"qanswer-core1.univ-st-etienne.fr\")\n\npayload = \"{\\\"password\\\":\\\"string\\\",\\\"token\\\":\\\"string\\\"}\"\n\nheaders = {\n    'accept': \"application/json\",\n    'content-type': \"*/*\",\n    'Authorization': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"POST\", \"/api/user/changePassword\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
                    },
                    {
                        "lang": "Php + Curl",
                        "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"http://qanswer-core1.univ-st-etienne.fr/api/user/changePassword\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_POSTFIELDS => \"{\\\"password\\\":\\\"string\\\",\\\"token\\\":\\\"string\\\"}\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: REPLACE_KEY_VALUE\",\n    \"accept: application/json\",\n    \"content-type: */*\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
                    },
                    {
                        "lang": "php",
                        "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('http://qanswer-core1.univ-st-etienne.fr/api/user/changePassword');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setHeaders([\n  'accept' => 'application/json',\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$request->setBody('{\"password\":\"string\",\"token\":\"string\"}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
                    },
                    {
                        "lang": "Php + Http2",
                        "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$body = new http\\Message\\Body;\n$body->append('{\"password\":\"string\",\"token\":\"string\"}');\n\n$request->setRequestUrl('http://qanswer-core1.univ-st-etienne.fr/api/user/changePassword');\n$request->setRequestMethod('POST');\n$request->setBody($body);\n\n$request->setHeaders([\n  'accept' => 'application/json',\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
                    }
                ]
            }
        },
        "/api/user/change_password_when_logged_in": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "deprecated": false,
                "operationId": "changePasswordLoginUsingPOST",
                "parameters": [
                    {
                        "description": "password",
                        "in": "body",
                        "name": "password",
                        "required": true,
                        "schema": {
                            "properties": {
                                "password": {
                                    "type": "string"
                                }
                            },
                            "title": "Password",
                            "type": "object"
                        }
                    }
                ],
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "summary": "Change the password for a user that is able to login",
                "tags": [
                    "user-controller"
                ],
                "x-codeSamples": [
                    {
                        "lang": "Node + Request",
                        "source": "const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'http://qanswer-core1.univ-st-etienne.fr/api/user/change_password_when_logged_in',\n  headers: {\n    accept: 'application/json',\n    'content-type': '*/*',\n    Authorization: 'REPLACE_KEY_VALUE'\n  },\n  body: {password: 'string'},\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
                    },
                    {
                        "lang": "Shell + Curl",
                        "source": "curl --request POST \\\n  --url http://qanswer-core1.univ-st-etienne.fr/api/user/change_password_when_logged_in \\\n  --header 'Authorization: REPLACE_KEY_VALUE' \\\n  --header 'accept: application/json' \\\n  --header 'content-type: */*' \\\n  --data '{\"password\":\"string\"}'"
                    },
                    {
                        "lang": "Shell + Httpie",
                        "source": "echo '{\"password\":\"string\"}' |  \\\n  http POST http://qanswer-core1.univ-st-etienne.fr/api/user/change_password_when_logged_in \\\n  Authorization:REPLACE_KEY_VALUE \\\n  accept:application/json \\\n  content-type:'*/*'"
                    },
                    {
                        "lang": "Python + Python3",
                        "source": "import http.client\n\nconn = http.client.HTTPConnection(\"qanswer-core1.univ-st-etienne.fr\")\n\npayload = \"{\\\"password\\\":\\\"string\\\"}\"\n\nheaders = {\n    'accept': \"application/json\",\n    'content-type': \"*/*\",\n    'Authorization': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"POST\", \"/api/user/change_password_when_logged_in\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
                    },
                    {
                        "lang": "Php + Curl",
                        "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"http://qanswer-core1.univ-st-etienne.fr/api/user/change_password_when_logged_in\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_POSTFIELDS => \"{\\\"password\\\":\\\"string\\\"}\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: REPLACE_KEY_VALUE\",\n    \"accept: application/json\",\n    \"content-type: */*\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
                    },
                    {
                        "lang": "php",
                        "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('http://qanswer-core1.univ-st-etienne.fr/api/user/change_password_when_logged_in');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setHeaders([\n  'accept' => 'application/json',\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$request->setBody('{\"password\":\"string\"}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
                    },
                    {
                        "lang": "Php + Http2",
                        "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$body = new http\\Message\\Body;\n$body->append('{\"password\":\"string\"}');\n\n$request->setRequestUrl('http://qanswer-core1.univ-st-etienne.fr/api/user/change_password_when_logged_in');\n$request->setRequestMethod('POST');\n$request->setBody($body);\n\n$request->setHeaders([\n  'accept' => 'application/json',\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
                    }
                ]
            }
        },
        "/api/user/checkEmailAvailability": {
            "get": {
                "deprecated": false,
                "operationId": "checkEmailAvailabilityUsingGET",
                "parameters": [
                    {
                        "description": "email",
                        "in": "query",
                        "name": "email",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/UserIdentityAvailability"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "summary": "Check if e-mail is available",
                "tags": [
                    "user-controller"
                ],
                "x-codeSamples": [
                    {
                        "lang": "Node + Request",
                        "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://qanswer-core1.univ-st-etienne.fr/api/user/checkEmailAvailability',\n  qs: {email: 'SOME_STRING_VALUE'},\n  headers: {'content-type': '*/*', Authorization: 'REPLACE_KEY_VALUE'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
                    },
                    {
                        "lang": "Shell + Curl",
                        "source": "curl --request GET \\\n  --url 'http://qanswer-core1.univ-st-etienne.fr/api/user/checkEmailAvailability?email=SOME_STRING_VALUE' \\\n  --header 'Authorization: REPLACE_KEY_VALUE' \\\n  --header 'content-type: */*'"
                    },
                    {
                        "lang": "Shell + Httpie",
                        "source": "http GET 'http://qanswer-core1.univ-st-etienne.fr/api/user/checkEmailAvailability?email=SOME_STRING_VALUE' \\\n  Authorization:REPLACE_KEY_VALUE \\\n  content-type:'*/*'"
                    },
                    {
                        "lang": "Python + Python3",
                        "source": "import http.client\n\nconn = http.client.HTTPConnection(\"qanswer-core1.univ-st-etienne.fr\")\n\nheaders = {\n    'content-type': \"*/*\",\n    'Authorization': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"GET\", \"/api/user/checkEmailAvailability?email=SOME_STRING_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
                    },
                    {
                        "lang": "Php + Curl",
                        "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"http://qanswer-core1.univ-st-etienne.fr/api/user/checkEmailAvailability?email=SOME_STRING_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: REPLACE_KEY_VALUE\",\n    \"content-type: */*\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
                    },
                    {
                        "lang": "php",
                        "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('http://qanswer-core1.univ-st-etienne.fr/api/user/checkEmailAvailability');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setQueryData([\n  'email' => 'SOME_STRING_VALUE'\n]);\n\n$request->setHeaders([\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
                    },
                    {
                        "lang": "Php + Http2",
                        "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('http://qanswer-core1.univ-st-etienne.fr/api/user/checkEmailAvailability');\n$request->setRequestMethod('GET');\n$request->setQuery(new http\\QueryString([\n  'email' => 'SOME_STRING_VALUE'\n]));\n\n$request->setHeaders([\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
                    }
                ]
            }
        },
        "/api/user/checkUsernameAvailability": {
            "get": {
                "deprecated": false,
                "operationId": "checkUsernameAvailabilityUsingGET",
                "parameters": [
                    {
                        "description": "username",
                        "in": "query",
                        "name": "username",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/UserIdentityAvailability"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "summary": "Check if username is available",
                "tags": [
                    "user-controller"
                ],
                "x-codeSamples": [
                    {
                        "lang": "Node + Request",
                        "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://qanswer-core1.univ-st-etienne.fr/api/user/checkUsernameAvailability',\n  qs: {username: 'SOME_STRING_VALUE'},\n  headers: {'content-type': '*/*', Authorization: 'REPLACE_KEY_VALUE'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
                    },
                    {
                        "lang": "Shell + Curl",
                        "source": "curl --request GET \\\n  --url 'http://qanswer-core1.univ-st-etienne.fr/api/user/checkUsernameAvailability?username=SOME_STRING_VALUE' \\\n  --header 'Authorization: REPLACE_KEY_VALUE' \\\n  --header 'content-type: */*'"
                    },
                    {
                        "lang": "Shell + Httpie",
                        "source": "http GET 'http://qanswer-core1.univ-st-etienne.fr/api/user/checkUsernameAvailability?username=SOME_STRING_VALUE' \\\n  Authorization:REPLACE_KEY_VALUE \\\n  content-type:'*/*'"
                    },
                    {
                        "lang": "Python + Python3",
                        "source": "import http.client\n\nconn = http.client.HTTPConnection(\"qanswer-core1.univ-st-etienne.fr\")\n\nheaders = {\n    'content-type': \"*/*\",\n    'Authorization': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"GET\", \"/api/user/checkUsernameAvailability?username=SOME_STRING_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
                    },
                    {
                        "lang": "Php + Curl",
                        "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"http://qanswer-core1.univ-st-etienne.fr/api/user/checkUsernameAvailability?username=SOME_STRING_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: REPLACE_KEY_VALUE\",\n    \"content-type: */*\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
                    },
                    {
                        "lang": "php",
                        "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('http://qanswer-core1.univ-st-etienne.fr/api/user/checkUsernameAvailability');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setQueryData([\n  'username' => 'SOME_STRING_VALUE'\n]);\n\n$request->setHeaders([\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
                    },
                    {
                        "lang": "Php + Http2",
                        "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('http://qanswer-core1.univ-st-etienne.fr/api/user/checkUsernameAvailability');\n$request->setRequestMethod('GET');\n$request->setQuery(new http\\QueryString([\n  'username' => 'SOME_STRING_VALUE'\n]));\n\n$request->setHeaders([\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
                    }
                ]
            }
        },
        "/api/user/me": {
            "get": {
                "deprecated": false,
                "operationId": "meUsingGET",
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/UserProfile"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "summary": "Information of a user",
                "tags": [
                    "user-controller"
                ],
                "x-codeSamples": [
                    {
                        "lang": "Node + Request",
                        "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://qanswer-core1.univ-st-etienne.fr/api/user/me',\n  headers: {'content-type': '*/*', Authorization: 'REPLACE_KEY_VALUE'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
                    },
                    {
                        "lang": "Shell + Curl",
                        "source": "curl --request GET \\\n  --url http://qanswer-core1.univ-st-etienne.fr/api/user/me \\\n  --header 'Authorization: REPLACE_KEY_VALUE' \\\n  --header 'content-type: */*'"
                    },
                    {
                        "lang": "Shell + Httpie",
                        "source": "http GET http://qanswer-core1.univ-st-etienne.fr/api/user/me \\\n  Authorization:REPLACE_KEY_VALUE \\\n  content-type:'*/*'"
                    },
                    {
                        "lang": "Python + Python3",
                        "source": "import http.client\n\nconn = http.client.HTTPConnection(\"qanswer-core1.univ-st-etienne.fr\")\n\nheaders = {\n    'content-type': \"*/*\",\n    'Authorization': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"GET\", \"/api/user/me\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
                    },
                    {
                        "lang": "Php + Curl",
                        "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"http://qanswer-core1.univ-st-etienne.fr/api/user/me\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: REPLACE_KEY_VALUE\",\n    \"content-type: */*\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
                    },
                    {
                        "lang": "php",
                        "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('http://qanswer-core1.univ-st-etienne.fr/api/user/me');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setHeaders([\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
                    },
                    {
                        "lang": "Php + Http2",
                        "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('http://qanswer-core1.univ-st-etienne.fr/api/user/me');\n$request->setRequestMethod('GET');\n$request->setHeaders([\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
                    }
                ]
            }
        },
        "/api/user/registrationConfirm": {
            "get": {
                "deprecated": false,
                "operationId": "confirmRegistrationUsingGET",
                "parameters": [
                    {
                        "description": "token",
                        "in": "query",
                        "name": "token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "summary": "Confirm key of a user send by e-mail on registration",
                "tags": [
                    "user-controller"
                ],
                "x-codeSamples": [
                    {
                        "lang": "Node + Request",
                        "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://qanswer-core1.univ-st-etienne.fr/api/user/registrationConfirm',\n  qs: {token: 'SOME_STRING_VALUE'},\n  headers: {'content-type': '*/*', Authorization: 'REPLACE_KEY_VALUE'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
                    },
                    {
                        "lang": "Shell + Curl",
                        "source": "curl --request GET \\\n  --url 'http://qanswer-core1.univ-st-etienne.fr/api/user/registrationConfirm?token=SOME_STRING_VALUE' \\\n  --header 'Authorization: REPLACE_KEY_VALUE' \\\n  --header 'content-type: */*'"
                    },
                    {
                        "lang": "Shell + Httpie",
                        "source": "http GET 'http://qanswer-core1.univ-st-etienne.fr/api/user/registrationConfirm?token=SOME_STRING_VALUE' \\\n  Authorization:REPLACE_KEY_VALUE \\\n  content-type:'*/*'"
                    },
                    {
                        "lang": "Python + Python3",
                        "source": "import http.client\n\nconn = http.client.HTTPConnection(\"qanswer-core1.univ-st-etienne.fr\")\n\nheaders = {\n    'content-type': \"*/*\",\n    'Authorization': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"GET\", \"/api/user/registrationConfirm?token=SOME_STRING_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
                    },
                    {
                        "lang": "Php + Curl",
                        "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"http://qanswer-core1.univ-st-etienne.fr/api/user/registrationConfirm?token=SOME_STRING_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: REPLACE_KEY_VALUE\",\n    \"content-type: */*\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
                    },
                    {
                        "lang": "php",
                        "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('http://qanswer-core1.univ-st-etienne.fr/api/user/registrationConfirm');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setQueryData([\n  'token' => 'SOME_STRING_VALUE'\n]);\n\n$request->setHeaders([\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
                    },
                    {
                        "lang": "Php + Http2",
                        "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('http://qanswer-core1.univ-st-etienne.fr/api/user/registrationConfirm');\n$request->setRequestMethod('GET');\n$request->setQuery(new http\\QueryString([\n  'token' => 'SOME_STRING_VALUE'\n]));\n\n$request->setHeaders([\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
                    }
                ]
            }
        },
        "/api/user/remove": {
            "get": {
                "deprecated": false,
                "operationId": "removeUsingGET",
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "summary": "Remove a user",
                "tags": [
                    "user-controller"
                ],
                "x-codeSamples": [
                    {
                        "lang": "Node + Request",
                        "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://qanswer-core1.univ-st-etienne.fr/api/user/remove',\n  headers: {'content-type': '*/*', Authorization: 'REPLACE_KEY_VALUE'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
                    },
                    {
                        "lang": "Shell + Curl",
                        "source": "curl --request GET \\\n  --url http://qanswer-core1.univ-st-etienne.fr/api/user/remove \\\n  --header 'Authorization: REPLACE_KEY_VALUE' \\\n  --header 'content-type: */*'"
                    },
                    {
                        "lang": "Shell + Httpie",
                        "source": "http GET http://qanswer-core1.univ-st-etienne.fr/api/user/remove \\\n  Authorization:REPLACE_KEY_VALUE \\\n  content-type:'*/*'"
                    },
                    {
                        "lang": "Python + Python3",
                        "source": "import http.client\n\nconn = http.client.HTTPConnection(\"qanswer-core1.univ-st-etienne.fr\")\n\nheaders = {\n    'content-type': \"*/*\",\n    'Authorization': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"GET\", \"/api/user/remove\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
                    },
                    {
                        "lang": "Php + Curl",
                        "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"http://qanswer-core1.univ-st-etienne.fr/api/user/remove\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: REPLACE_KEY_VALUE\",\n    \"content-type: */*\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
                    },
                    {
                        "lang": "php",
                        "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('http://qanswer-core1.univ-st-etienne.fr/api/user/remove');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setHeaders([\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
                    },
                    {
                        "lang": "Php + Http2",
                        "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('http://qanswer-core1.univ-st-etienne.fr/api/user/remove');\n$request->setRequestMethod('GET');\n$request->setHeaders([\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
                    }
                ]
            }
        },
        "/api/user/resetPassword": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "deprecated": false,
                "operationId": "resetPasswordUsingPOST",
                "parameters": [
                    {
                        "description": "resetPassword",
                        "in": "body",
                        "name": "resetPassword",
                        "required": true,
                        "schema": {
                            "properties": {
                                "email": {
                                    "type": "string"
                                }
                            },
                            "title": "ResetPassword",
                            "type": "object"
                        }
                    }
                ],
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "summary": "Ask to reset a password for a user",
                "tags": [
                    "user-controller"
                ],
                "x-codeSamples": [
                    {
                        "lang": "Node + Request",
                        "source": "const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'http://qanswer-core1.univ-st-etienne.fr/api/user/resetPassword',\n  headers: {\n    accept: 'application/json',\n    'content-type': '*/*',\n    Authorization: 'REPLACE_KEY_VALUE'\n  },\n  body: {email: 'string'},\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
                    },
                    {
                        "lang": "Shell + Curl",
                        "source": "curl --request POST \\\n  --url http://qanswer-core1.univ-st-etienne.fr/api/user/resetPassword \\\n  --header 'Authorization: REPLACE_KEY_VALUE' \\\n  --header 'accept: application/json' \\\n  --header 'content-type: */*' \\\n  --data '{\"email\":\"string\"}'"
                    },
                    {
                        "lang": "Shell + Httpie",
                        "source": "echo '{\"email\":\"string\"}' |  \\\n  http POST http://qanswer-core1.univ-st-etienne.fr/api/user/resetPassword \\\n  Authorization:REPLACE_KEY_VALUE \\\n  accept:application/json \\\n  content-type:'*/*'"
                    },
                    {
                        "lang": "Python + Python3",
                        "source": "import http.client\n\nconn = http.client.HTTPConnection(\"qanswer-core1.univ-st-etienne.fr\")\n\npayload = \"{\\\"email\\\":\\\"string\\\"}\"\n\nheaders = {\n    'accept': \"application/json\",\n    'content-type': \"*/*\",\n    'Authorization': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"POST\", \"/api/user/resetPassword\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
                    },
                    {
                        "lang": "Php + Curl",
                        "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"http://qanswer-core1.univ-st-etienne.fr/api/user/resetPassword\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_POSTFIELDS => \"{\\\"email\\\":\\\"string\\\"}\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: REPLACE_KEY_VALUE\",\n    \"accept: application/json\",\n    \"content-type: */*\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
                    },
                    {
                        "lang": "php",
                        "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('http://qanswer-core1.univ-st-etienne.fr/api/user/resetPassword');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setHeaders([\n  'accept' => 'application/json',\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$request->setBody('{\"email\":\"string\"}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
                    },
                    {
                        "lang": "Php + Http2",
                        "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$body = new http\\Message\\Body;\n$body->append('{\"email\":\"string\"}');\n\n$request->setRequestUrl('http://qanswer-core1.univ-st-etienne.fr/api/user/resetPassword');\n$request->setRequestMethod('POST');\n$request->setBody($body);\n\n$request->setHeaders([\n  'accept' => 'application/json',\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
                    }
                ]
            }
        },
        "/api/user/set_cookie": {
            "get": {
                "deprecated": false,
                "operationId": "setCookieUsingGET",
                "parameters": [
                    {
                        "description": "jwt",
                        "in": "query",
                        "name": "jwt",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "username",
                        "in": "query",
                        "name": "username",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "summary": "Set a cookie for the user",
                "tags": [
                    "user-controller"
                ],
                "x-codeSamples": [
                    {
                        "lang": "Node + Request",
                        "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://qanswer-core1.univ-st-etienne.fr/api/user/set_cookie',\n  qs: {jwt: 'SOME_STRING_VALUE', username: 'SOME_STRING_VALUE'},\n  headers: {'content-type': '*/*', Authorization: 'REPLACE_KEY_VALUE'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
                    },
                    {
                        "lang": "Shell + Curl",
                        "source": "curl --request GET \\\n  --url 'http://qanswer-core1.univ-st-etienne.fr/api/user/set_cookie?jwt=SOME_STRING_VALUE&username=SOME_STRING_VALUE' \\\n  --header 'Authorization: REPLACE_KEY_VALUE' \\\n  --header 'content-type: */*'"
                    },
                    {
                        "lang": "Shell + Httpie",
                        "source": "http GET 'http://qanswer-core1.univ-st-etienne.fr/api/user/set_cookie?jwt=SOME_STRING_VALUE&username=SOME_STRING_VALUE' \\\n  Authorization:REPLACE_KEY_VALUE \\\n  content-type:'*/*'"
                    },
                    {
                        "lang": "Python + Python3",
                        "source": "import http.client\n\nconn = http.client.HTTPConnection(\"qanswer-core1.univ-st-etienne.fr\")\n\nheaders = {\n    'content-type': \"*/*\",\n    'Authorization': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"GET\", \"/api/user/set_cookie?jwt=SOME_STRING_VALUE&username=SOME_STRING_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
                    },
                    {
                        "lang": "Php + Curl",
                        "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"http://qanswer-core1.univ-st-etienne.fr/api/user/set_cookie?jwt=SOME_STRING_VALUE&username=SOME_STRING_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: REPLACE_KEY_VALUE\",\n    \"content-type: */*\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
                    },
                    {
                        "lang": "php",
                        "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('http://qanswer-core1.univ-st-etienne.fr/api/user/set_cookie');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setQueryData([\n  'jwt' => 'SOME_STRING_VALUE',\n  'username' => 'SOME_STRING_VALUE'\n]);\n\n$request->setHeaders([\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
                    },
                    {
                        "lang": "Php + Http2",
                        "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('http://qanswer-core1.univ-st-etienne.fr/api/user/set_cookie');\n$request->setRequestMethod('GET');\n$request->setQuery(new http\\QueryString([\n  'jwt' => 'SOME_STRING_VALUE',\n  'username' => 'SOME_STRING_VALUE'\n]));\n\n$request->setHeaders([\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
                    }
                ]
            }
        },
        "/api/user/signin": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "deprecated": false,
                "operationId": "signinUsingPOST",
                "parameters": [
                    {
                        "description": "loginRequest",
                        "in": "body",
                        "name": "loginRequest",
                        "required": true,
                        "schema": {
                            "properties": {
                                "password": {
                                    "type": "string"
                                },
                                "usernameOrEmail": {
                                    "type": "string"
                                }
                            },
                            "title": "LoginRequest",
                            "type": "object"
                        }
                    }
                ],
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/JwtAuthenticationResponse"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "summary": "User login",
                "tags": [
                    "user-controller"
                ],
                "x-codeSamples": [
                    {
                        "lang": "Node + Request",
                        "source": "const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'http://qanswer-core1.univ-st-etienne.fr/api/user/signin',\n  headers: {\n    accept: 'application/json',\n    'content-type': '*/*',\n    Authorization: 'REPLACE_KEY_VALUE'\n  },\n  body: {password: 'string', usernameOrEmail: 'string'},\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
                    },
                    {
                        "lang": "Shell + Curl",
                        "source": "curl --request POST \\\n  --url http://qanswer-core1.univ-st-etienne.fr/api/user/signin \\\n  --header 'Authorization: REPLACE_KEY_VALUE' \\\n  --header 'accept: application/json' \\\n  --header 'content-type: */*' \\\n  --data '{\"password\":\"string\",\"usernameOrEmail\":\"string\"}'"
                    },
                    {
                        "lang": "Shell + Httpie",
                        "source": "echo '{\"password\":\"string\",\"usernameOrEmail\":\"string\"}' |  \\\n  http POST http://qanswer-core1.univ-st-etienne.fr/api/user/signin \\\n  Authorization:REPLACE_KEY_VALUE \\\n  accept:application/json \\\n  content-type:'*/*'"
                    },
                    {
                        "lang": "Python + Python3",
                        "source": "import http.client\n\nconn = http.client.HTTPConnection(\"qanswer-core1.univ-st-etienne.fr\")\n\npayload = \"{\\\"password\\\":\\\"string\\\",\\\"usernameOrEmail\\\":\\\"string\\\"}\"\n\nheaders = {\n    'accept': \"application/json\",\n    'content-type': \"*/*\",\n    'Authorization': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"POST\", \"/api/user/signin\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
                    },
                    {
                        "lang": "Php + Curl",
                        "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"http://qanswer-core1.univ-st-etienne.fr/api/user/signin\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_POSTFIELDS => \"{\\\"password\\\":\\\"string\\\",\\\"usernameOrEmail\\\":\\\"string\\\"}\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: REPLACE_KEY_VALUE\",\n    \"accept: application/json\",\n    \"content-type: */*\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
                    },
                    {
                        "lang": "php",
                        "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('http://qanswer-core1.univ-st-etienne.fr/api/user/signin');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setHeaders([\n  'accept' => 'application/json',\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$request->setBody('{\"password\":\"string\",\"usernameOrEmail\":\"string\"}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
                    },
                    {
                        "lang": "Php + Http2",
                        "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$body = new http\\Message\\Body;\n$body->append('{\"password\":\"string\",\"usernameOrEmail\":\"string\"}');\n\n$request->setRequestUrl('http://qanswer-core1.univ-st-etienne.fr/api/user/signin');\n$request->setRequestMethod('POST');\n$request->setBody($body);\n\n$request->setHeaders([\n  'accept' => 'application/json',\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
                    }
                ]
            }
        },
        "/api/user/signup": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "deprecated": false,
                "operationId": "signupUsingPOST",
                "parameters": [
                    {
                        "collectionFormat": "multi",
                        "in": "query",
                        "items": {
                            "type": "object"
                        },
                        "name": "allErrors[0].arguments",
                        "required": false,
                        "type": "array"
                    },
                    {
                        "in": "query",
                        "name": "allErrors[0].code",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "collectionFormat": "multi",
                        "in": "query",
                        "items": {
                            "type": "string"
                        },
                        "name": "allErrors[0].codes",
                        "required": false,
                        "type": "array"
                    },
                    {
                        "in": "query",
                        "name": "allErrors[0].defaultMessage",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "allErrors[0].objectName",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "int32",
                        "in": "query",
                        "name": "errorCount",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "collectionFormat": "multi",
                        "in": "query",
                        "items": {
                            "type": "object"
                        },
                        "name": "fieldError.arguments",
                        "required": false,
                        "type": "array"
                    },
                    {
                        "in": "query",
                        "name": "fieldError.bindingFailure",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "in": "query",
                        "name": "fieldError.code",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "collectionFormat": "multi",
                        "in": "query",
                        "items": {
                            "type": "string"
                        },
                        "name": "fieldError.codes",
                        "required": false,
                        "type": "array"
                    },
                    {
                        "in": "query",
                        "name": "fieldError.defaultMessage",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fieldError.field",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fieldError.objectName",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fieldError.rejectedValue",
                        "required": false,
                        "type": "object"
                    },
                    {
                        "format": "int32",
                        "in": "query",
                        "name": "fieldErrorCount",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "collectionFormat": "multi",
                        "in": "query",
                        "items": {
                            "type": "object"
                        },
                        "name": "fieldErrors[0].arguments",
                        "required": false,
                        "type": "array"
                    },
                    {
                        "in": "query",
                        "name": "fieldErrors[0].bindingFailure",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "in": "query",
                        "name": "fieldErrors[0].code",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "collectionFormat": "multi",
                        "in": "query",
                        "items": {
                            "type": "string"
                        },
                        "name": "fieldErrors[0].codes",
                        "required": false,
                        "type": "array"
                    },
                    {
                        "in": "query",
                        "name": "fieldErrors[0].defaultMessage",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fieldErrors[0].field",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fieldErrors[0].objectName",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fieldErrors[0].rejectedValue",
                        "required": false,
                        "type": "object"
                    },
                    {
                        "collectionFormat": "multi",
                        "in": "query",
                        "items": {
                            "type": "object"
                        },
                        "name": "globalError.arguments",
                        "required": false,
                        "type": "array"
                    },
                    {
                        "in": "query",
                        "name": "globalError.code",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "collectionFormat": "multi",
                        "in": "query",
                        "items": {
                            "type": "string"
                        },
                        "name": "globalError.codes",
                        "required": false,
                        "type": "array"
                    },
                    {
                        "in": "query",
                        "name": "globalError.defaultMessage",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "globalError.objectName",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "int32",
                        "in": "query",
                        "name": "globalErrorCount",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "collectionFormat": "multi",
                        "in": "query",
                        "items": {
                            "type": "object"
                        },
                        "name": "globalErrors[0].arguments",
                        "required": false,
                        "type": "array"
                    },
                    {
                        "in": "query",
                        "name": "globalErrors[0].code",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "collectionFormat": "multi",
                        "in": "query",
                        "items": {
                            "type": "string"
                        },
                        "name": "globalErrors[0].codes",
                        "required": false,
                        "type": "array"
                    },
                    {
                        "in": "query",
                        "name": "globalErrors[0].defaultMessage",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "globalErrors[0].objectName",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "nestedPath",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "objectName",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "signUpRequest",
                        "in": "body",
                        "name": "signUpRequest",
                        "required": true,
                        "schema": {
                            "properties": {
                                "email": {
                                    "type": "string"
                                },
                                "name": {
                                    "type": "string"
                                },
                                "password": {
                                    "type": "string"
                                },
                                "username": {
                                    "type": "string"
                                }
                            },
                            "title": "SignUpRequest",
                            "type": "object"
                        }
                    }
                ],
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "summary": "Create a new user",
                "tags": [
                    "user-controller"
                ],
                "x-codeSamples": [
                    {
                        "lang": "Node + Request",
                        "source": "const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'http://qanswer-core1.univ-st-etienne.fr/api/user/signup',\n  qs: {\n    'allErrors[0].arguments': 'SOME_ARRAY_VALUE',\n    'allErrors[0].code': 'SOME_STRING_VALUE',\n    'allErrors[0].codes': 'SOME_ARRAY_VALUE',\n    'allErrors[0].defaultMessage': 'SOME_STRING_VALUE',\n    'allErrors[0].objectName': 'SOME_STRING_VALUE',\n    errorCount: 'SOME_INTEGER_VALUE',\n    'fieldError.arguments': 'SOME_ARRAY_VALUE',\n    'fieldError.bindingFailure': 'SOME_BOOLEAN_VALUE',\n    'fieldError.code': 'SOME_STRING_VALUE',\n    'fieldError.codes': 'SOME_ARRAY_VALUE',\n    'fieldError.defaultMessage': 'SOME_STRING_VALUE',\n    'fieldError.field': 'SOME_STRING_VALUE',\n    'fieldError.objectName': 'SOME_STRING_VALUE',\n    'fieldError.rejectedValue': 'SOME_OBJECT_VALUE',\n    fieldErrorCount: 'SOME_INTEGER_VALUE',\n    'fieldErrors[0].arguments': 'SOME_ARRAY_VALUE',\n    'fieldErrors[0].bindingFailure': 'SOME_BOOLEAN_VALUE',\n    'fieldErrors[0].code': 'SOME_STRING_VALUE',\n    'fieldErrors[0].codes': 'SOME_ARRAY_VALUE',\n    'fieldErrors[0].defaultMessage': 'SOME_STRING_VALUE',\n    'fieldErrors[0].field': 'SOME_STRING_VALUE',\n    'fieldErrors[0].objectName': 'SOME_STRING_VALUE',\n    'fieldErrors[0].rejectedValue': 'SOME_OBJECT_VALUE',\n    'globalError.arguments': 'SOME_ARRAY_VALUE',\n    'globalError.code': 'SOME_STRING_VALUE',\n    'globalError.codes': 'SOME_ARRAY_VALUE',\n    'globalError.defaultMessage': 'SOME_STRING_VALUE',\n    'globalError.objectName': 'SOME_STRING_VALUE',\n    globalErrorCount: 'SOME_INTEGER_VALUE',\n    'globalErrors[0].arguments': 'SOME_ARRAY_VALUE',\n    'globalErrors[0].code': 'SOME_STRING_VALUE',\n    'globalErrors[0].codes': 'SOME_ARRAY_VALUE',\n    'globalErrors[0].defaultMessage': 'SOME_STRING_VALUE',\n    'globalErrors[0].objectName': 'SOME_STRING_VALUE',\n    nestedPath: 'SOME_STRING_VALUE',\n    objectName: 'SOME_STRING_VALUE'\n  },\n  headers: {\n    accept: 'application/json',\n    'content-type': '*/*',\n    Authorization: 'REPLACE_KEY_VALUE'\n  },\n  body: {email: 'string', name: 'string', password: 'string', username: 'string'},\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
                    },
                    {
                        "lang": "Shell + Curl",
                        "source": "curl --request POST \\\n  --url 'http://qanswer-core1.univ-st-etienne.fr/api/user/signup?allErrors%5B0%5D.arguments=SOME_ARRAY_VALUE&allErrors%5B0%5D.code=SOME_STRING_VALUE&allErrors%5B0%5D.codes=SOME_ARRAY_VALUE&allErrors%5B0%5D.defaultMessage=SOME_STRING_VALUE&allErrors%5B0%5D.objectName=SOME_STRING_VALUE&errorCount=SOME_INTEGER_VALUE&fieldError.arguments=SOME_ARRAY_VALUE&fieldError.bindingFailure=SOME_BOOLEAN_VALUE&fieldError.code=SOME_STRING_VALUE&fieldError.codes=SOME_ARRAY_VALUE&fieldError.defaultMessage=SOME_STRING_VALUE&fieldError.field=SOME_STRING_VALUE&fieldError.objectName=SOME_STRING_VALUE&fieldError.rejectedValue=SOME_OBJECT_VALUE&fieldErrorCount=SOME_INTEGER_VALUE&fieldErrors%5B0%5D.arguments=SOME_ARRAY_VALUE&fieldErrors%5B0%5D.bindingFailure=SOME_BOOLEAN_VALUE&fieldErrors%5B0%5D.code=SOME_STRING_VALUE&fieldErrors%5B0%5D.codes=SOME_ARRAY_VALUE&fieldErrors%5B0%5D.defaultMessage=SOME_STRING_VALUE&fieldErrors%5B0%5D.field=SOME_STRING_VALUE&fieldErrors%5B0%5D.objectName=SOME_STRING_VALUE&fieldErrors%5B0%5D.rejectedValue=SOME_OBJECT_VALUE&globalError.arguments=SOME_ARRAY_VALUE&globalError.code=SOME_STRING_VALUE&globalError.codes=SOME_ARRAY_VALUE&globalError.defaultMessage=SOME_STRING_VALUE&globalError.objectName=SOME_STRING_VALUE&globalErrorCount=SOME_INTEGER_VALUE&globalErrors%5B0%5D.arguments=SOME_ARRAY_VALUE&globalErrors%5B0%5D.code=SOME_STRING_VALUE&globalErrors%5B0%5D.codes=SOME_ARRAY_VALUE&globalErrors%5B0%5D.defaultMessage=SOME_STRING_VALUE&globalErrors%5B0%5D.objectName=SOME_STRING_VALUE&nestedPath=SOME_STRING_VALUE&objectName=SOME_STRING_VALUE' \\\n  --header 'Authorization: REPLACE_KEY_VALUE' \\\n  --header 'accept: application/json' \\\n  --header 'content-type: */*' \\\n  --data '{\"email\":\"string\",\"name\":\"string\",\"password\":\"string\",\"username\":\"string\"}'"
                    },
                    {
                        "lang": "Shell + Httpie",
                        "source": "echo '{\"email\":\"string\",\"name\":\"string\",\"password\":\"string\",\"username\":\"string\"}' |  \\\n  http POST 'http://qanswer-core1.univ-st-etienne.fr/api/user/signup?allErrors%5B0%5D.arguments=SOME_ARRAY_VALUE&allErrors%5B0%5D.code=SOME_STRING_VALUE&allErrors%5B0%5D.codes=SOME_ARRAY_VALUE&allErrors%5B0%5D.defaultMessage=SOME_STRING_VALUE&allErrors%5B0%5D.objectName=SOME_STRING_VALUE&errorCount=SOME_INTEGER_VALUE&fieldError.arguments=SOME_ARRAY_VALUE&fieldError.bindingFailure=SOME_BOOLEAN_VALUE&fieldError.code=SOME_STRING_VALUE&fieldError.codes=SOME_ARRAY_VALUE&fieldError.defaultMessage=SOME_STRING_VALUE&fieldError.field=SOME_STRING_VALUE&fieldError.objectName=SOME_STRING_VALUE&fieldError.rejectedValue=SOME_OBJECT_VALUE&fieldErrorCount=SOME_INTEGER_VALUE&fieldErrors%5B0%5D.arguments=SOME_ARRAY_VALUE&fieldErrors%5B0%5D.bindingFailure=SOME_BOOLEAN_VALUE&fieldErrors%5B0%5D.code=SOME_STRING_VALUE&fieldErrors%5B0%5D.codes=SOME_ARRAY_VALUE&fieldErrors%5B0%5D.defaultMessage=SOME_STRING_VALUE&fieldErrors%5B0%5D.field=SOME_STRING_VALUE&fieldErrors%5B0%5D.objectName=SOME_STRING_VALUE&fieldErrors%5B0%5D.rejectedValue=SOME_OBJECT_VALUE&globalError.arguments=SOME_ARRAY_VALUE&globalError.code=SOME_STRING_VALUE&globalError.codes=SOME_ARRAY_VALUE&globalError.defaultMessage=SOME_STRING_VALUE&globalError.objectName=SOME_STRING_VALUE&globalErrorCount=SOME_INTEGER_VALUE&globalErrors%5B0%5D.arguments=SOME_ARRAY_VALUE&globalErrors%5B0%5D.code=SOME_STRING_VALUE&globalErrors%5B0%5D.codes=SOME_ARRAY_VALUE&globalErrors%5B0%5D.defaultMessage=SOME_STRING_VALUE&globalErrors%5B0%5D.objectName=SOME_STRING_VALUE&nestedPath=SOME_STRING_VALUE&objectName=SOME_STRING_VALUE' \\\n  Authorization:REPLACE_KEY_VALUE \\\n  accept:application/json \\\n  content-type:'*/*'"
                    },
                    {
                        "lang": "Python + Python3",
                        "source": "import http.client\n\nconn = http.client.HTTPConnection(\"qanswer-core1.univ-st-etienne.fr\")\n\npayload = \"{\\\"email\\\":\\\"string\\\",\\\"name\\\":\\\"string\\\",\\\"password\\\":\\\"string\\\",\\\"username\\\":\\\"string\\\"}\"\n\nheaders = {\n    'accept': \"application/json\",\n    'content-type': \"*/*\",\n    'Authorization': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"POST\", \"/api/user/signup?allErrors%5B0%5D.arguments=SOME_ARRAY_VALUE&allErrors%5B0%5D.code=SOME_STRING_VALUE&allErrors%5B0%5D.codes=SOME_ARRAY_VALUE&allErrors%5B0%5D.defaultMessage=SOME_STRING_VALUE&allErrors%5B0%5D.objectName=SOME_STRING_VALUE&errorCount=SOME_INTEGER_VALUE&fieldError.arguments=SOME_ARRAY_VALUE&fieldError.bindingFailure=SOME_BOOLEAN_VALUE&fieldError.code=SOME_STRING_VALUE&fieldError.codes=SOME_ARRAY_VALUE&fieldError.defaultMessage=SOME_STRING_VALUE&fieldError.field=SOME_STRING_VALUE&fieldError.objectName=SOME_STRING_VALUE&fieldError.rejectedValue=SOME_OBJECT_VALUE&fieldErrorCount=SOME_INTEGER_VALUE&fieldErrors%5B0%5D.arguments=SOME_ARRAY_VALUE&fieldErrors%5B0%5D.bindingFailure=SOME_BOOLEAN_VALUE&fieldErrors%5B0%5D.code=SOME_STRING_VALUE&fieldErrors%5B0%5D.codes=SOME_ARRAY_VALUE&fieldErrors%5B0%5D.defaultMessage=SOME_STRING_VALUE&fieldErrors%5B0%5D.field=SOME_STRING_VALUE&fieldErrors%5B0%5D.objectName=SOME_STRING_VALUE&fieldErrors%5B0%5D.rejectedValue=SOME_OBJECT_VALUE&globalError.arguments=SOME_ARRAY_VALUE&globalError.code=SOME_STRING_VALUE&globalError.codes=SOME_ARRAY_VALUE&globalError.defaultMessage=SOME_STRING_VALUE&globalError.objectName=SOME_STRING_VALUE&globalErrorCount=SOME_INTEGER_VALUE&globalErrors%5B0%5D.arguments=SOME_ARRAY_VALUE&globalErrors%5B0%5D.code=SOME_STRING_VALUE&globalErrors%5B0%5D.codes=SOME_ARRAY_VALUE&globalErrors%5B0%5D.defaultMessage=SOME_STRING_VALUE&globalErrors%5B0%5D.objectName=SOME_STRING_VALUE&nestedPath=SOME_STRING_VALUE&objectName=SOME_STRING_VALUE\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
                    },
                    {
                        "lang": "Php + Curl",
                        "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"http://qanswer-core1.univ-st-etienne.fr/api/user/signup?allErrors%5B0%5D.arguments=SOME_ARRAY_VALUE&allErrors%5B0%5D.code=SOME_STRING_VALUE&allErrors%5B0%5D.codes=SOME_ARRAY_VALUE&allErrors%5B0%5D.defaultMessage=SOME_STRING_VALUE&allErrors%5B0%5D.objectName=SOME_STRING_VALUE&errorCount=SOME_INTEGER_VALUE&fieldError.arguments=SOME_ARRAY_VALUE&fieldError.bindingFailure=SOME_BOOLEAN_VALUE&fieldError.code=SOME_STRING_VALUE&fieldError.codes=SOME_ARRAY_VALUE&fieldError.defaultMessage=SOME_STRING_VALUE&fieldError.field=SOME_STRING_VALUE&fieldError.objectName=SOME_STRING_VALUE&fieldError.rejectedValue=SOME_OBJECT_VALUE&fieldErrorCount=SOME_INTEGER_VALUE&fieldErrors%5B0%5D.arguments=SOME_ARRAY_VALUE&fieldErrors%5B0%5D.bindingFailure=SOME_BOOLEAN_VALUE&fieldErrors%5B0%5D.code=SOME_STRING_VALUE&fieldErrors%5B0%5D.codes=SOME_ARRAY_VALUE&fieldErrors%5B0%5D.defaultMessage=SOME_STRING_VALUE&fieldErrors%5B0%5D.field=SOME_STRING_VALUE&fieldErrors%5B0%5D.objectName=SOME_STRING_VALUE&fieldErrors%5B0%5D.rejectedValue=SOME_OBJECT_VALUE&globalError.arguments=SOME_ARRAY_VALUE&globalError.code=SOME_STRING_VALUE&globalError.codes=SOME_ARRAY_VALUE&globalError.defaultMessage=SOME_STRING_VALUE&globalError.objectName=SOME_STRING_VALUE&globalErrorCount=SOME_INTEGER_VALUE&globalErrors%5B0%5D.arguments=SOME_ARRAY_VALUE&globalErrors%5B0%5D.code=SOME_STRING_VALUE&globalErrors%5B0%5D.codes=SOME_ARRAY_VALUE&globalErrors%5B0%5D.defaultMessage=SOME_STRING_VALUE&globalErrors%5B0%5D.objectName=SOME_STRING_VALUE&nestedPath=SOME_STRING_VALUE&objectName=SOME_STRING_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_POSTFIELDS => \"{\\\"email\\\":\\\"string\\\",\\\"name\\\":\\\"string\\\",\\\"password\\\":\\\"string\\\",\\\"username\\\":\\\"string\\\"}\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: REPLACE_KEY_VALUE\",\n    \"accept: application/json\",\n    \"content-type: */*\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
                    },
                    {
                        "lang": "php",
                        "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('http://qanswer-core1.univ-st-etienne.fr/api/user/signup');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setQueryData([\n  'allErrors[0].arguments' => 'SOME_ARRAY_VALUE',\n  'allErrors[0].code' => 'SOME_STRING_VALUE',\n  'allErrors[0].codes' => 'SOME_ARRAY_VALUE',\n  'allErrors[0].defaultMessage' => 'SOME_STRING_VALUE',\n  'allErrors[0].objectName' => 'SOME_STRING_VALUE',\n  'errorCount' => 'SOME_INTEGER_VALUE',\n  'fieldError.arguments' => 'SOME_ARRAY_VALUE',\n  'fieldError.bindingFailure' => 'SOME_BOOLEAN_VALUE',\n  'fieldError.code' => 'SOME_STRING_VALUE',\n  'fieldError.codes' => 'SOME_ARRAY_VALUE',\n  'fieldError.defaultMessage' => 'SOME_STRING_VALUE',\n  'fieldError.field' => 'SOME_STRING_VALUE',\n  'fieldError.objectName' => 'SOME_STRING_VALUE',\n  'fieldError.rejectedValue' => 'SOME_OBJECT_VALUE',\n  'fieldErrorCount' => 'SOME_INTEGER_VALUE',\n  'fieldErrors[0].arguments' => 'SOME_ARRAY_VALUE',\n  'fieldErrors[0].bindingFailure' => 'SOME_BOOLEAN_VALUE',\n  'fieldErrors[0].code' => 'SOME_STRING_VALUE',\n  'fieldErrors[0].codes' => 'SOME_ARRAY_VALUE',\n  'fieldErrors[0].defaultMessage' => 'SOME_STRING_VALUE',\n  'fieldErrors[0].field' => 'SOME_STRING_VALUE',\n  'fieldErrors[0].objectName' => 'SOME_STRING_VALUE',\n  'fieldErrors[0].rejectedValue' => 'SOME_OBJECT_VALUE',\n  'globalError.arguments' => 'SOME_ARRAY_VALUE',\n  'globalError.code' => 'SOME_STRING_VALUE',\n  'globalError.codes' => 'SOME_ARRAY_VALUE',\n  'globalError.defaultMessage' => 'SOME_STRING_VALUE',\n  'globalError.objectName' => 'SOME_STRING_VALUE',\n  'globalErrorCount' => 'SOME_INTEGER_VALUE',\n  'globalErrors[0].arguments' => 'SOME_ARRAY_VALUE',\n  'globalErrors[0].code' => 'SOME_STRING_VALUE',\n  'globalErrors[0].codes' => 'SOME_ARRAY_VALUE',\n  'globalErrors[0].defaultMessage' => 'SOME_STRING_VALUE',\n  'globalErrors[0].objectName' => 'SOME_STRING_VALUE',\n  'nestedPath' => 'SOME_STRING_VALUE',\n  'objectName' => 'SOME_STRING_VALUE'\n]);\n\n$request->setHeaders([\n  'accept' => 'application/json',\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$request->setBody('{\"email\":\"string\",\"name\":\"string\",\"password\":\"string\",\"username\":\"string\"}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
                    },
                    {
                        "lang": "Php + Http2",
                        "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$body = new http\\Message\\Body;\n$body->append('{\"email\":\"string\",\"name\":\"string\",\"password\":\"string\",\"username\":\"string\"}');\n\n$request->setRequestUrl('http://qanswer-core1.univ-st-etienne.fr/api/user/signup');\n$request->setRequestMethod('POST');\n$request->setBody($body);\n\n$request->setQuery(new http\\QueryString([\n  'allErrors[0].arguments' => 'SOME_ARRAY_VALUE',\n  'allErrors[0].code' => 'SOME_STRING_VALUE',\n  'allErrors[0].codes' => 'SOME_ARRAY_VALUE',\n  'allErrors[0].defaultMessage' => 'SOME_STRING_VALUE',\n  'allErrors[0].objectName' => 'SOME_STRING_VALUE',\n  'errorCount' => 'SOME_INTEGER_VALUE',\n  'fieldError.arguments' => 'SOME_ARRAY_VALUE',\n  'fieldError.bindingFailure' => 'SOME_BOOLEAN_VALUE',\n  'fieldError.code' => 'SOME_STRING_VALUE',\n  'fieldError.codes' => 'SOME_ARRAY_VALUE',\n  'fieldError.defaultMessage' => 'SOME_STRING_VALUE',\n  'fieldError.field' => 'SOME_STRING_VALUE',\n  'fieldError.objectName' => 'SOME_STRING_VALUE',\n  'fieldError.rejectedValue' => 'SOME_OBJECT_VALUE',\n  'fieldErrorCount' => 'SOME_INTEGER_VALUE',\n  'fieldErrors[0].arguments' => 'SOME_ARRAY_VALUE',\n  'fieldErrors[0].bindingFailure' => 'SOME_BOOLEAN_VALUE',\n  'fieldErrors[0].code' => 'SOME_STRING_VALUE',\n  'fieldErrors[0].codes' => 'SOME_ARRAY_VALUE',\n  'fieldErrors[0].defaultMessage' => 'SOME_STRING_VALUE',\n  'fieldErrors[0].field' => 'SOME_STRING_VALUE',\n  'fieldErrors[0].objectName' => 'SOME_STRING_VALUE',\n  'fieldErrors[0].rejectedValue' => 'SOME_OBJECT_VALUE',\n  'globalError.arguments' => 'SOME_ARRAY_VALUE',\n  'globalError.code' => 'SOME_STRING_VALUE',\n  'globalError.codes' => 'SOME_ARRAY_VALUE',\n  'globalError.defaultMessage' => 'SOME_STRING_VALUE',\n  'globalError.objectName' => 'SOME_STRING_VALUE',\n  'globalErrorCount' => 'SOME_INTEGER_VALUE',\n  'globalErrors[0].arguments' => 'SOME_ARRAY_VALUE',\n  'globalErrors[0].code' => 'SOME_STRING_VALUE',\n  'globalErrors[0].codes' => 'SOME_ARRAY_VALUE',\n  'globalErrors[0].defaultMessage' => 'SOME_STRING_VALUE',\n  'globalErrors[0].objectName' => 'SOME_STRING_VALUE',\n  'nestedPath' => 'SOME_STRING_VALUE',\n  'objectName' => 'SOME_STRING_VALUE'\n]));\n\n$request->setHeaders([\n  'accept' => 'application/json',\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
                    }
                ]
            }
        },
        "/resource/access_pdf": {
            "get": {
                "deprecated": false,
                "operationId": "resource_pdfUsingGET",
                "parameters": [
                    {
                        "description": "authorization",
                        "in": "body",
                        "name": "authorization",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "filename",
                        "in": "query",
                        "name": "filename",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "indexName",
                        "in": "query",
                        "name": "indexName",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "text",
                        "in": "query",
                        "name": "text",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "username",
                        "in": "body",
                        "name": "username",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "format": "byte",
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "summary": "resource_pdf",
                "tags": [
                    "static-controller"
                ],
                "x-codeSamples": [
                    {
                        "lang": "Node + Request",
                        "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://qanswer-core1.univ-st-etienne.fr/resource/access_pdf',\n  qs: {\n    filename: 'SOME_STRING_VALUE',\n    indexName: 'SOME_STRING_VALUE',\n    text: 'SOME_STRING_VALUE'\n  },\n  headers: {'content-type': '*/*', Authorization: 'REPLACE_KEY_VALUE'},\n  body: 'string',\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
                    },
                    {
                        "lang": "Shell + Curl",
                        "source": "curl --request GET \\\n  --url 'http://qanswer-core1.univ-st-etienne.fr/resource/access_pdf?filename=SOME_STRING_VALUE&indexName=SOME_STRING_VALUE&text=SOME_STRING_VALUE' \\\n  --header 'Authorization: REPLACE_KEY_VALUE' \\\n  --header 'content-type: */*' \\\n  --data '\"string\"'"
                    },
                    {
                        "lang": "Shell + Httpie",
                        "source": "echo '\"string\"' |  \\\n  http GET 'http://qanswer-core1.univ-st-etienne.fr/resource/access_pdf?filename=SOME_STRING_VALUE&indexName=SOME_STRING_VALUE&text=SOME_STRING_VALUE' \\\n  Authorization:REPLACE_KEY_VALUE \\\n  content-type:'*/*'"
                    },
                    {
                        "lang": "Python + Python3",
                        "source": "import http.client\n\nconn = http.client.HTTPConnection(\"qanswer-core1.univ-st-etienne.fr\")\n\npayload = \"\\\"string\\\"\"\n\nheaders = {\n    'content-type': \"*/*\",\n    'Authorization': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"GET\", \"/resource/access_pdf?filename=SOME_STRING_VALUE&indexName=SOME_STRING_VALUE&text=SOME_STRING_VALUE\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
                    },
                    {
                        "lang": "Php + Curl",
                        "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"http://qanswer-core1.univ-st-etienne.fr/resource/access_pdf?filename=SOME_STRING_VALUE&indexName=SOME_STRING_VALUE&text=SOME_STRING_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_POSTFIELDS => \"\\\"string\\\"\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: REPLACE_KEY_VALUE\",\n    \"content-type: */*\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
                    },
                    {
                        "lang": "php",
                        "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('http://qanswer-core1.univ-st-etienne.fr/resource/access_pdf');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setQueryData([\n  'filename' => 'SOME_STRING_VALUE',\n  'indexName' => 'SOME_STRING_VALUE',\n  'text' => 'SOME_STRING_VALUE'\n]);\n\n$request->setHeaders([\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$request->setBody('\"string\"');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
                    },
                    {
                        "lang": "Php + Http2",
                        "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$body = new http\\Message\\Body;\n$body->append('\"string\"');\n\n$request->setRequestUrl('http://qanswer-core1.univ-st-etienne.fr/resource/access_pdf');\n$request->setRequestMethod('GET');\n$request->setBody($body);\n\n$request->setQuery(new http\\QueryString([\n  'filename' => 'SOME_STRING_VALUE',\n  'indexName' => 'SOME_STRING_VALUE',\n  'text' => 'SOME_STRING_VALUE'\n]));\n\n$request->setHeaders([\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
                    }
                ]
            }
        },
        "/resource/serve_iframe": {
            "get": {
                "deprecated": false,
                "operationId": "serveIframeUsingGET",
                "parameters": [
                    {
                        "description": "authorization",
                        "in": "body",
                        "name": "authorization",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "url",
                        "in": "query",
                        "name": "url",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "username",
                        "in": "body",
                        "name": "username",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "format": "byte",
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "summary": "serveIframe",
                "tags": [
                    "static-controller"
                ],
                "x-codeSamples": [
                    {
                        "lang": "Node + Request",
                        "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://qanswer-core1.univ-st-etienne.fr/resource/serve_iframe',\n  qs: {url: 'SOME_STRING_VALUE'},\n  headers: {'content-type': '*/*', Authorization: 'REPLACE_KEY_VALUE'},\n  body: 'string',\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
                    },
                    {
                        "lang": "Shell + Curl",
                        "source": "curl --request GET \\\n  --url 'http://qanswer-core1.univ-st-etienne.fr/resource/serve_iframe?url=SOME_STRING_VALUE' \\\n  --header 'Authorization: REPLACE_KEY_VALUE' \\\n  --header 'content-type: */*' \\\n  --data '\"string\"'"
                    },
                    {
                        "lang": "Shell + Httpie",
                        "source": "echo '\"string\"' |  \\\n  http GET 'http://qanswer-core1.univ-st-etienne.fr/resource/serve_iframe?url=SOME_STRING_VALUE' \\\n  Authorization:REPLACE_KEY_VALUE \\\n  content-type:'*/*'"
                    },
                    {
                        "lang": "Python + Python3",
                        "source": "import http.client\n\nconn = http.client.HTTPConnection(\"qanswer-core1.univ-st-etienne.fr\")\n\npayload = \"\\\"string\\\"\"\n\nheaders = {\n    'content-type': \"*/*\",\n    'Authorization': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"GET\", \"/resource/serve_iframe?url=SOME_STRING_VALUE\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
                    },
                    {
                        "lang": "Php + Curl",
                        "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"http://qanswer-core1.univ-st-etienne.fr/resource/serve_iframe?url=SOME_STRING_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_POSTFIELDS => \"\\\"string\\\"\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: REPLACE_KEY_VALUE\",\n    \"content-type: */*\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
                    },
                    {
                        "lang": "php",
                        "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('http://qanswer-core1.univ-st-etienne.fr/resource/serve_iframe');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setQueryData([\n  'url' => 'SOME_STRING_VALUE'\n]);\n\n$request->setHeaders([\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$request->setBody('\"string\"');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
                    },
                    {
                        "lang": "Php + Http2",
                        "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$body = new http\\Message\\Body;\n$body->append('\"string\"');\n\n$request->setRequestUrl('http://qanswer-core1.univ-st-etienne.fr/resource/serve_iframe');\n$request->setRequestMethod('GET');\n$request->setBody($body);\n\n$request->setQuery(new http\\QueryString([\n  'url' => 'SOME_STRING_VALUE'\n]));\n\n$request->setHeaders([\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
                    }
                ]
            }
        },
        "/resource/{filename}": {
            "get": {
                "deprecated": false,
                "operationId": "resourceUsingGET",
                "parameters": [
                    {
                        "description": "authorization",
                        "in": "body",
                        "name": "authorization",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "filename",
                        "in": "path",
                        "name": "filename",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "username",
                        "in": "body",
                        "name": "username",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "format": "byte",
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "summary": "resource",
                "tags": [
                    "static-controller"
                ],
                "x-codeSamples": [
                    {
                        "lang": "Node + Request",
                        "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://qanswer-core1.univ-st-etienne.fr/resource/%7Bfilename%7D',\n  headers: {'content-type': '*/*', Authorization: 'REPLACE_KEY_VALUE'},\n  body: 'string',\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
                    },
                    {
                        "lang": "Shell + Curl",
                        "source": "curl --request GET \\\n  --url http://qanswer-core1.univ-st-etienne.fr/resource/%7Bfilename%7D \\\n  --header 'Authorization: REPLACE_KEY_VALUE' \\\n  --header 'content-type: */*' \\\n  --data '\"string\"'"
                    },
                    {
                        "lang": "Shell + Httpie",
                        "source": "echo '\"string\"' |  \\\n  http GET http://qanswer-core1.univ-st-etienne.fr/resource/%7Bfilename%7D \\\n  Authorization:REPLACE_KEY_VALUE \\\n  content-type:'*/*'"
                    },
                    {
                        "lang": "Python + Python3",
                        "source": "import http.client\n\nconn = http.client.HTTPConnection(\"qanswer-core1.univ-st-etienne.fr\")\n\npayload = \"\\\"string\\\"\"\n\nheaders = {\n    'content-type': \"*/*\",\n    'Authorization': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"GET\", \"/resource/%7Bfilename%7D\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
                    },
                    {
                        "lang": "Php + Curl",
                        "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"http://qanswer-core1.univ-st-etienne.fr/resource/%7Bfilename%7D\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_POSTFIELDS => \"\\\"string\\\"\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: REPLACE_KEY_VALUE\",\n    \"content-type: */*\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
                    },
                    {
                        "lang": "php",
                        "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('http://qanswer-core1.univ-st-etienne.fr/resource/%7Bfilename%7D');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setHeaders([\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$request->setBody('\"string\"');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
                    },
                    {
                        "lang": "Php + Http2",
                        "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$body = new http\\Message\\Body;\n$body->append('\"string\"');\n\n$request->setRequestUrl('http://qanswer-core1.univ-st-etienne.fr/resource/%7Bfilename%7D');\n$request->setRequestMethod('GET');\n$request->setBody($body);\n\n$request->setHeaders([\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
                    }
                ]
            }
        },
        "/resource/{folder}/{filename}": {
            "get": {
                "deprecated": false,
                "operationId": "resourceUsingGET_1",
                "parameters": [
                    {
                        "description": "authorization",
                        "in": "body",
                        "name": "authorization",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "filename",
                        "in": "path",
                        "name": "filename",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "folder",
                        "in": "path",
                        "name": "folder",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "username",
                        "in": "body",
                        "name": "username",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "format": "byte",
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "summary": "resource",
                "tags": [
                    "static-controller"
                ],
                "x-codeSamples": [
                    {
                        "lang": "Node + Request",
                        "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://qanswer-core1.univ-st-etienne.fr/resource/%7Bfolder%7D/%7Bfilename%7D',\n  headers: {'content-type': '*/*', Authorization: 'REPLACE_KEY_VALUE'},\n  body: 'string',\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
                    },
                    {
                        "lang": "Shell + Curl",
                        "source": "curl --request GET \\\n  --url http://qanswer-core1.univ-st-etienne.fr/resource/%7Bfolder%7D/%7Bfilename%7D \\\n  --header 'Authorization: REPLACE_KEY_VALUE' \\\n  --header 'content-type: */*' \\\n  --data '\"string\"'"
                    },
                    {
                        "lang": "Shell + Httpie",
                        "source": "echo '\"string\"' |  \\\n  http GET http://qanswer-core1.univ-st-etienne.fr/resource/%7Bfolder%7D/%7Bfilename%7D \\\n  Authorization:REPLACE_KEY_VALUE \\\n  content-type:'*/*'"
                    },
                    {
                        "lang": "Python + Python3",
                        "source": "import http.client\n\nconn = http.client.HTTPConnection(\"qanswer-core1.univ-st-etienne.fr\")\n\npayload = \"\\\"string\\\"\"\n\nheaders = {\n    'content-type': \"*/*\",\n    'Authorization': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"GET\", \"/resource/%7Bfolder%7D/%7Bfilename%7D\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
                    },
                    {
                        "lang": "Php + Curl",
                        "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"http://qanswer-core1.univ-st-etienne.fr/resource/%7Bfolder%7D/%7Bfilename%7D\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_POSTFIELDS => \"\\\"string\\\"\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: REPLACE_KEY_VALUE\",\n    \"content-type: */*\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
                    },
                    {
                        "lang": "php",
                        "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('http://qanswer-core1.univ-st-etienne.fr/resource/%7Bfolder%7D/%7Bfilename%7D');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setHeaders([\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$request->setBody('\"string\"');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
                    },
                    {
                        "lang": "Php + Http2",
                        "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$body = new http\\Message\\Body;\n$body->append('\"string\"');\n\n$request->setRequestUrl('http://qanswer-core1.univ-st-etienne.fr/resource/%7Bfolder%7D/%7Bfilename%7D');\n$request->setRequestMethod('GET');\n$request->setBody($body);\n\n$request->setHeaders([\n  'content-type' => '*/*',\n  'Authorization' => 'REPLACE_KEY_VALUE'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
                    }
                ]
            }
        }
    },
    "securityDefinitions": {
        "JWT": {
            "in": "header",
            "name": "Authorization",
            "type": "apiKey"
        }
    },
    "swagger": "2.0",
    "tags": [
        {
            "description": "Answer Controller",
            "name": "answer-controller"
        },
        {
            "description": "Auto Complete Controller",
            "name": "auto-complete-controller"
        },
        {
            "description": "Chat Controller",
            "name": "chat-controller"
        },
        {
            "description": "Csv Loader Controller",
            "name": "csv-loader-controller"
        },
        {
            "description": "Dataset Controller",
            "name": "dataset-controller"
        },
        {
            "description": "Dataset Controller Free Text",
            "name": "dataset-controller-free-text"
        },
        {
            "description": "Dataset Controller KG",
            "name": "dataset-controller-kg"
        },
        {
            "description": "Download Controller",
            "name": "download-controller"
        },
        {
            "description": "Feedback Controller",
            "name": "feedback-controller"
        },
        {
            "description": "Free Text Feedback Controller",
            "name": "free-text-feedback-controller"
        },
        {
            "description": "Free Text File Controller",
            "name": "free-text-file-controller"
        },
        {
            "description": "Free Text General Controller",
            "name": "free-text-general-controller"
        },
        {
            "description": "Free Text Job Controller",
            "name": "free-text-job-controller"
        },
        {
            "description": "Free Text Train Controller",
            "name": "free-text-train-controller"
        },
        {
            "description": "Link Controller",
            "name": "link-controller"
        },
        {
            "description": "QA Controller Combined",
            "name": "qa-controller-combined"
        },
        {
            "description": "QA Controller Free Text",
            "name": "qa-controller-free-text"
        },
        {
            "description": "Qa Controller KB",
            "name": "qa-controller-kb"
        },
        {
            "description": "Question Log Controller",
            "name": "question-log-controller"
        },
        {
            "description": "RDF Facet Browser Controller",
            "name": "rdf-facet-browser-controller"
        },
        {
            "description": "Sparql Controller",
            "name": "sparql-controller"
        },
        {
            "description": "Sparql Endpoint Controller",
            "name": "sparql-endpoint-controller"
        },
        {
            "description": "Static Controller",
            "name": "static-controller"
        },
        {
            "description": "Suggestor Controller",
            "name": "suggestor-controller"
        },
        {
            "description": "Summa Server Controller",
            "name": "summa-server-controller"
        },
        {
            "description": "Time Controller",
            "name": "time-controller"
        },
        {
            "description": "User Controller",
            "name": "user-controller"
        }
    ]
}
